# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:IU+U8ani9GhUN8xlKvKFR8DkYMwhaYs=,iv:auM+sPo+6zzKIpiDU5sUFfhDQ/mmcHhZlx5cW0Gnj6Q=,tag:x1khwItCsoz3XE4XWkykBw==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:6hh/FgssD7UE/JDJ6ukmyzSsYb+CkH2rclyDhwYANwKcolSJyYcQKEUvHf1xf9jVKFAx97Y2czQ3HVbKLTs4u39I98i9sFTVgVBEb4MgvwzpktHBv8uoXemoN+Nf+oUJpq11L+z8w1+8ELkZRBeM7yYQfEXjp6mRDkN2q2VejNF2JuUfOLm7Klk1M9A41r1r7MiJ4Smmf6LQ8wooHOORzYDiEdgyT3tWR3kihgjbMWJIarRkvS6N9sxHlWg43BFS60QlJm5M1+mqlW+zg5ZaOuoZh1OYSr99EKTdiveYDuNqZ1VTFhM/yRHKOEOR+/6exIvTTqmrsOyme5MOh7tEGkv7KBLayV5n57alU7tfz3mPhLvbpp7tV11l4q2/kTdE6nnmLiNvMFPUYwnsEGPwhH2Ghont/SBkpIcHL42cdUZdwKV0Xps8U0+eFt3okdFUv+tCS1Rwvt65pe3i6NbvZyLwRbrgEp54uwNYphX24aJvzbzGlFfhhAmJ5DGxsjHG90RIrc1iKr1K5FCbqsEdmkNR+3K/eWTc4Ou4FB+Jip+1wgslXAjrPmZLLiJ7COv5IVza5YPbpQTkilYj+Mnww2RX2sMIE/G2xpqJShZGoRXM6TpZabXiOSfOj/7DKzc3m0R6e2g8uWuYzuNUl7BuoZjCXIn3Rm3RMpt9irIbAMCdUeMtrEW0anWaFhacv6VERgU3fAZIDAxnfBIY5a3Vo1tcR/75NIyB32dWdeTni1OgovWvtdkEkRGsi4j3n7KOwbPIp7gLayXofQZWoDK/ZIkftBzxLiBLrg7aO+VRK/WHPZtTc8RTBzL2n1HqlCjDY+dk6cwSuVoCCfeov4QF63uzAbwsKWFw4aglSxdpYIcJC2w7,iv:9CxUrI+jOUxlhnQT4yaQBIqESEpg9NZmv7JK82Gu0lM=,tag:L2Z+t1Vgv1PvcH7iEe/rXw==,type:str]
        key: ENC[AES256_GCM,data:thN6lK0IU6zMiMLaR3jN8ByrXcePQQdNq6ULOda5V5BOvW+3RMbtCwdV31M/mqdZKcefpeiMlksvl0lN0H+HntCJjyji3C0bzgoO6j3k/oc7QhVBSFe3cSdDGksMNY5iZ7Q/BenCUQwxbh+ZgNMcBpkaVQdtXdqmIutuvjiCMlbqrLeHI5D3eUT+U3FZBms8jYZhEvgli7Z7Wpg6WN0lJigcpNGIxz4TAsHQdVTwrB32dNLs,iv:TyaFfgQjOwVzEoCGxN44Te8Y+pBo4HkSBZe7OerDKHE=,tag:Gyzw64Bjsxqv9b8aQrSPRQ==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
            - destination: /var/local/openebs
              type: bind
              source: /var/local/openebs
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # 192.168.2.2/24
        hostname: control-1
        interfaces:
            - deviceSelector:
                busPath: 0*
              dhcp: true
              vip:
                ip: 192.168.2.9
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: factory.talos.dev/installer/c9078f9419961640c712a8bf2bb9174933dfcf1da383fd8ea2b7dc21493f8bac:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:zJzlRxnhYuf8A5QdGOkvM+IomuRS9SK2HiG9e7dIkBMiRNlMF96YayeEHTM=,iv:h88T3YK88jAy0S6hJwtX4e+JK5OIoFoEm1X/0jfpZhE=,tag:x5x4A2PbLcgW316X3R8eYA==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.3:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:tnNKGYfzVUoFdIdW+uqBJV5kQnhTfXo=,iv:f9cIlya4s+oqX8LEJK3O5X6pJ7HCJimlY5cb4zZ/Yfg=,tag:mfRVwcCslfCU4rfx++GqTA==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:VDKNKtaBkCtnZJ7OcvX8yoQNgpuboCetIq0KvplUnUvXPYGu2or1++vCxu+lnPilRRJdUNg5JMeJkHNKaqxuWSoXiH0MPCDg6HOSOn7FbSRLidd+xbLHEANMNCKsgfKkfvV6UO8KfJH1Tpelc67XEqF8TeUQvsOFTEJ4ltj5KogRKUFwIpEkxc+PZZd4daBfFvTU4ZcGTRlfOvPX84xpRhzngaTr61Z84a/dVSMpZnHNAGxoIQDIqaud3tMwHihGHZX3bGtR73n8HPBdbSeSQzOP28Nd/v6Xbs8yH0CgMKYM0HtN8xz9jzXwj1EZI18tTxr/2axCPQOpKkFq6N9a4UtHM3kL7qs5rWnlMpUx0LhuLJSB4Bid1XWPBZQPDGlOxjwrnPF7gYCgqhpirVIQ8oXyo686/+Ji89i9YsL/ZtlTj0Pz2G2BgHPGGe+8O+Q8qXqkKAutxwmKH1uwGuWSHtpimwdmb1ecynOOCqHTC9geCB9roBrMu/cQ2rCdt7PhX+MH4L90cBIl+FJfczp/Ib2SNNqbBQSbmkRi3TDvIU6DMJ1pDN/O9xI6EHyts/bQD7iDfaX98jR41bd9drFvceKu94iLs8z0v1TTPACsdLJrEIVaBBX92sI0nNBH51aZce80vBb8PVtJwVzQxRFguI/xZMyBRFQIguOINohhlUt8DFPdDkdTtPdZA3VN4nzyKPvhnPiky7h77+C50e7G7TUA9LLECw3qeDCSJcP8hCEk/enXKqwhOwKDfY8XhHsuyF8YAvaa3oDit4yTIHpnm3Mk2MzM5BQ5n8oqIBio2N7lJx62wfQ1fiHOhSjRba9XYfSx4/nWqlhM6kx/qj0+ISIotd32Fy9NorDTa662m7Fg0KqG3qFTLdFbX2+2mLOE5VrqbEv0gOQ15oaZ5jhsV2xquiaeqgTDSApxJCZadep2+AAKueW9hhQQzO34Mgn04Gq+wUyFkX3Mbw3FQPWXRyAeROV09z56XI3Hym7WamvbZHUcHceCU/eran8IGIWaFWIw1t9IguQRlmSa4UWMCcE571mfxR4WpnkF1g==,iv:AenTq3WL+86tVhW3vQMCXegV+0gpvi2axFUBqDz2AYI=,tag:fAbIumXj2xV0fS2vicRzmw==,type:str]
        key: ENC[AES256_GCM,data:yjyVTZqF4OMbfbmBvGREKGZPUeI9EfgvYKkPmEmdhfmCpspNpdrETi1sovK9FOV22azADFpXZ/xWrsM838KgJVDrD9Nb1diZjJjvEKbvJqnVCR/NKouJS7O+/No9QX1AtfjbPask3V5cL/xMW+GvyjjgBf92rK7RAdZndYTKBmeL86/U1yhihOxVemttEJ7kDf9pmhJ71prMrgheBAnGliM/eXRZhSBtYK7B9I6GqCkcgGKVJcfvr7M3HyE1Yojm8FH1nlfCYltJ/e70BeUjwpEjR169PazczBB/O9hjcrApKIZD/wmymYxp2V+1FHPpPZmm1R8eW9Gu3TwbhNhbJzp11s5NGwxf/p3wiKqEXf3SDrORM0MVygjVsOl/AcHT9ZetSC4tS5x5GahT786TzA==,iv:ADjNjdTUJ+lGFoO3hyq0IMqXub3ylM2CulYmRPbnX5w=,tag:qODANybnlkOyLU2zE+oDcA==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:4n9C8m9AelNekNZtnHle2jKKSNl2cR41srBsHwjRak8UpEwp9dsqB761eJFg1MzOwXRpKMdAa1qtJsaPJ5xn+St3nAj7JxyQ0LGvZPDFkg1ch7GKtyFOYudvJsvTs9/NZpfBL0DtocToL7Wb5ZorMeYWU7rYxK6fpgJuanEFvIxu/NkvNIaO+do7Npj+qM79W9UaEvL4UdufcxnRIm0yiwxvSdmMCo/E4hcw8B1dph33WCPRLsXpvqMJm1bCeysMcm+IZaAaopY1oRafWutiy/g8kdwzPX20uW1hC5h8RL6/NIBc+mrqU6pheXsCSFXlqtVxbbQ95YYGNFj8hDDzNy1eVxBifcXkuYIRmCcawQGeyRI4fLjk2IrvYU6JDtEyvdtd9q40XbdGMb1y+uVSLg==,iv:X6/jINXqDtDJSEVjzXnPzn2pByXkfvm1AT1qynsJ8Nc=,tag:lc9pdugp15dCSSXLqP6aIg==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:mJJtCqeI/UIiHPxEQyByEDvTELfaIr1G91gk3dvWzpA=,tag:EesxVQZ9m+2KQCCdTru79Q==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.3
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:UYJwZfZkDkZrGq3lzJRnDmzpSTvvfB8InFEvBfauoaFLl9yKxmoIDRZp8HJrx/fMbZmO+2NZIQCexIlCk647jb72fOZtq0DW0NRpz5coa2b83VVl50lDYfs237KGar907XfXBL9ZZau9dQafV02R/KVbfM8zmNO5XAiFTPEY3hyO80m+Ru/cIiT9clL52hWPuNKqFqCwmY+MHJnylKFNNK9TCJu048ZffrbSC+bCz5155zYaSl3hFoRUp3PUqztnG0jxwcILwSiSwkqyaduIzCjFUVFVBRoFZ1E4qRFr6+viI0dO/2lFyTYIS6oPLShNE3Dy/ZZJK829FDM8jal7iLHbyKz26rSEzXPN5bBYxlUuYJmd+FZ1I6TnrrH5c5tgqAZ8hLqEFy4f1V1Nr7ioXSTBgvEjnW4E26VAnC8tGMYSlmdbzzCKNpIYDtgmBOH6hmHdBVziHyu7+hHwTkDRLrJf8flWIHCykjr4EwaLI5naP6/1Es88liALMXFoNAAN4hUHPyQNnfx27SHyki5H4wJmZLUPc0H/qBQGzzMOhCMrCVJteZTM/z1L9MdJeTcU9t0VWyuWElRimvQpnzpqc4BNFOygySK8bpvC4T+i2V82tIT4wxHZL1zwpdzmfAh575cwIup+qVs76GsTY/BatJOQY19SSojMr7NieYQLIHLIWr4QQjAJjgQeoyKzsuhBtxnpAMgDDqvpc665yOlnnoALLkhB8+yGEYWaMzBytYzTAo5y55y3lr6AYcQ9D6f3y4IbodjZOtuB8aN5AL/O9Ue4TMGrX9IzneNDMU98Q2bcl6KF8VRCMd2qSmk+nyG6Sgan5WRllH6g4cI8DcRPM2O3I0fq65xTeVgnD1zTNyKVGLZvCUELAsWtTISkgFJgkHoX5nw6bjqBxsLB7Bz8+TQUHb7k//5kpbx/HvxHr0T0dReZ3IM0kG8+yYNQQO2amyYKCjUxqevBgdYIiRuL5u/Qhp/bF8Yw1Uxrtz2SVN4pVOaqtCNjWxdmqqs2T7n0b3Nqew==,iv:xefJmWiBoxnGKP1GIHgc4fbDBXNc2BId60V0Pyn0VtY=,tag:zB+xJMNhloMjX+tbcHaMjQ==,type:str]
            key: ENC[AES256_GCM,data:u81Yg77I5ktfPD/LCZtJECsarwUU5ZTl/sazXOnMkvscA4Rf6AbO+48ayb7Q1yAYlfw2QmrA63yxBYTSwdU3iWkdW625AiP/rXG7bVNQVv7Uc/zMWJfNKjLasnzQtZ6sJamMzrgKAB3rWIZOTis6tKoURNyq/36VlEe/uIFkMrGnKJpiLtIeXe9Cxlimee78+d2aLxBvIDil2ZOQQMNHX+zUmi+QLx3VG18UV3dgkTvLSLGOTp+AMQCiaM5Gm4Ct19GtXVv0LTRIfN1VVEYe2D6rUnLBLodY0vN7yWuj+gFMgdXnUSnskZmJPyx/u2E5c9+dAxXwagdtQSVUBGuwzxnJMqcHeo271LY4JPPn27Zb5+jCLX1xIOu3qDii9iTrLr4i5t592gnI31Tg6I7CQA==,iv:0be5qOlcH0g5vuKLGBzJk1wauk0Kg3cozpsEypydrqQ=,tag:G0yXVWn/i7tMbi2exTg5zg==,type:str]
            #ENC[AES256_GCM,data:yNRJ9C3xWse8aOvM13xJnT92ZtR0shIDig8IIptidtnWztc7+yZD/xxQ7oOYpN39dWPcq4EsKg==,iv:AjzBvJVdTUnCcfr/WaOkR9Pbc5IgVfJ4R+2D7zLM4RE=,tag:Ir+E1hpq66wZhEn88GlMwQ==,type:comment]
            #ENC[AES256_GCM,data:W5EFcJm7GlUultFhfcWDOKF8aqJHRKeb0jX1I057zAX0pK9Mt28nLbCkv2OM/sKUhTE=,iv:qADRnefgj00UmaKeBc1M3E0i9LdM/v0giyCpo7DqbDk=,tag:x+/KSm+I8aY4JJAwtIs8Vw==,type:comment]
            #ENC[AES256_GCM,data:462NtPBGRoJAaCrlv79PyTJWqbeek7ug7Gv4VKK144pHvojg+YIT4xdNJ5jTbD0A2YYMDQGr0FhFI5XU6ROj1HMOCZwsri09gERoHn6bH/Yf7tETLM1pOb4=,iv:SFr2jBJRFb3DIzApqi2Fp68ft33H07L4WZScChoTUxE=,tag:yHNsUHHOw5JZlFPk2NWFGw==,type:comment]
            #ENC[AES256_GCM,data:mKaJ+P74FVEhuTkXL2ZHc5zlmA==,iv:gSTlNBG4CHCD4oh+sFeL9yvlZQDPHoL5IslE8G0UY+Y=,tag:Bs/niQvWK730+O7PW0CyTw==,type:comment]
            #ENC[AES256_GCM,data:/iyKFwFb8IB0y6rroqKx+TA=,iv:5d9vFzop3MXAOcFdDG5qUoeUzTeg+yM5c695gz889PE=,tag:HvZ55KCSfRMEbbYCIedbMA==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-07-14T00:16:07Z"
    mac: ENC[AES256_GCM,data:UqHGgRsxa0GIG8vHnA9HV3178RvB08W+sVnvKaO0My3GEL/4SThwdvRgv21WewwlJ/bVj+1M8Ut59MN5De/8tQwHm2cbUdoyrYAPZST2JIa65ZuDgvyXpqa5fl2vWrvewdz0vG8qPukjv9WP7WRteg8Hc7m+H36r6uCZTtmUHMw=,iv:uWVl+hKBR0B7Mjvb4PATtMKOmhbzK2y5EYBNrc1zYUo=,tag:6/zyq0p459/niFOzUz2yig==,type:str]
    pgp:
        - created_at: "2024-07-14T00:16:07Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DARAAiPBIr5SVdkTwBvOsWdFdxxGneEQdHvresG9Eorqz5gKB
            Q84jmda91DbOESwyetkPMa7DJhrXfSRTJSkT8YqE0ZvlbEoKGnXaLw4GU2+lNiLj
            4yqU687vBWwEHobuzV1/Y6AO7m7/iiYYvRHR+zR2PRRJPJj2LnrKOk5wTw1RJMH1
            AdzmWKASNXi3ChDekDY+aafarrdQ6nkQG5a/2qrOFTfBPRgQY3X2seRvX5q+dXRn
            p+Du2kRO/kidL3Y3UmXcsjr4EMeaYBgikkxpXaEZO2yh/6AAXQ7utP2uty9u6LG7
            PG/ZpHpEN1wP+cSGfRgfRXshRw/r1iPZGTwixBfOZO2Sz4/0ZlsdZMIddDiozYui
            GvEKGjbcLQ+/9LtI16Daj5RVjpkohMxJgmeqzwNArNbaxmbkANohVERY0EvbYlW/
            sRWf3NjgHKRZ2t8NSO3R0jOf5s2YhwGtJofxYRMzYrUM2BYivUaZfQQGAYE/otFp
            G/SW4AebPaf3hMdcLhEod8RAqrfDZHHUo+lOPnhwz/KPn7KDWpKQbXFCJ8dlj9Iw
            7irATKpWdiFyBrwnuf6UKrwqteBccXzM8BqqZ6ZyhgrsiJdN82NHeEPy5rfaE6Yh
            kV4U+MzdLA2bOOMiNt69PUcp8IpcqR5fMhHwO/m/jCvawYymZMHM0NQN3BenG3HU
            aAEJAhD16DmIMD9keqtqfj9CTIh14K8dGdo0tBMU34mOB5nyYGV3m3zQQ3O9dx57
            lO8dlCpnkvbhi0/hDFBr5dbIS4TiBBG7OBMWLCgbyifbXnHQB0hvhaMEuijEJW/a
            yaVKGHoglk3X
            =mV3y
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
