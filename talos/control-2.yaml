# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:DdOO4Z1MezuQStwA3HRHnqdzzsOqAb4=,iv:Fx1wC6jv1txqh4zTWswfL4y154Q2Vtwc1OhlfXVxtW8=,tag:wttjX6kg9Y/aedrMWcO4LQ==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:qEC2LMJIdiKXFyrzPKKKEQPSvf+wZgaY30dcvWBDC3jbgH19mxEqaVDgKvelQQMggfDlMSDg3LUO12S64q7kxlQYgP9tZFWkvhGQoz8Hnhb+RMMQyUucjk/cGpflQbh89tSG3fd8n9iBXCD8MbJXbc2HnZvtGRrCAGvS90oO5Ddlcd5tfYhsd0MEk1BhiwLesVxxzWxlUcDMCqDCaaNgbkMS+2v4T+MogA2ZJIYK+ytLCUz7ju+1KvRYC8DC/yy0c3GMIH1atlcgAjqGuHidMYvfSMQjanY/lwe8HZMOyJj2L/q4gO7LOp3uRX7H6EE9ERtxq8u1RQHFdMtkxfezY4lT85+yTP0GjBUocCPVxH/wHWKmopAZibkZLXYPF99jlf3Ajr0j+hYXwyZz0ncF+dcjUh5JjiNyiDeEWcCHcv9nQWPVCQFVDr4Ws+fuLyVB6y7Z7R5+gsMh8GTIm91Ip5ID2DXPBztVrrsXcSBZ8aOS5/G1j2Jio7a3sksAfVK0fPOVKOZzWy+412CWOEpryvwvrX8jHzM3M2Tk2CpmbMxD5m7kxu5/nIPAQJ+xXgG31xK9SHI/8ozpi6Er0B2zTceJyjPhyUfrdXvinRtCGON1xEGNC2YGaAkc+/fqaHfAyU77QOo4az3fEvBAGfxlb+AsBbqXswEksFEvH606GYnMloqXU9UALmzQk0lB7YgopYVR9DUTL03ZMyOszGDNfy0xemJdw3uvyVRpTFfZw/SwHJWGsiBgSBigjmLQ+lSBkxrf6XdJbzQbmbO0KrEhSyb2DltMfFMZDYVe1B4XxrvTixKaxkKfZ/Uxt+iaNhu2OHA0JXtKGuFu02NRjsHAormI+9M8uPz/IFTnV/qvIl43ceDv,iv:AgKBhV/S+dfOd473Y00x4mRZUx76tYUBU6WKrRAqmKs=,tag:/j5I7mwroJiCch+yVQKDnA==,type:str]
        key: ENC[AES256_GCM,data:JfkyMVngmvqKiMI3LcKnjzvt1rvDuUcHtY5v2SLwBHYrVUr1K54A9cgfMnPcS9jecc5nrrxQiJ/3YYQX62OKeXGU65YD6QTXUz1vU91a2cEXN/en2mrC7pWRsLsw1NxP75Ynw9LxMQz28FqN4ZUlXtbJl83T69B76VLBHPgUUmHvFpiDR9ipIlx/1g9FcGnDARDj4enl89F2LylwLowFWdKzolgjCkXDNu2em14dm53v9syI,iv:sMvd/WZp/rqhihFz3WBM53mbtMaZ1XBaCVwIhcxIyZM=,tag:k4aCnW4Ieft4CtRdv92aWA==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # 192.168.2.3/24
        hostname: control-2
        interfaces:
            - deviceSelector:
                busPath: 0*
              dhcp: true
              vip:
                ip: 192.168.2.9
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:7WMzk0akcfpd+Y9SYV0r3bC19omoIpmGUmI7NXsOa1SoIM0jWORioTDn7Rk=,iv:U7pSWYc55xaTm+LZyBib5AfdEkwRSym3X7+oqKJEkCA=,tag:FKcnpOJyQvCw1QCwMGDWnA==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:ZKpvZGqgNoRQlNJbj1dYC19xhw+aK7c=,iv:NDIBlQUaLDMpWsAul1w5U0ashqF3c6F67iumSpgst50=,tag:8AGlNm5U4v61b96IB1MH/g==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:XPxgLFd6SQsPaNSK2MlL2eRKzTsjQZ8rLYrHkx95EGSYIuzEko+A9UfadYZ/VPFkY8GEAq+WJvS22gpLbWSDJT9cJsVFSYqHHANnzKraSqNdkDFWZjD7wSd6n1U5mfcXbqm2rqektDuZy61wOMyVbxsEn33C0uQ2AvkScgdhkPqWZ6LNZ5hVIsJrY/VF9FiTl4EFOxg7yVJ+VejQla4hYWB+cgmHmYgFK4/GV1MRQZug9QGWrxAg1LbAcrjuQXPGTgYQK9U4bF8KQWHbTNYMKq922lT91Yhg0aGGDfxnoLvBpaEZ1rkwKD4le+l1JiUYCu23RLUmwvR6OiBcpc0zsNqE52XPOKzOXpv9l1OL9Rlc0wvssegT7fXM3RcLoRN0XOP4oUfgspeqBA+IvpawF3OJNiHx1vzZzmDWEVz8fxyONAX0hCa+nTGRrnZPz8I1v2hbyky61cPmidSPmIwDVpbp87v4XexXtBE93+An9x9egfcx9ebyPxXGxMMwdxMU0+yTEALOajvDy321sQTYislLFxoe4DUsNGr8+9he7wBc9mapwMwuRtRzzoIArspLWAyL5d6YvGqIo+veZVki9lCcq+KGMCZIcAgKXaFxqZqpuGkkRsNvi+wnozrZj+H57nZBWNsU3IXEk3B4vkSZnfheVkSuRXVh4BZV1MWmSo6UoB7DOBk3mFox3SF2Ub8CraMk/vLCKeDNVnUaV+3RRI+kA1zGx9eU3xMFLpFuhCQJV7fwNcdbNreEnSvLYsAaSZampPGKMeuCshgCRAYFlGh6waZ8wfEL68tdfu6B/h0dybhjak+P1RlwQMW2n/yhY7aztGxwwS7USMNyi61pnloEIlFLoIsRyd8WHhDzQ6q825W/hyMtY2D5fl1F6rp4B/pUph0fRjoX2rq6Nj+u/qL6twBy9NGdEZq4OC2YG9nmK+R7Qon7QbsB8TZeUOosaXkFIF1vgq8ntJT6Y6w1ZDXdCt/qkqenyD8qrS5FBGlhx7EWPygOZ8r5mWHPy5duDreqJs7CPe0SPJUb4ZOsT9bbui18HxsYSwOgpA==,iv:wapu30VbJxIGbYJuhBG6QV1knX/hLW+JtBw/ARXtxkQ=,tag:bxJMvPFcUsQPkO4XUSh66A==,type:str]
        key: ENC[AES256_GCM,data:+aSgjv9N1cc63HSHKry1TjLpaXW9TooxKXtMcTjcBskCx4mW5w18Qc2M5ETkBMNF4GVK2vyUDLw4nLcpgYGag8pVUHqy9C4O1ak7/rmCPA2eYbz8b5kZrprjVjPvv+dpkk6DByL2u9M5CJK2SOVs9wWxtV9oVCGXXn2YEQu8ocv55V3PQTPGdSXBcWvc9nXUTlja4Aii/lxx+JmPWu7Ip2GGbSeQTJSD8XP87FDSZm2R6/UNuGRw+UHyPWq5lQABqTcdlYlf/q9igKk+Dpt8NOOHIc3ab4fbIC9LHxeMGmXta6y2wrxWLVLJGi0peh2KzuH+E5t0sjFH/xyKzlDwf4tpFL9fCyJATg1M4IyhXBDXse+ThKKsdlYz0DIWh+aXcNahTfhfbE8VgVcM5S99ig==,iv:6VEpRtWLEd97e8DbRoGMZ7As2JV1HvYc26xbBbIBL1c=,tag:eyA1tyvR8ge1EW/OSWuSNg==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:y/0xpgXxj6fSJpEmbLL7zFZad/tAaLE74B5JmMa7IaJd6zYSVpqkXQdrkZ3AFVWN6W2d3BUWFypbS3BZaqFdyl/wMsMX6w0uxfoJ5DQmEwAKoG+GblHaygFT8AOZXv1mTux+B6BB2vD+CgwPPs7n58fN6coQxnQ6tisUr2qAbiA9gnOJVoOlLC6KRd1tHcawHDKvX9OjSoxtEt5Na4qK3YVJ9j6Cx/UeSXm6TFKsREh56frz8bG0VTc5RlIEKFw5RdH8oP8vnGehUgoDSeLCI7GjpXkOYAIT4oQsHOFWwSi8Fq75Q9o9eR66FgORWQeS834djHnA+M/om+w0HOl47jgD/SzPjDy9LuQAwNqqPtyJka0BjHaBjOLWzJh2YRwzgb6K8fU0Zn3GjoNigL3XJQ==,iv:pUEBHtKBEdM2yphQosgaRsska4TXgs3/pW4TlAVR/nk=,tag:1ybBdHUK7XGVDScOFKwd7Q==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:GR7G9fUmf7qu0fSCmgG7OYQJPUjvykpHmovopnXrsNQ=,tag:yoEDiQruZkNEfNUecd5GfQ==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:TrvqXGVTrOm5F+o7zIC/EJnmWI+9GaRSM1sb6rA6p9L/fjlcXQocLRDzRZzVwPfqAdnwoNpeA7D6UzbX3f1dwcRVcY5+Vd8ZsNJFm4SihnPlvdbgFv4fGCw9SQwVRov7k59HOvBaaYLWmOAd58ievj2n+gNUiGBwKkivx8q8csLMsEdqXq5Vv3jmfcXtFQ8fCTT6AG6wTdNS44ylPBeSFl7GOPBep4uxCQOYY0FURHbEyOsvqZObmNIQ3N9zVrwWxg6UDmYpU4HC84JbZyPgj4WNXvok2LhRTcfaOti2hD4UMmLcyclH8cJpnDNSpdmZ/78xvooFN6t1LcRa1dF+EpqItaMXb0yUgn8iD5/LyhIo7pDXdlCzNXzo5N9PXUsrS0HL7YRgsTx2HO3Oli8gQrijJyZytmOiQPnmC/3KN4CbzmUPpsxROZw7xg/rEePQd0JFARGy/82dsqf5rC64EM/DXHU2VnhUUek2XyWsBX4oxZBMjZJc5zih/2jT3yOyWmiV1xrIccHXE/lndzIpgXoU7kJybrCsoNPshtJxeK0aTKRYGhLsW+yMOnkD5lbleRiBH3m9BG/UgIy1SOV4xocni9BvifUxNNJEQdztuditbSX3ZyywZgX5ZXKhleGoAcPCi+zbNu1Qd/0MHB9KWuYw3sRLzfFEztT++sG9gf3kNfKyazmbxB0ZN63nnIOgwtAGhdSsnZpF+O84L2BUHwApCWPLKhviujOrDEwZy+i3Et8x8U/AdLh1NRLuCFRpk+QSR9C+Tx3ltKcs1KRuued2ju469tW5SgC1E922kC+M1y11f2wX/4oYJBW3WPf4uA+qrdgl/GSZF6M7ayoACyuEYm0mapyoSPID5zmtbjTyJArlaLL21HlTlh7ZocUXF70hDY39xN0Fsq9bJ/i/qltgqaEaLxoZOb/qRL5GhXKKpOcZDsk4Ptvv4OKXGVSlZhPVA8XN/uYobK4jpU9a4jPQUv6u8XI+BV2iNYtk+WZLTgDhHkdVs/4NNuppRYDJ9jBYkQ==,iv:2BrYVe5NQchiPQCmwfC2bc82LtwWQ3GPrIjRTQi13fE=,tag:LJLYUeJsxmerkV3scslwJQ==,type:str]
            key: ENC[AES256_GCM,data:3g56d4lWCstUaUu2NI/o/U38VXZdmcfl8nBSi73RVkqZ2Of9th/GF+Ju9Q8A05d4qkcp/R5ZBsxm/wkYLQ5+JEPPIWkWh4daaQOPFUkv5uY6bB8oaP10cSSrdIRKogsRrnZPN2XU4dFgGZzI8J/CaR5kpsBKjv5hc7c2KqE6sJl0bPXeshROOLhtTeTQA83UKczcL1oGBjjzI8aJXBmpz2imK23JdnBgnX6NnfM7M3tgObZ+8BnvjuAqyZnZivqeDbTe4UVUqLcEHc3FMqWagN8Ja4R98GeGPbphaskYfM7w4F3tICe4wMzMcyJm196ATTXKTUpv7PGaZ38nZZGorhU8UIoxJfOxVDkrKqgIKII33r0edQQM9xCB7MYj+fWMMeD6VKe/wGvcEQfZO69jww==,iv:tAO+4SDYEdW6ebfmJV8GDnOe8XHE+iDmeHxcFjmn/Jw=,tag:9KRwAHw8MdjQeKCweAqJBg==,type:str]
            #ENC[AES256_GCM,data:LEeOxqo4sC4hHTsZ00yle/72i5opICQHiIM2ElVsWFFUSc3I1Ca+QJpc6dlbXQNXt9PwgYdgBA==,iv:gjiNqP/LjFdgdiZ/dvxiC3KnKCAmZqov0r0OVTismzA=,tag:pUiUUP0o3qhr271ZQu1TGA==,type:comment]
            #ENC[AES256_GCM,data:mi42X+iQCIKvLlXLWUKexWvHWPZflC7RnH+4W/guSLWaS/cbba+LAVDFf7mlkL1LfaE=,iv:Yb4PPYmyOYotYUgD39T2nZgEh9CfXrcVa0ohX5644kU=,tag:A9lCCf1uAZf2koy2LZk8VQ==,type:comment]
            #ENC[AES256_GCM,data:NJ767jTSXYHo86P1+kDXOrULvNMtgZd7WZJtKcAbBXzdOvLeQI7dFLE+RLoOckvcD/WInP8MN09+MPzF9scWV+IRYPNh5Py9Mc+s9pHWmqUTzNzJmTk3xOw=,iv:hkDMRSS35TbZbX1Zswlnv7YzKc/IebB/PX2xBxK+G3M=,tag:f5RhBfFNtlwBKPHGUdoJcQ==,type:comment]
            #ENC[AES256_GCM,data:IBcn9qa2OqghE6ql9jS7GNAdFA==,iv:/N+a+2uDeaAnzC4rytGxl49oyuM5T7nlpoEG8fjAPtc=,tag:IuIFtSnL1gRGv1gioj4pzg==,type:comment]
            #ENC[AES256_GCM,data:mjhmHO+2hAVQs9NaMERYSoY=,iv:+y827oydjP8mI1lfqyRO/aPqZsmQ0gurNYTmxGt5w1I=,tag:qjJ5sK2+v5vJdnZHN6WVKQ==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-07-14T19:02:42Z"
    mac: ENC[AES256_GCM,data:1t+it05lzR1uBlFS5mrJLGT0V0bvq9dWXa3DlWmFHMraqZGdfFmLYt5DjsBcPjiKfrXp+96wpHayYcqWBY4kYrkMT/yqZh9ZJmeaTTZ7jSgBouSDNJ5dZD/bqv4sFw04mGH5iL+QLSuE3wjMLwAfHAlqG5XwdMBq0wNKqD2hj/4=,iv:FBmlMlpp/L1MOUDSQhFMGd7Y6YKKIPdQBGZsJdaJHYg=,tag:iIXqeOz8J/1jaS85R1iGHA==,type:str]
    pgp:
        - created_at: "2024-07-14T19:02:42Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DAQ/8C67XPlXXot5iubRP6JmPaUFXevSOtE8ENr4I0FfybxfI
            fMcHatD4vk7UaZ+Mer61awm6UeT2wVu12Du6cwiOVTleLHNa4SfsM/562HMpToz8
            eXBp1ZU6ll2hu8zdhfa2U/UhPh1lkiW/KF0YtTKzFIy1Rb0SZF6FX1blzGiOEIIU
            su68SxjwIe7NngiWdJ4Zzf0/ubNQQnaKm2nJj9KbDJwyfvxAYu3rftVN30HH9bzd
            KuCspDHeCrAxIECV5eoU/jkl8Kn1yjc15nrMqLOQI1XAFWav6tyHOyWWANEaq6ov
            SdSm3sxD+aDNZ3+a9VTIYN4Bcw3OFcNQD5qxalapI9icCU4ozxfiKuL1kM5vdKg2
            HL6MaDhVkwERpFEMJHnVazUIoM0sJoa+MrZtGY73SnmDdwba5zMmNcYWAfzAcoeR
            bA5T6esdUI6ny/dujVE5TzVCbsjZi9cm1M8wVleuIZ4W1OemqsFjYT0CEIAopvXr
            0ZNXQuBToHEYY4liuqsoD6teh844DsnCnpdVKaw6aNu0WmHYcwlHSo1PEbwszE+l
            nOfSRSdRK42wyMgYgeKC4WMpJ7tDvBZLF47xpnUu9w9bw5a7klwT4LlCkcFfGDBm
            yMSNTaP0IdaT64yLA454YO3YNUVvqkFxI7VS8rFAArHGTCzlWCWTWyWABDHT5mLU
            aAEJAhAvXdHXEUF2nxXrtGjlsq+eKilYKSajWRQX+XDPj06EfJcDw4W5beYO7bX5
            tNDgzbSSLv5yDWFVlcH0Ti1REoQaYJ5FgjlNSZNSzhXVqqABNvqtJJV13SWroPU1
            PtUq8YAQEqI4
            =ux5t
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
