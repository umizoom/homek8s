# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:7XZFeGiCH/cTy+Zflh1SI0g4UcMeO+w=,iv:IRt6eFFlU4o0U3ycsexLyLW/SBft5V1xQ3t7WJK3wY4=,tag:lpBStAN9gNKG/v8zt2mSug==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:xPOVgCXac5LBPeQ4Ds6p8cYCNOQRHK9Nm2oWpky6lBulGE6mRqmgr2HJqCUwlRbFojgl9hQM7RzjLvBe6Z3joWi14R0v9F83bjF+ArHRdBuNWPYjf+Ofhw+c7Hw8W9NNZdnNGxaI6Vo1LGLeGVpIeRy5jLdZjm5PvC90xX3gB/wyJS1YdT+i1LN7PsgvFgZtCvoWM3V238JWlu66j1sChia0fRlny8dD5cvsjv4QlLDOwNhfb5gegkDGcn8qSMvInFmyThAaahwcL2pyfa+rvZo4EAgehhpu/NE2ukEHcAldLubPVd34m2l122LM22mdi5vaeS0PJEzxVqW2xku6MgIdD5RzqKOfNRHYbRmMcNPp0vMTVgoaF78kcnX0rI8GfEsjLYE8cqY5ATnhECcqrsNY2sjGRg4C2lyekxCKkyKQLLG4VJtGkmD1ST2SoFXsxg65s8tcmtHrTBHN1Acy8Bq49edoVAzOCyEWR3WM8SLsVlcjZnIUxgC0lTROj3q13upOwwYoN2110Pjur66ybui+Fd3aRxoI+a1jymJY0jhtTDpESzBiskwHntDGlu7BHuIQ3tq3uwDOTWmuh/0CLY66gCuDYPGjQFX+gS/Z4+uYa7RugnfO3Hn6hV23yceeZLt64G5/W8rBGPexVYgKYckRstMFTCuosN8AusgGoNggsu4W//L8UuBBX+zo6NPH6HJ1a44kgS8E1RBshM690dMlhEuZQwCNOxtqZuoDrPRVdJEZHrdglO3MJdktylXapxDbTkDohw690WAi0RyQs5zGS9RYovNPmy6/7GER3wfRvxuBLT9DpZUHtm+Uj6dH8YzjkWQWMoLFc97FhjB5H95yPoRuLRkKnnyINJhGw5wW2Wll,iv:nmkbj1hrKVQ98IVKZB+Jw7jjoO2E3gXEugpXcADZMqs=,tag:o2XQBjRTowgWG3ZkVRzjUw==,type:str]
        key: ENC[AES256_GCM,data:bK02FGx2wXrOzHl1QGSCiyMjUoZ0wKDoFmNfJzHAx2akBdpLhQR6vvLEuKXzzFw6h+ieJFxQdLn5IO70CIatjIXLy8tYaDNZb7sfOGka8+OrBros0UtYZrnfZxmgMst/2WhxjcTzASQksc5xkq4p1z/KGZ9fQA1+/edt1nP1PaMy7yjWVjZbFU6C2e7kyIJKrOWDv8kWoJ51jKeQaQR1RLDnuENRCAGBAGm8Hrn1Xq7XJWQc,iv:9AGURBLb+GR93O8+9+a14dqtgE74PZNMKOvo53Pm/LY=,tag:ivRjngfiwiLaz5VGEZQ/gw==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        hostname: control-2
        # nameservers:
        #     - 192.168.1.3
        # interfaces:
        #     - deviceSelector:
        #         busPath: 0*
        #       addresses:
        #         - 192.168.2.3/24
        #       mtu: 1500
        #       routes:
        #         - gateway: 192.168.2.1
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:Vqd2aWOwV9PjAWTnzxdWyDHmDk3KD82vkzeot19UpbPw7qhnPmsnQqII+98=,iv:zT+ivDMYJ8cXfCmO3vkk5LD8cEDelEV2bfMbCrZ7SGA=,tag:ryYQ9De44+bgPH6J8fngQA==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:T3L92YYcGdYqKEnIkL6CzKAqv+7M5f0=,iv:CddbtbcP9q6pHeWPAHwGrF2O3WKGkvyDKQ1IjJUezd0=,tag:UNmeEn8bzUcN6eHFI+51dw==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:y2YxHexO2pVvkZZaAJNDaSXLpwRGAuWFS8pvay4p97Rwq2GKu4vzTt+B9dl2QXlxusY3rMQclX1KO0Vu+LsM1q1XPpNJDBdIBfKWItdTP4+YNpvMSSoGocQ7QtLVz6UL4qHdQlzpiFJV6yrKyUPcmjNkMMqA00ix+Qlg4s7T0FQJoVQAq7w5ELvZtn9lPl4cnsHRrXYIegfylWxK9bygYCchxgYekOVhjQnFdOdCaGLIkodra2l5ROPRed6CVRFmjoGqnIWq6aMBHKmLgmBmxtZYtCGr+hQdHC5r53dBatHZcqEkqd7RkS1WMbReXMnUNoSsBMHRhTynm0smzyccXjlW1sKu9MvDrQFbEDSCafhiGv5wnftQla0Blw75e0kB+On1J0BQmsQHfhj1yLdYYSUcqCBxpznkLh0nEQ/C5ufoqSesfO6GlW8i9WvxNrq+4D9s+mKEp3T0/vYN889tc5WHmKUwIIeQhxZtb6F+/I5OhTJcogK4e0WRGFulxrVToKi03dBZPW7eZPEH78dcVJRpGQQEqm26g7zX0u4J0XROrpF7CgeaiIR6t2n0FYDKYiAdZCiEOyQAOzAag4b7y+p1TLnaL8XoQbqkO3kWmeBsP8tgsV0NAZKPXYYtbYgzYag5tDy22t1B8BdOL3DYbbx5qzPodQ7SL3gjZD96r2F/J1i43+ny/IzISyG41hS58grsotoe4EJuQSTdE7pu1XU0nUfjzegGLAg4DYW3yR9cPywffc9GB9AL4k7knHGpBguN7wTjhW2HWyDOOO3LtAcd0RSKbAs4nNueQAgFmh93k1OUzmpkEEYhKkPk/YzJUKIYMcT3hM51UPfObsRq5ua3lQnvS3oeVeGprhOOD9a5nzvOYDmEbu4eDvennc3STjLkUZ7o5J/cAeOP9A8kxw2APkQM6igQ/t9fuAr7CLVCieSWjtqutTD6TyOPz6gYXeGMIZWWqSxlTNm0d/k+a8s9mVIgkxedmG/UB2Pe4X5d8AM0hhD2WJ8lPfrbN5o/7fQiIXr6A2QVcBbIRFkiVSUDcq0qAKbU6MqpFw==,iv:U92Fwf6VFZTOAbxTkGvtRbJV91synmB+4eTLWmpPq/Q=,tag:ph0+uzLjUbzBl0wBguEfIg==,type:str]
        key: ENC[AES256_GCM,data:IiKZ6sKdtDQZo1gqDZAocF1nijznL53LJae73JW/vpuXTaPmOJ+LcfXPrqSHwp4/Gh/MGv0zMYNOeXqc5rb4xVu1/DJxY2BnuNeLY7bQuir35mIUGl3pWGTPrZjDRCpKHM+5L6DbjO+eU02jhdKe2idmtPvtm20ceBh+apWIBby7sOPF2Mm1N5OuGesxOQlei+G2DYK7Q+0vx846SyHPSYD2TXkhcsM1Rz9QqFwoDRwYo+Ya0MR2ejiqCaczyEXsiuCJGKiLRFnk8lpAG/ijO7ks7xRIHQmEagiq9+reLEC5KfVHHf9mjnvl+SaIGxNwfrZ8wCctRbQH3jCDD/La256qM+ElAYIGl+rO6LL96JjPrchRXWoF/IPx0V9setlRDNgJ1YYNdJxO2I4DzBkzBg==,iv:AEhiIxtKjiVxdTHxxM/Soqnu2w87Rnnq4zw8CrwIHXE=,tag:zOnpcxldIAoXOUSYmfFIlA==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:o9iEp09lnMSJ5vq8yEyT8uE6DxOjLAl3x27QG7UAOBwMx9oFNg9HojCdCrRjxs6xZVPKqSntf+rMl/4BM8E0iHhc8vR4XYCwTo3fOKnO6bnvXA3AORmW2iHFcSaA1Y6LNJwcPHgEZo4d1nxzp7VqApC5xT/T5vlx/UzpUnwjbEWCPu9Sg3v4MvPheyE6ztyVR/sw9jPSF73Xl4C8ngzKbZa8ue6/WsXsVZoKKXf6cPDSTTvo4BuxAySEPc6C8VP/D39q/EGYCh2J4iQZty+5b94yjaq1WqsdqTmgUfjuleTZ6B/Dff5oYUWhfURsb2mkHLjZFKCCRjSCz8Y4vANkvJm7mAHc07WxTTux6YJhlmaHN4V/xfWBWiB2UxrQt4cpgxv4JO2OOPtor1uz9YCTfw==,iv:UncXd4z+CaDPkzs4J8eZwE05VRUeLH682rCS8fc6lxw=,tag:tO84wa2jn1a1UwdB6aurgg==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:iNuL10Webh0VTetJ03Iq2RZxpgtHJ8S85FlGvvJY+ns=,tag:pFzhP69nVLEWxhVbV8SbBw==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:Au9ce43HbmN3tbnOfG0MFqFEgTCKH7i4joZuyHzIRlnz1lbPeEK+nPpUAzEnrVlWeZjvs0u7a88qbPSwCJhdk27pnC0C8+ehDeTNGDu9UJDB980MlylP1VO8qh4atseT10T3cCx+c0wa85avgMqCdYmS+bs70ETWC24LQ1GXITevHIK760UoRTviJQ5QMjtSWNZBz3DeGAGy2IQetX5Gx5d8XqUG9HyaX58r72axnCah9dGwKGIWlZZRSoqcweOREjElMzymcxSNuFPGbCrYT6qiO8ZgadtEtYfBnlyoP/bL+i+dvKwjwaf1T9j4w2vPM3NAI54eJoXc+Z4Cs/nS2eCS6x55EWE6gRs8dlsCrfF9fXrccnYuIVNBB9LoCsFc9kHdMsZ7wRF15Y1Jq9yn8Wcjyn2ZobH2si75Ck298XrMRFLR25X7PgTP+PseHpa45Kch+O0bCPHilI54eHaHUQaghimHya4ZW6d6QEbr1Qs1ldCHCTb3OYEYvF3W6YXi13aG25FaEPdu5dC0ZJ5uuVLPqr2I3g8Us3JShJSsLVfyVbTVI4256c1dKGeTaJHKu6/3DPAxxwMIVClM7/CDkJdgiCJdCvSnnjWD0+Z48+vkdm9RFAktnUua8AFCVPFO5mnWOUs7L5kk7EwPvHrXeztyKyKXtbF/q3DEiUgOXKLgZFXUzE23uNtn6WABlIBqY3oIsGqo3S1Qa1p287qYKu7kz6gJ2qSOxzmtqghMA+OZmeGgWg9BiY+qgPIWG3o8yhfDgp/s1tPIE9ynuCH842ef1Asywau3tBeMdf2FQ1HAq1IzyX1spdYZk6Fsr8pHSPyla2c0ZGamZm5daFcIGHEPYa9rjvuuAoT5XvjjsPq43uVnS0IKHasDC/cxpJhzc1QcttMEOUpdJsvbGXAKg3BdlsSPJV9D9KZlyWl0r3pJSrNkF7d0US1CMIatoUzmtYZqgfZVFQM9XeGeEVrdkaVE7iDB17iL5M4OnQhxDJRtRzMALWjA9igeSr+LkIVih3YYjA==,iv:OMtrRYMfuH7PzesafcoBtDVxitGiSLqxjNrumZCR5+Q=,tag:QF6HyzfoKeZ29m5RdohSqg==,type:str]
            key: ENC[AES256_GCM,data:YcuXN9Vb2TLGHC3M9DZ9k92JD+1C4U/t8dcGQm1u2joeXFPW6zpnvTO+GErzxValnWvKePZCCPtooUT82nG1nkbAIbaJyre1AyXZSB/wbbs2eNQe7TmggB1NH4ik/HPXy6ijomPkcq9AiiJssnpdezHeh5rmzZe32aysim8R3iDn8cKryb5HgiteP2Sgu71LqCULAHvvwnXS8CbKlGKfzp8mPRSPjBANTrUcElViiEUh0ZzimWdyJRUnb2AJTCS7qSdRdZ3xf313uGMpP5upInz4uBkWRL2evlEEnWzPF0L8j8kT7L9GAf5sFi0C/MHkYYanzAqdSZ6dyGCBOXkK+9RS3wdejM5p/7ZWsT7QxRk0z7HhrctkjQ6TE52XJjAdiSp3PJLU+xIggBYU7EO9mQ==,iv:NDwkF96O2zX7xfurc/NuQp90/tsFKNQXs9v46ITpNv4=,tag:jLDBMeViwjN5mTaWudcyaw==,type:str]
            #ENC[AES256_GCM,data:US49M/7nkWOl2JonYS7bD22MH92yWbQ7cPm9VmnHzHjxVhmUdnR+Q4XbAeXGjmJXolON1gaPng==,iv:KV9juAw4Y2qy9FWQ6mBsoKiPO5tWyubur2qelS3wXQ8=,tag:uRGt6Jt9GttWbt4zPQxPeA==,type:comment]
            #ENC[AES256_GCM,data:MQ2pxggP1XkuFn824/BdEgNNLyn6MQUmz6RQUz7rzZd832PvxJRh4n2xkrkbdUUACBY=,iv:zBZRNK48Lwr1HUCoAtQFU/EXbwUAd/zdbn+1CvyHoQs=,tag:slQkeAViOOFFgyNNNLdBzA==,type:comment]
            #ENC[AES256_GCM,data:1mwSlBAwJPg6uT5CwbDNVt0xIkbn5kF+Csd3z2zg+BTze/kbK533MpL9wF4DzOz0hzn+ASHJIoeYp6jZOJdSWK3fuxjJuP6Iqa5JNjpkBq4ttcnN+1J+rFI=,iv:/+1ZZsS7QGuU/k1rnLIAwsqrTFKGg2aoNSZD4n/MKwU=,tag:4N8sKxNL0EWfBeh0oVta5Q==,type:comment]
            #ENC[AES256_GCM,data:+ZQwJ2/GsZ9aZtjfWKgAqhuPHA==,iv:ciLDDBkn+tf4uiNFd2eW4e2RXhXyopcvND3Eo2pYoT8=,tag:Y5VKP+QHKnduZ8E8Z93feg==,type:comment]
            #ENC[AES256_GCM,data:KH4ABO1Lw+4r0VW2p8bK0zI=,iv:w600fLkwdGJtFnF2SXTEOYuxRAcJKDbA60+Zt0yomoQ=,tag:bcoWSxysSAlu69zYhiu3GQ==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-07-11T02:46:37Z"
    mac: ENC[AES256_GCM,data:Ot1OJ0ne8bupbgAUJ7ltNWhwvZhBC2fGQt2GuwFb3vKiYxqm1JHvVFLYygIgEnvbNWhGrHlUTKtVGZhb7zNiZvO+Q0ZPohOpKIJoW4Mm9SY8WrntD/7hgMDePhfG65KGiEZEqwptIBJn+Rakl8iQxCmg+rRF+IrQifGSxZf5QH4=,iv:PeWROhZBhyBvhbECh6EDPZVgetnhL5bobhY4aWmUvKo=,tag:Gm+Q1w8F7rm9xrsphGBt+Q==,type:str]
    pgp:
        - created_at: "2024-07-11T02:46:37Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DAQ//adzGcQagzCNebw01d2sVit8jA7ImHYmd6m2Yu7vE7lK+
            c5zNxB0iJQuJf+ohXKDhuUp+WrtL4xSPF699q6QF8yT5s5ZnStW6VaMnfLQcOs+H
            e5v2ApgfwYMzaX1+A6iuyYMgMAWODa4xGeV7vEv5Zxclpn7AuR7n3e6Tnuk6DxRE
            uGjDdN0OBRh9/wpgRzakTFE0qW6RvsVWvUxhI2o7B5YxUOqSP2cgpeAQiH0VphLu
            hf52GaERbPy0wgPc6r6kZ1slQN+NC1F2sAlPyyo+zQtLN2RcTh35D0FT53PURQwx
            JN6a+4VfItu+0mkM19OQveJdihpCx10jfrYe8jTFD3wCnxGOG6CYQD3ZxK1vSlD4
            cI24ahC0srEvhfei3lWPRPbuOevHxdEACKCGcS+Mqwolw/rM3WtLMFvh8tbBkTEN
            R7afE/pMiEqOe59/tl+2FDcS9oP0dGS52S+hmMTtKk07AenuXWCDbEKeSZWbGaIq
            zoYo4vFqtc3YOFY+gJ5PqYGl0xpKEOkYMFN9Rt85ahfyuYbGlSUeJwwrbOjrCte+
            j3A2viulw687JchulrahZFVtM3OXccHvCzTmnc2EKpx5CQGrk0m0KHBo2ZsEHg1A
            zb0rBOq1EOzxSTbahBpXxqEsz3Z4vkXaj5loddYucxjSO1ZKuOofyCMLVDFRgY/U
            aAEJAhBZbsyP+YROMxhKzBbYl9QJMtRkecaZhkl8mX24I4JSJ8617FUq9E+mnnrv
            /kNZXsRQd6GTwJeWhmRl1cX080W0CcmYyHyW5xSBpbpAujUhw0JjKEy6QPmaH4PT
            efgf8XQ6RmCR
            =chzu
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
