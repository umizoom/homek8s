# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: mmeinj.0ji8jku3frmqix2c
    # The root certificate authority of the PKI.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJQakNCOGFBREFnRUNBaEI3Z2dUbCtVcHo5VUQ2cGY1VHN1UHJNQVVHQXl0bGNEQVFNUTR3REFZRFZRUUsKRXdWMFlXeHZjekFlRncweU5EQTJNVEV3TXpNeU5UWmFGdzB6TkRBMk1Ea3dNek15TlRaYU1CQXhEakFNQmdOVgpCQW9UQlhSaGJHOXpNQ293QlFZREsyVndBeUVBYWd6a1J1RnBMRFIvNVJGbEZ3UldLenFRQk5WSVN6b2JOSmdwClhrWXRyQ3FqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUkKS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVQnJVczU3ZEFPTDNZWjZIYQptaE9zUExMYVJzUXdCUVlESzJWd0EwRUE0SUpUMGEvdUVNQUxjR01HM3AwMm9vSitkTjd2MTB1d0tuSDdweFVXClJYdFE0VlE4RU00NjVJN1lvK2FraWU2SFh6MUdwVzVud2VWZEMwZkVwTmNwQlE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0KTUM0Q0FRQXdCUVlESzJWd0JDSUVJTUFQcmdOcDNJYVo1STZLQmx4T0F3c09aV2ZxZWc0U09WTmNnZnVkanpwTQotLS0tLUVORCBFRDI1NTE5IFBSSVZBVEUgS0VZLS0tLS0K
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.31.3
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options:
                - bind
                - rshared
                - rw
            - destination: /var/local
              type: bind
              source: /var/local
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # 192.168.2.3/24
        hostname: control-2
        interfaces:
            - deviceSelector:
                busPath: 0*
              dhcp: true
              vip:
                ip: 192.168.2.9
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme1n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.8.3
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    sysctls:
        vm.nr_hugepages: "1024"
        kernel.kexec_load_disabled: "1"
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    nodeLabels:
        openebs.io/engine: mayastor
        #     exampleLabel: exampleLabelValue
        # # Configures the node taints for the machine. Effect is optional.
        # # node taints example.
        # nodeTaints:
        #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: QkHifiTOfkCmqDcnVY6zcbMqKtpa8ihwJn0qUD4epco=
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: r8rz4j.q00oz7q28gfe9t70
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJpakNDQVMrZ0F3SUJBZ0lRQjhkWkZuNDQwTDBpTHkyc2w4M1BHVEFLQmdncWhrak9QUVFEQWpBVk1STXcKRVFZRFZRUUtFd3ByZFdKbGNtNWxkR1Z6TUI0WERUSTBNRFl4TVRBek16STFObG9YRFRNME1EWXdPVEF6TXpJMQpObG93RlRFVE1CRUdBMVVFQ2hNS2EzVmlaWEp1WlhSbGN6QlpNQk1HQnlxR1NNNDlBZ0VHQ0NxR1NNNDlBd0VICkEwSUFCQkNMNE1hWW41VU1idmJ5T09HL1JiV2ZpTkhOVHJqc2dVdGNtcmp6YUE5SFNBZUs4NnFwckZXbWVTTlMKVWxFR1lvb0h5ajlkTlVQNGJJbXh0ck0wb3cyallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWRCZ05WSFNVRQpGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFCkZnUVVERk5OWHczYS9ERGwvYi8zMWV6S1BBU2NvV1l3Q2dZSUtvWkl6ajBFQXdJRFNRQXdSZ0loQUs5eEdESHQKNkZjRFpXN2p4YzdmYURiYVNWd3pSd1NpK1N2OUJvdFo3Mm5xQWlFQTJXL3k2T0w0OXFNeC9CN2FnSGNtd0dNbAo0Wkc0bUpDTWpqTUlKVExkbWdnPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUUzRUM2KzdqR3NUMzJxQ3kxQWhEY2I5bTJlRFRhSWN6OHFsUDZHVWE2KzdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFRUl2Z3hwaWZsUXh1OXZJNDRiOUZ0WitJMGMxT3VPeUJTMXlhdVBOb0QwZElCNHJ6cXFtcwpWYVo1STFKU1VRWmlpZ2ZLUDEwMVEvaHNpYkcyc3pTakRRPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUV1QzV2MTJndjVpTmNlamZUbFlyNlRRMklXTW5WVXdFZnVwOE1GSmNYMXdvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFME43N1dYaXhrSmY3QWtxUFplVUVPNmp6YjRPRGFwa2x6VTk2WkhDejFSTFV0VTkwMURUVgpJZkdVbklPRktzMk9yL25QT1RVU09zMVU4S24zbDZSYmVnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlKS1FJQkFBS0NBZ0VBKzFoUUxISDhWOFJTdzVGTHh0ZzZUVi9Rc0liQzVxRVBHOWlia2tzMVBEMDBVTUpJCkJLL0w5Qk5ad29RaWg5K3lYS3E4SXd6WXVsNm1jU1pzdVhZcHZFdzViYXhUN1VqUDM2dEloWm1FMmFKVEprTWcKaU1ZL3dPT2tJbWZ5SXBnMStCc1NPRnc5ZCtoaFF6NFcvZjVkNE1xd2kvYjV2Q0VEOWxGRWQxb2ZTV3lTd2FkcgpMcmRmaElwaStLRCtoUENZbkRFSDJzMVVKN2ZJbk0xQllnTExOTFRBMFRqMENPYjBqMzBMMmNQR1JqbXo5SzRNCnc2VnplTlpmaHBHT3gyMU4zamdLSVYvNFNRa1BVaW9kT3ZxQWtNa3lDRW5jaVpkZzcyRDhZVG9LdG5ZTmQwRm8KaXg0VXZUK2hZTERuaTY0bWY1WjlaZ1ViQXRkUlg2bDNvbXhjNFlsNGt4cnA0ZUkyYi81eEFENWQ4KzBIeXFjVQpMYWFtSGRncEF0Vkkvd0lnN2YybWxuMmhDeXE4ZVc4WWZFeWxlNTh3ZHdNcmhORVloWHkvYVNiRTZNNXJBYTdzCmNaekRxc2tHZEcyN1BJcWZ2a0t1TXU4b1ZOMUpyMDV1Q1NmQ2lhcTk5VUpLalVzRklnN0ptaWx5OUczRUVKa2oKSDFiQkoxNFVzQzhPUUxlT01rZGZHcG1hT2RlRE9vWHZCM3QwRi81UVNlc1NaZjdrYkhUVHVUbFlDbkZCNVAyWgpvSngzQ2pzQml6SUlQbXl1QnllTDI5U2I2Yzk0QTRvaFNKMnpZdVdYWGluc3ZCV1M4cjlPWWIzVHA0YlY2NVhWCjFYM3FOSnNXQzlpZFJvVnJlU3UzQnRybHBOTHVKS2p1Rk5qR1NsNnJWWU41dy9Wd0xHTkhjS0E4U3ZjQ0F3RUEKQVFLQ0FnQXdXNGhwVkxEcExmT0NmdlRtVi9tM28wU2lnZnNEcGw4aXkyVDdHNDh0Zk5VUTZLQTBqcUlkM284NQpkblN5VVo2ZVo1YjA0MmJiVEpTWFZuNDZuSHBoS1FVdmphVkVGT3N4ckdHeW1wdk54NFpaNlRaY09sQlB5enhzCkJqVzI1RFFWL1JkZlVwZmM5dytuZ1UycEpvUm5XSGZwSmVaY2hMbWZiWGxQd1Q0ZHdVN25CVkFBMS9UL3FpUnEKazRjRWlzbkIyMGtZbHNLbk5admFWejlLSFNGOWpYMC9nOGFuNDgrUHY4NUU0bjdHU2huT2JLSTJEaUlPVUtobQpXcUR1eTUvY3JrbDhyRnMzcWcrUmpscTdXekRiS21wKzM3OFhsZEZublBCUndIb0pLdU5pVzJwQ3dkSFpxMkZnCkdna2lmYW9ZaUJxdVF6TTBNN3NMUGE2dnlFdUNFM1lOM1l4NnZsaXg1cTRCTnl0V0t6R1V0NWZqT0N2RHpjTjEKZU8vUitUY1VveTY2dkRzY09tcDY5UDBVa3ZMVk5TdDR2cnN3QjVwaWMxVmRrZldBWVZXYmN5Y3A1SVhzWFBsKwovajl2b0gzWEtQMnRBK0d0MWNYVjNhWmhRVDZmZ250bWpLcUtqQ2pOOUJwR3BHUmFQd05yQldnRTBOOVRJVVU3CkNTOFNOYm9JME4rejUrYXBOMEppdTJxbU10Nnd4UlBxbmJjUUdpSXVuNEd6KzNxZDJFc1pZY1M4WkVZc3Fra0YKVDhxZ3VNR3ZwYVQ4TVJTMHRwT3Nnb016ckZqUmYyeE1VWjZwemFyNDh1WGZTekxuMTEwL21sWXhoMWkweWVMdApva1ZYVklXTE01dUdTS250R0hvTjd0Zk5xbjNqWXgzSk04MFJYd01LbnZBMldmRkdtUUtDQVFFQS9MRVhrcjhPCnpSZlBzSmp3ZEtrR2NVaXJGUW1zZmVKUmtLYVpGUndMSXZUbGRuRTkxZVhnT3BNV2ZXajljMDFOYm10Z1QyTG0KOGdLaHp3dE5ZTkRscmQ4L29Mb2pWV09LRVlKaHdvM3M1eXFUSjFlV2NxMlp5dzhyZVdWeU5XcTJ2SU9KWGdSSQpuRndrSlg0VzU5NEJSdEhjWHFUdmxQUS9XN2RRT3F3U2lZb01aM2ErZVFZNWtuWXoyejdFMnIzanZEL0FEa1d1CjFlVFUrMEE5VklvV1RUMjg1cXIzMzdjQlpHRTBpdmxyVlBvd1hGNFVnR2ZOeEJEMFFaMzU5aEdKQU1QajVsZnUKUC9uVFNnNjFEcDZOTmMrZUhIc3B4OEV1Vy9YVnE4OExiVytvTVBqUStLOVMrb2F0REkrUzRlMmtQa2l4SjNWZQpLbVlCR0RabE5QQ2NMUUtDQVFFQS9xSzFEdWs0UVhQUDk4TG9lbFRPZllTY3JIdkhUZ1ZsdCthNXA3UmdDNUxQClZGSmNaRW12WjN6eUp0RlBEaVRwaTlDYUtPbXN2TWtQMTlzeGtuRnYzNFFNR3U4dTZzY0doektlUElSa25Pa2cKS3JzMldkNThKS1pwaDZ5ZWdja3pYaFE3SDJVVmRyS3h3YjE2ZU1Qd0xqTjZNakF0bGpvM3BVbmw1N1paTkxEZgozelR5ZFZvTjFXN3RWU29xd3VKRTFIbkJNZzd0V0VJSEpjSkZ1TWFKV1ZVN242dVlYM2VEZXE0NzRIU2lMTW43Ck94TnR3RHpZRUlMVkYxaFNkZXV0QlBoRmxGakhwOUhMMVM4UUZoUVc0VHdWK1dPR2k5TGxnWlZKeUp4cVhKdzMKSHQ0V25QN0JZYkNSNG9xaXp2WEVEWStiU3RzT3ErZ3JTeXZtU0NpbU13S0NBUUVBM3JTMXNmL3hhNUN3MjFQdgptT0hmYTdoQUVDcVdlOXdiUndHTnFhMHRvNEZ6T3hCVEQxR3FiZlYwdk5McmpkTnppdjNYeEIvR3EwVG1sek8rCjNyVTl1Q0FxVTkyNWhtaFVKMXBpRHJaSE5QV3crOXVXSFR3amIzUFBQUTdMdVloenhYR29mOVFHcXNnS2s0Q3QKYjIyYWNuQkRhS2ExQVBMRFpISUxvNnBFTERRZStwRU5EbDBPSUtkTXpNNWxjT1FxOHA2OUJkY2tZQjl1Rm9KbgppenFvclNyY2NlLzh4bzdrQ3pRZ3V0dFlYV3lqY3NUNERMTndCbjFxeU9vU2cyeXc4cHV6SURBZkt3TmoxTUZoCmthRHJrNkdJR0ZIMFlMbEJ3b3JINXNSenJkL2F2RTZPM3A2bTQyWU8zaU1yc1ROZ3JnUWpIa095Mm10TVM2cWwKU0NOSGdRS0NBUUVBaG5JTVhUb2duTlowU1NJZE0zSVJzTTVURnZNbjhYY0NGUTU2bWlTdnpZeVBjYnNtMDBEZwpueWltaG41ZldsMTgvbmgrM1BrOFhsVmV5eDhOMW4rVWpSU2dlNXdzVG9RVlcwOExvM0pYMlUxeDBYNFZuVy9PClpsK0RPc0tXMG5vVWFDa1FhbXdwNEFsTHQ3cStyb0x1RHNiWlR5U0cvVm54eFpEMkZkaiswc1pNL2dKcnZqQjEKTzJzZFhxa3IrTWdWaFlaZnpubDVNZTl5N0tuZHZFai9maTUxazhHN2F6U2tOQ05JdENPQStWc1FEa29jMmJLRwpkbmxOMzh5ZmhXbVJhaDFZUjVKMG9KUXlKblo1N041Z2tqM3ljRUh2YVdaS0RaaHdZNzdLbmVsUlpUZm9BcTYwCkZrdHZTNGpkbTU3Q0RGTDFzSmxtN3JkZ0hJbXFSaEZJWndLQ0FRQUpWRTIvVGV2UnNCcWNIUzdvcVdYS2RnZEgKSkYxeTlUZS92dERQRDM0QVdrNG11U0d6cCtJSWZleG1qWlZMS0tCUXhQdXNScmdDb2JRUlk5d2lzZWtISHJRLwpxZGYyUmp3SDZmc3JmZk8vRGlkOERlTmRScnA4MUI1UUZaclkrT3lOY3ZlUVEzUklQWnpQQlFGQ2M4aDRxRDlwCldMTGxGNmF6MTF6anNxSnVab0xLendvWkNkRDd2dlE0UGlvc25UeWhuRlJNWU1Pa2lTaUl0OHZnNThXOVpJUlkKZFVsZGZNVHhzM1c4WDQzNTZqVDlGTkRqeU4wSlh5N1R3ZGxMYmFvakdDSXhWdUxqUVZScDg0VVVFSlY4WnZaOApmVXJCTkRKeDhuQW95VzY0M1ZqNGx3OENpU0lMYnFEZmxoV21Ra29QSm5uaEIyclhoMXNFOHdiNnI5MGcKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.31.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.31.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.31.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.31.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJmVENDQVNPZ0F3SUJBZ0lRY3JWSWJtUjhOdkV2azQzanZhUndwVEFLQmdncWhrak9QUVFEQWpBUE1RMHcKQ3dZRFZRUUtFd1JsZEdOa01CNFhEVEkwTURZeE1UQXpNekkxTmxvWERUTTBNRFl3T1RBek16STFObG93RHpFTgpNQXNHQTFVRUNoTUVaWFJqWkRCWk1CTUdCeXFHU000OUFnRUdDQ3FHU000OUF3RUhBMElBQkJudGhGNTQ0RFh4CnBMbUhGUXlEWE1wLy90QWFSd3JKcWxBWTNwUW1neEVTeU9VS21La3lUeTEvUWdlazVGRzlWYUkvR2RqaVpuNFkKbVJ4bmd0RVgrR3FqWVRCZk1BNEdBMVVkRHdFQi93UUVBd0lDaERBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjRApBUVlJS3dZQkJRVUhBd0l3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVVStRNnBMcE1PODJQCjc5NFIwbjdEMmhWZ294RXdDZ1lJS29aSXpqMEVBd0lEU0FBd1JRSWhBTHVSdUgrS3VMRHptMFBHTWplTmZLYS8KRkNjUmVGeG9GQlhmM1NUSjdFR09BaUJjVjA1TlcxU280UGtTajdaM0M4WTZvZHh3UThoSzlkMFRBVm56ZU5COQpSZz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
            key: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUIvakZ5Y2FVUjdBd2tadzN6azVaRVZJaUM4TDI2U1owKzVITmRWL0NiMkpvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFR2UyRVhuamdOZkdrdVljVkRJTmN5bi8rMEJwSENzbXFVQmplbENhREVSTEk1UXFZcVRKUApMWDlDQjZUa1ViMVZvajhaMk9KbWZoaVpIR2VDMFJmNGFnPT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQo=
            # # The container image used to create the etcd service.
            # image: gcr.io/etcd-development/etcd:v3.5.13-arm64
            # # The `advertisedSubnets` field configures the networks to pick etcd advertised IP from.
            # advertisedSubnets:
            #     - 10.0.0.0/8
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
