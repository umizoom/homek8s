# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:/HW4nlihzoefNErxGtjp9BkJ3k2TGPM=,iv:2dRWKhftDzvnStkl6Io4Mmi0cbDpz5pUVfQ5tm2nCOM=,tag:e1tIw9tE1IikWUbJdtmhWA==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:WcbuTppQuAs4Wb1q5QNSKtUq/Wc0B8PkXlNH7ycJUnxeMfyHc2LklU2/4+qKFD+TnBZR7a5J89Os7rYlfFypHo4bnJ5nJbja1DtUM/iJya86DDyE10ofSoFQWQO8syZJW/03SyfWzrCT4yVRuh9oj3I3kddUqR99zu6FKYZaXEGRh8cvS5D/0N6+WrXU/8+1pXXc8vJdcK1jffW0sMhyIO6amSp7+stkfQIM+Ne+YTeJ/yVvu7CDC6cR4T5XGfOW1QkLH41xmQpCVMt7WZWALmTy1RH1qrsMBdh0W/AkB0+ADlzQdCD91Vn+dAfgHCjkakPlbkpyzlmSk/2oC0TQaX/6i9W7SJAU9zcmHT2cFx6Yw6QvwpIhdq1woq/sHQSebcEcXlGBc1LsVe1W9b3ImqvQP0TfPtwS3Qwuu1GEk3SOYgEXv4nibAvJ+MFTSxe5O3aAUTgTIkOVcEvEbfg4YQAKkp3WaZarUWK1bm4zfg/g87RzCzUku6xrKhRfoX4SAKrqWykhslO3aSyxpGADvfEjGuJ1bUQM/ndvxTMS+B5a6mlYffivkrUefqDWeos1nqrcXVmjmt+rsGvGXOB4PgdoBTEdPlUvVIBDcJEk+WJKW6KPUx2Q1Mu00hRcuqydAX/bbDe81p3usbOR+MtjmrepyeQzCUv0Yrl9/OSThOelma69AsamK9b6N9t7JeVGQLPis13Mvm9TQN1c8ZNW3lcTaSsZAWdwD3Wrm1WLiFvPqYXR8VGHPrqQyp3N9JNBDNURxfg24291htQ+rhnAEkeonO1t0u8K5yt8TlhFnyyPwcQaIOh3N4ZdOmOtP8VCBOKqmPt+sbXBFIWh3DmOvZpcOekOTc/L1J1BKHgncbHf6GEX,iv:bl8DXimO0ZYNy2ZsN3x8+uJtAxxG+kqCI0OnjdPQOWg=,tag:fSKgchS9m5n4hEG7weebCg==,type:str]
        key: ENC[AES256_GCM,data:l2VMRQ7H+e1UL2QRYWJcQ8e0FLxRh5b+/RYvqE+17gkRgZJSrmsAScnJFDNPdXR6oyEmcPVALNG9H1AHbjh1GCu2AZPpnVZJxCqc5Dvy4UH1tfZtcXFojZUKRt1l7u6Vtl3fn555skmm6NyZVPPShErpdSRHkfgWhAzT01uzEOe8p3g9GK5kF4qunldEphuTjb9Fe9GujRhnk4gg7A+ebLeY68RKat0QtjjoR7cEVwBS7rwZ,iv:YQoiUITtCJpWRaiSMD2JwJMFJ4oULeeyjr6/VSkteiA=,tag:ahGi2OWE9hJkHYO7qKrUOA==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
            - destination: /var/local/openebs
              type: bind
              source: /var/local/openebs
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # 192.168.2.3/24
        hostname: control-2
        interfaces:
            - deviceSelector:
                busPath: 0*
              dhcp: true
              vip:
                ip: 192.168.2.9
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:POrzdpX/0anTHLy/vCkLLs82+HZs5s7NjcIv+y1BDPKr/ogaV0rQXmaQzeY=,iv:NJm8EM2pwZw4rw7MGxX8A/XU5Ce48h95b7jUaCX67TE=,tag:9XJEDz1IdTr1Os1tSqSy3Q==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:ojnPWiPQE1zOpn6qAZhd3j8KfX3OiRg=,iv:T58Wq3Q0jRyIeXpUfoq7vjUElgcn9T8mUbguozuTmCg=,tag:HMHJ8npuLclURzsgDejIag==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:fygwh4vhJDig8rRAu/gjrnHEZcWj/AwLHpgNTkm9NJHW5ywm/91P9mguTlacplhrL5NWufVOc5Fee4nhOiun+sW0+1/FqXyAnhXYu3Msvc0x4pIqyBzMbsxuxevB0pte9ZcjtCbC5O8JU3fPuOfdRoRCDe9TSsekb6vO+VdsXMZW/H1BCz0zPij7NwHTUe+dk34yBgGufgA1Zj8yy7N1QtyBmr/hbqJjfzG2PwXkWN6x+nLssgr1wLWd9qWIZuGBBO9Kjyy/YvDxCWC9ILBXIwuT0LPzmCwl1+RG6rfMM0nnb9119Z0J1Z6KcwlaoycOn81woPpyvAyU3FW+WMBrnz6quzUErhkeLj9k3gtOYq78rqjtdkPsrvopa3ZZfjw/e1gP1fj43tpPRQkBzWdBI0CUwOhZIWImxbH8noUk/5lK0KTutiMDS5xP+WDwW9JSuVRCLc9dFXBOHuOARTbBBWyRjQRCiud2SI3Iv1+7JMCB3YxcVMy8OMXcWYe3kQ8U1z3GTcZiIBdbKWc7BL4COe5LfwgDA200iInTNIdWIztztzOXBg156/uCTDgkLGpSwXc87qc/Oxbggx682p3tZ5U0zswdMsvcw//IHshiW3y/iM6z6HQTZHI48MiBfKEpU1rkL2KR+n7sGx5JLzqKmQidmKXJTvwL84rSaSCjBUgurdT3KcYc0dpoqoOTbMSejYtjSSDCAHIn/Crr0QJ8zx897j0v1AWzWSaegSpAguVH1zsOHOjBH8ZRBrikzS8Aea+YB4utPmKt7fLukYFilAaqFy5qDkNQT1bhX9kw+OyWmJIZV88D0psTbzjAo/R48EgNYo9MowW8aTAUMfWSiG72uGtKZhhqi/WQiRT+C+Nl5dojME0phs+8eGQ16UZkg3WeZdHq7lggNSGuWJA2KUYuehbpZb9dK3IfEA+QlFTCtsx3SunoXs8ScaAJLfXTJb9GOx1PhMIvtp7QOc4VFaJhT7/PCJKBu+4XFdm3BERYrdzKRjd+T32bktfSC5x9Aht2b2i7Fo9tCWndizHMHKDRa1zkzPYau77SqQ==,iv:srIegldItgF7ICDCzpf02ZiKWi55TVHI9bJouxjz0cU=,tag:Y5Kb++2h48HrevsB3DBg4g==,type:str]
        key: ENC[AES256_GCM,data:UtXRiFsNM91tCnIJoMGbwLm0Z8I27K+pSKl+o8s6lbctMTyu75OyxSalnyV5Zn+7nBw6m0dQXeGYSywoa/RqZUHanlans+cp2BPvclGJzpaQyFb/xBquytKrE+ZV/UVCBM20CyLOHwJY1h3MnUfgtQR/2iyWQqsTuou+EtHbpQMTRI51w/MyufPZ1su3oQZOb50KZko/keu5U96PRN2Uvb4VczHxuamXrPZshAKRKPa0lb4JyDwLFbBP0DN1SfbUK/Dtt2d9hyXNWdtBTh6F4vBo7cNerRbCvzKa11fjlPpj/keiHkAZB2hCAiR+iPNjzWpLSa+sBtb/pDAB66kOBbGQveA0dVuWY+3KvFlpi7iQMfoUWCF8QMft30QIvdeMqEHFxtTiTfTUyswIQ/x48A==,iv:aGiT/DHVeYs5fME0ynqSOfyN+boJHv2acAbl6IsCNW4=,tag:14PqYDiHKKslx4ruf7/mww==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:wIjNKSfVq1Pa43+UGwnuV7kuSs+9yxoB+86L7l2vnSBk2RLVdKI7ZyUbg5lmKu7Km8nOdMKmvtPAoiIJD8P7rKBi7RYSEeQcAZQbVz1gdSBHtWUHUG0zvyzB0sC1TmPCmITApvLEwe1ZjudftoyK9o0smpad1Ac2KyfZoJ4BcxCVNDmWwnTwU+I+Yclh8D0uygYztkRmVorHMfGtl8vY8HyHAySNDVHFsKKJBZxueXTJFpQt3KYftMLIo/gvtjGL2DxEeAA/HwmSJPtTFKeKOQ5Ug//gpGsHpvbEu7+hC2NrlPV1glvr0vMmAopNoy6OE9Eomi7Az6qvj4JDMSgP730UMgVanpTmyJXWxh/7f5o+OEn9TotLJAef2HEdyzCKriCbbkPFaLgJw8qBlBqpVg==,iv:xY9CX+WThL+WZKhKsfXUkvR4DX2auWeRG99mV6bkTsw=,tag:kW7DIP9cJMfq60CPv/mKDg==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:pAH62vFBlAFl9pKtCAvQVevrnMu6X0XLFFu6pHcQv/4=,tag:p3FovtW46S27i4JJqXrqAA==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:qipKUnaG9MiYhLsRbQ0Fkdc4FP/1MjxiX4UeMQGttt5ZcFy1dyviqDkWd+1DfvqMoulJDLGIhEEew+sZ1et5Q6bAqTRHSaDA9GKp13CJNhCwnRVr1nk45jcXEjsvHkJhhA8/ivYVtsp+nXAoc1rAGcIgNJlw5sEW1iOvfwCtICJoSncogN8peagS/S+wyeXP9nWgKRibHTOCHTDzFK4ooxffQrX38O0nPgMrMZu4/okJexqlp50BNgjSVgtQv7Jtn0YlxKwAEuOrIfKmx9TFVmzwxqS9THjb01gHaWWTFaGarn6bCqYth39VEQruunK6MviJd/0MTgGKGnBFUHTLfzHMAEU+sKidRtN6fI0fWvWxjvfPG8v1LU6dXIJDStKOHoBRVShrLKNML3GkLLP9ulmvIsJ+uFWNxZ0puKA8Y4zeIg/eV8i9oDsFPDOU2C8d1td6JCke97Epm4IcSNkuw1Ab9X3JcdwSAhiafp8tU2rZbzZ+pPjzfO3ikHNWFe+1jlZB2omfVfmrlCMHizqEQ7w7/PcsdYaHNX7IekVoZdlR5owTtDN55ZSv2aRHoSUnGEkCYLSjJH6dtdhXimy248X70im9NO4BdAdmvCRON7vIVzEADrwIQIrOQOnPU5oSqoFXRj0QzjyA/yuts9GDMaHxKVT1ZpBOFKKB/7TGU5tFLYtZiMQvSQfCJG+7Czg+hdKeVbFnIVND9xtO5peu0NlQJp/ARDcirgE7GPWY5my/lQylFDiLdqSamT1UhitR6z5N63tbtGy5nwU/v8ToasglXxg0+txO7BXWJr4ktUH40j9rMurReqaYTunjgurVjRAV4hkkeH8YNFPz6Kui6kvqxfPYnvYoDmOhAawYudY2JYyyvHrcHXaLKPB0XPUErpgZ7J5Lp/WM46CMves32kjb5Z29q8qsS/jXpZkeDzSW4Tabzg3AGNLKEtBMciZL9Z+EYYses207CpiHGugCD2fZ3+p6muNRFtiaLLZjNKBH0dLTkQCkjphw61CzLOb0CU6nlw==,iv:PCDKzvP5iuCXFwObz+g0qiE8aJCtwomRwIPny6hIoZU=,tag:3RG9jFDpb1sMdHKD7vVb0w==,type:str]
            key: ENC[AES256_GCM,data:x0dNVHz13K/guDon3L1Yo0gu0kcjtCti1+dsjhgnJIrrf80xmsG/PTrH5agj6ENQgylht1juTnS50UI9CbKXl8Y/GtM3VzqJtP7pyw+YeLBq1mdkUhlhNYwJFJgiE0umXoQwVdt5vDg8oazNnaVtr9r/Q04JbkiNzu3ClU/e6AyTSvv/bIMfXpjXBRZmYud3PG8drvz2+4T51E6sgs/Bhfel1RcxX2mi4Mo1brg+IiAPgbuDHnYGZrFHUo7Lo8/5WVu940WCfvuNLntKK0lZxCAqTLRLE77r6UVJs/fHrDHmkfGYU+SjIIc2ed6Hi6HNklEI2yTh5moxNmBMEAaTh471i5Imndz6+TGpuegQagt0SRGwHrrF9AlUUXbtIWf/8SHqWLpgIoZxo+tYA9DWEw==,iv:zDHknoNBjIvEZ6SkWqpW5Poa55JHYSJbR+DNhUD7ziw=,tag:Nbvv+Q5hBgA3IryccEVlFg==,type:str]
            #ENC[AES256_GCM,data:9OYIVI5zGuLpywtw5DX8DJ11Z+apnwO74F7Q1KxOrEiDZ/glWQtxfermZRiZgUEKumkVpqLSNg==,iv:44+Izalv9pkwH4EEXMioPlhPzKMzcEsRiMtfBkjRjYA=,tag:6nn1ZuJJCg6LXTksLX09UQ==,type:comment]
            #ENC[AES256_GCM,data:/SZ7kRMdOJSTEcizGxOEnkGH3guWeigg4p7Flvbxc5R7kFELvLkMU4LzkN1hT0G/KRU=,iv:6itHVMClwzBZfDbG/kGGRORoagH1CKYjH8WT3ElzukI=,tag:16usj3kKwRs9IgVj97hb+A==,type:comment]
            #ENC[AES256_GCM,data:g/prGr3ICXb8Atli9ilr6ZjWwTPAC9ySVXe3FmzOmOJYc4jKCG8C8cCtH84wc7vnSWNCzMBWhw/OmSC15W4Ap24PXjPcPIHSQVrhO3UOh360Dmjn+TW+HXw=,iv:DI7yZUQTd6IDpca+zUGj9/Xh+nJwtt1jCcFwHwubCzM=,tag:WsZq3vxH8s/Vnzui/P8HSw==,type:comment]
            #ENC[AES256_GCM,data:jyGoBtXAqJ8VB7RAdFeZt0N98w==,iv:mRUkhqb+XuOXm37Fi0zxi3pxL6dM6Gqo4RGm9e4OSbQ=,tag:dr4jqJjeH4ctqhqOz7oLNw==,type:comment]
            #ENC[AES256_GCM,data:43AckzK3wVTUYUfz+BFis6Y=,iv:IR5eaBbStxzoFsFcIfdVlEaqdNk47JeQZzdTBpw7fRY=,tag:kSZCIC1f7HeINzuYZlhnTA==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-07-14T00:16:10Z"
    mac: ENC[AES256_GCM,data:Yiz88tOZq6ruGNy3bctQQH4mUNgvtAKhcHWxM3uriIKEF4IGGds/p6rPmev4HWryxVJGnVvslDK5U8urwv7L3B+/lRXfy70dYOeQZ/QNw/A5RAIxBtl3oxRpiutgAH5ekRadwVHl4UuSD/+N7aCAjKRDZ4AcJGFz7xq4rYv7Lyw=,iv:pDtlEbfH+Nf/h+o3u4x4yb+H9xQ83x6C2lkW6zAJ/KM=,tag:xjwV/srds5R2cvlhrkqsCw==,type:str]
    pgp:
        - created_at: "2024-07-14T00:16:10Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DAQ//YgCxFhzcuuP1dazB2EBI9DIjFsFON1IpyBa7tvUWtv0Q
            XlWtqaw765tC3dbH3PmynSCeI8WqaniBIgBGT/EDB3tCDURN+xzFKr9DwRkmOa2K
            m/tKs1mHFLizfa+6+Y9bGbOKKaVpSEJv8VFOwfIn+2yx89mNcEX3MIVsq03BtR42
            5Cl7OY8zfb6GqmQqyyr/jkMqU/na/59XbxM6w6yVExlE+CMPDOHLaVxSxOlJr+g3
            s8tjVhe0u2Oj1wRqq1fIg7072LeMJi/82GZaDARazmerYOYVij2xsxqOsp7ADfqU
            A2Q5LIgdD1TbUPhB3WHtRGfnYjJ+J625X9yuhaTeMCRwZuIGH5R4AUQBYEdaGno+
            2P+S/UZFCrxj2Um+IH9Q6zv8dhJzf1gN6X5+XM1lFP7MGx5Cg7DTDLpVdpFXIAhM
            eNe7xnjd0BTolk4txJHrLSCv0cab7nMtu1Rcs1dAnfBlijwb3LNIngSgQgvM/rP3
            wXG1tXCFSYHtom8LdSuUAtpOmR0K4rvD5JG7fZTP8vOXWsTsGbJfr8px3pgJSiWo
            rbAfvYMhujKy9HS6sjQON5TNb/XAKlfdkrwXyuDuBlJ9S9OZ+/l3UYQSWXqdNG0g
            j/5w4sei0DqE7jhMZyvX24ceo/VuBOP0TgYcweyX62+F+b9b5BerOt9LBvEvd+/U
            ZgEJAhA+N1Jhqw0F6HqZTBLi+vR8LmpIele/MSWX7m7m41d/0KEEKnGBMxod2fyA
            q3Sehb0zqIVCRZQ+ix+rSUjpZ59iryl75Z+yFKIYAf7Q07hq9S6Wgyk8s2szkZDw
            sJlCiIQ3uQ==
            =u2Mh
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
