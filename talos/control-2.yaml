# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:JmFDd5KfuyG4TM7jSWtCJOlibgOwe0I=,iv:iBg9FfIB1wTueIk0pGtBgZasJaVhI7kMzPHAy6Uv8gk=,tag:0TnuUOd4K/aM0cIzjFnCFg==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:1mJ78OcEOe2KUNR5ZG99HhKxL0+B/oyfGzxHhgl8R9Mx3lg8TBqQqHtwUIjpYoIFEN6yhqxvFFjqOEWrhx8BPwChmQ7uupBUf+l72/M49P8I5fq2YPMpkrufLyszwuPNAzWqmXZItGvBBTHqwX3BmK0dnAOINbySHDHm1GsVjnKJigMzfNWRiAa6hcWlxFMElpSnWcxX3z9lotoNCWJs++XH95yNQOGuDAsscTNTiG6TAKZSCFqhg9jfAjzTaBQtyC8yNDgZPPGrd3i9xjEL/o7ECo+5L6sDtl3Dfk+XvVCnu3jwJ3bunasBbXver6aeYz9L3doxbZl1h0Pi5WCCjvTRxcXDEoB09wTMqFeAq3Z/J1kPAxlyzwkMqCgypdKv+eWPQM3DK2KJUZjdSI6QbIaRDadO8tto1AA8oS1wtbdI4yV3FrkINnAVWgWc1jtAsXLX+NmPAw72VS+jfwtyqsuaJ+lITLip4tOZp1VzX6uvF2pOnYsqvNI3Pzt6UxVqjA+5YjZBh3GzZfYQnPkCxt+F61SLf+9cg3QcAOOQZ6/40dFHBxtvVfd6MSH0+CoWVLrtqdUYwlcfCM0s4OBTmfAb4p3RBLZK2R3F4HhIKB/ArJU94MJrJz5g8iOOmCE76SWTX58OFKPzoUGXvISs+uvIsjNsKwX9vfrSJBEiFLM1ieQgIxNyZNQlauBVl3wITB6dxsbf8LP2dL1kcZNLLZ/E/y6o+UvajffxgPVet7yKfZC0e9SSCklxatqTYxeOcdsasSWbeBt72oD+QsZFA6+LI4oXHC+YsLPwZuRC/GtFWPV4XtEHzSGAZBEIXuhhkAlhU9AIZet4eLrrDEjYbQYhxe5MsfliMOEOxfWjI1zzxeMO,iv:PnGw8y1GxEjfRWNs1Wb9/alV2EXTfcPKxHJFQJROBwE=,tag:uTNufb34aYLpAhQ5acxd9A==,type:str]
        key: ENC[AES256_GCM,data:SCdVkElB/mXAPF+SpX7CNQ88ZIN0Zmwoi857FI75+Q8DOwQ7C/WyseYhE3RVtClAy3TfAFFg6JUg5JLLDxz3Fj7BpUq6SHWTzRqo8ZZKtk7x4uK3uuSNexyW+wUtDk4MmLwMSKdwV8YsMO8rm4+mlJAq9RbUwgCfyOoh+1g1bVkfqAl2PuydycXXY8d5ALFRwPR87x1HizrIrYUudvGT4nzBOql5CNmiDODBwSQxHfHg+2jX,iv:NGaNlpMBmXXfUYbdL7UY70Ip75jK7T0vc15k0GucJOI=,tag:aj4KVQVv2nOI8H/mFAbqSg==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # 192.168.2.3/24
        hostname: control-2
        interfaces:
            - deviceSelector:
                busPath: 0*
              dhcp: true
              vip:
                ip: 192.168.2.9
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:9Ch8wg1kgkcVy0mweYX5GCwswq9MZwCBYYZc9PBaNOLXNLCEvZVt/zSs6E0=,iv:IKRmWkOGEK2i2dcIOTRgnc7AszD7FdWu/7z2wgjXIv8=,tag:eupD8zcAXOd1evUEr681xw==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:TGi6LWcR8554LiD375UVVffYWXX3F3s=,iv:09sXxJ10gda3MmZ7pylYpusR3g8VhYag1Ao6Uy/1fNQ=,tag:CsvcqLPiv42W44haBvNdYg==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:zk+3QurWbB3ok8nZ0vxBPG/m5zVWDPLoxtlF6u9oDBS14P/UgEk53uHFDwtu2VUyMBiAF5AnyB95gAflJKqCHCJ5nonHPV2scgczyX/+Hq42+5goz1MlUyv8LE8fWjz2Nb1ZNe530XvX04xEamRhJHdSRanigGiyv5r0LGuVP1Js4D29umqoSriWO6IiGCsXp9kdIcHxFzViDMt2ESdLZY7VRBIJi2SvRYPPoZr9hPgPz57plcAiVuIpfH+bR3nsPxd4fiuTC23OEdJAQBLwPdj5u6nwJoWbBXYMZWwp5HeFBXBHbks4Rg97FytwKz5ke/nChfnZVeHF+CUbS9JRAsNVGtN/BVEuPui/Icg7jhF8RwT/eHNXGu9Cfm+TIJ07d2qjPrzX9TiYntumTcJyuvVe/6TrhP0lwcOamoxnwKGecxU6uQVT9tWh4NqEyL5zP9f1/hRuJH0tQDEAnMLzgKSwYf+HL9PfparE8ff1TPFUthxTATdebnqiOZk5fvGqj3VqlNkPiACA4O4LI0zOYvBd3XHdCgGRp3aHg5YCmrGsY24vpD7/Csl/Bz2MuTc2lx1J7RZSL7ePO7jdLlDj2KytgCsIt70Y7b3Gr39PZ/gdBHp84faz6WaxUogknWgM4hsI1Atb0tTmW64EKRzoDVp3WP4Y26vYeJllE+Fsa4lOyPf14+zk+9Ep4+2KooH3VlQ+skfRRbGoX/HcMWKDf0ozeXRCZvQsgZ1jVP/xPlJoTFvohfp5AO81eDUUztssZWMZUDjNAwv+OfQ6kRxKxX0m/2wOiRtLQ1RkAQ41dXYS1iU/SuQNrtZOxXWgitpHgiCGPuCLXrnDe7taF+dpe4eJb/BFdMHaSwa3g6oaohH8gmZDzppNFyBpXjEBHad8l09lKUFIG/G+R4PlZgGapK62K/KMuCrMucpMtl4fOPY+kPnKHy8c9Wakj1VTGgaRfTUOwlVWYPJO5tLHCEgmzLTb9gG3xieSVYkdZz6WitbBaYqnQOszN3aGuEWxLTHylSpAmxZdxiLoSMlw3os0YeD/76IgZinraSv/7Q==,iv:Rp+OPxet7KsiS+YY45oFzstzqs3XxZiizqMFxjNVv7M=,tag:8F4aS2kZafgHQzxEITxuAQ==,type:str]
        key: ENC[AES256_GCM,data:YK8neqjaTG865tqHd5l/zjHKmQblzByPL+Ur9yMKS1utf5LKJuyzE0xLnzIsmn2HPp6ex1BUjPLlNrn0u8sLWiU4MR6hTvvJm2tEmA9y3EzW87yBpfOkycBGLMV72L7BMOltM4tX3IXAWTORd9GTDHypMY29LqukC+A74agGXbnVBXBj5123IwX+FTSZ6y9hvpb4cSxwzyOdWLPcoLdHp8GGFsdHr9/8ypK9mYwtOQMPUpJNqTb5GXlDHr8RWasIFTY5WK22NT4u6fJ844vaVSy3RD/Q9JuQXI3OeMF9cBBp3F0a5jum1yoM689hGBXW8b8x/tzT5pFha/12gn1h1JVXjF0gRyV7q7d2qg4KJ85hxGdcMqmfLoR3eUGotMeqyYM1++zTbsH4Cv9Ro17Zuw==,iv:LXxTK67S3pJlkldlROdpLAZBzk3sdqU8VFv8HU63mWo=,tag:tvDlYbnWN9Ga7bHDeMCAgg==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:dFQpw8zzO+VetznyMIVmNkM97lx+gBnd6S0c+IIC/J/FRWW/9Z/XsLt9MHsl4fz+BMHOrfcrjasnO32Evu1xZ9THTCSASrrnmC6DrnK2YcFiFbC2Y2gdtrtQ+YnhL19jSlUKutuaT3cagh7GXWdZzLjf8doYkLMajoDp0wh3PUugRbNt9IYXXDsHOejaCB7B7pS/RySW59zNQuZWkvYhSX/XMOjS+/vL109ve1OBycUb0yZBLdICtVA0RfdTkbFNTn7iVp9QZN0/OZfPREwDuIGy6DROd3IquUs+OW3h7GviZtzulJ7iF+2PC1Q3/S/A0dBAXrR49x0DOrh1dsKxpa9gH8HcOPJz1RgPGzaYejukT9oK5dguFUC2nYUW42C5Vfbg5Om4HDJepMwdsszzvg==,iv:9yWhr5xEb+80ZPHiStQVf5WHiumPD5eiyYSLOKmDDjc=,tag:Y8GVGFinj9cbx9VNEls1cw==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:xYJh5gf0GJQxyWgl7YJnUDIPThaFlQ1Jxboz1NvR89w=,tag:jx/vULvwlzLUXlpvM/1k8w==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:E2MKPnNG7LIUqR/0KGnIXfJfAE6XclrJ3sHF6E+kISsc69ILf8k7tJafUInfl3t689yoKI+8IMK8bULeuDLROPqTG84UEKsqeHUCqrSCUxKetk+t47ZEMrhuCjSIPDrsc7fyg3w0YAZ5XRSDq6sN1miEelqXXW3SPimC27tQZYw9EDEa6L3MRB71ZrtxB6FiUvmqzgtywCyK4kzWz+E3Eo2wE3SRZ9xicFNL/k/68U8pY0cGCiK6LwSRTOtKpUp+epHdZW4vkRbCubiarzK5C8K1MiaoBoFdDtM3kvOhjNc+H8k/iWa3BwN6l9O7f7I56HT61HFNltfw9ahGON6vt8p3tTb+5OBrDGaM7povb14jxywUrrdlfuoyQXfBcBdFuI4cmqY/XFXsOb8T+yb7aMFzXeGczeQGr92m/Xw2UkvqbGoLLkBKHV99Vfu0CLrys8+BXUeiKj6fe08LYF4GiJdjt0qrTk+4fHwiaAAF7vUNpTE1NcnzZNVNdSMvZTMYaGIZLUL/wRzjRrnWe6jhvoYI6jWZgOjfd/s4NUvGfey7DuQ45VjBH6bf+f1Nkq+ZkRUOGGRqudmBrk+CUB5s6nZEl+ZyGIfOrK4aStq2OGdnuWjiqb8sEV+SHDnHIvKyPO651K9ZQvcTMHS/QK4JSVW9UFR5NQk0gsd2uQVrCbgpo4PNFVv+CrJMztjD1+gX5dUiNxQOl+ciVIoF/CaceG9aGB0dB+VvATFLwfXTTEeinWv0ZrD2D+xxqIvuzEydqP2y27XFtK7kCrX8eGgd41ObNTs/ZySJhLWEMuAsrsOD9TapHgNgbfb1ySZ5Fa65iqlE8qc6ya2I3wdb+3w6xxe5fGCptvI6nE+K1qzH96yPVzc2Zt26H+sLkZVtB8z8TfI8O6pMCKGa+SF0zmtNKZ5TIOlMrPNRgNrzHU/yaIBPf4+mAknhUrIaj18aKFUqJ3kivdiSMChTesmEigFsKmdb9BiIPSTt/KiZZvZpIu0r7Ipd5hss8r+wHc/hAERnC9NQ8g==,iv:/djDSaUI9f7P15DBOeVl+ghr6op7Bk/5wwu08g83wFY=,tag:24Ps4mUykWSz5hoq4u4yww==,type:str]
            key: ENC[AES256_GCM,data:yz//F5lJnfXoQf6XQXHJP4QmJBNbWUfJoj2sTwQHcLyHwYXsZxMSPQz/eLt/CoYxLMMVEG8/qCGarJ4Ncj9WSg+oeFsD5Gbe5xiUkBkJwFvHwb9ooyrJigDbtNxKS2zubC/CquzvoQ0Q8K4mEmIL6eTMUl3/dJVOzeNAXJ0wqajXjhuNCMLPVd1J+eyEmLxGvYvCfEb+so84s7hhZbMT+eps3tRhXkUS4a2RySABmrJqUPPoN/I+H1T61XjlpwQIZ9DUREY1zoEb/9mOrONEZzLAj00FfzxPekNQ3QBtwA9s2ap2/TDT1oqttQd7M6s0mq8DDouhRK4ZZE+6PX2fd17Z1NIMJS2MOi13eNCqiCaNlkESH0jNWtGiSYYgZPs4eY5ef7lQp+Yjpu+pn4u7Fw==,iv:YAM9FVu9qay++YCnPzVzI7nM4phDuv/T3vAQc+Y0Nx8=,tag:J/Xseu6nD64DkCT7tr3oRA==,type:str]
            #ENC[AES256_GCM,data:7iKjStU1FKtNi6JZG0vZvdbng188ncJxXADPC91LQq1Nx0xxtI3D6P3N8GP7LDbdu8xPnCS1vg==,iv:luExpXTL16N+3/NwZtx5uX5kAQ6+hUbxFJv28ZI99E8=,tag:hJp5gfBrS0vlys52IKNFYQ==,type:comment]
            #ENC[AES256_GCM,data:icEbPMevOYqe7yCudOM60845NEsmxa3C2ORiS44fYyhLTWTby0RJdDrewKR6/D+ebv0=,iv:K5mdSv11efBYAdrAE7WSo5CAqIj4a7MDvFjpfrO3aIc=,tag:Wd+lLeBNjqYCgrvyBjVIGg==,type:comment]
            #ENC[AES256_GCM,data:ZjzcLbBr/nlIudMy53qvPVpXCg8mpA6ta3M++ZqkAEFkHAzDKAXmeRiL7C6ZRgvMNg4sdKocYQjdQtBFJ8aam/cFFNMXX0LgzzbuSEH2LRu8+3IaobUiJHI=,iv:FkXTwEN/BMSm/gWT40bRwMyJVpchDNKhhvEvZTaT6v4=,tag:+AAqnIiY2WFEX6tmQXyBOg==,type:comment]
            #ENC[AES256_GCM,data:UEw5P3wAzQ3tUp1UGv3Jm04ZuQ==,iv:0tK3OkzuK+0pxuDzv5pp3Bn7PvaFMzFHwKl+W9xANQ8=,tag:iFqwc+f1VB8V4w9TYITzkg==,type:comment]
            #ENC[AES256_GCM,data:rtP+kARCpp5N7l5ayeoGK9E=,iv:7Y2N9IBnu2iVvCFt8E2r33kwuEAj6Qj+NYeL37tCrbc=,tag:evABcHbwFMa1FlGW83K+jQ==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-07-13T04:18:32Z"
    mac: ENC[AES256_GCM,data:2Bq9+gPD9rZRjBLL+QhVx7oEZ87aYzmAgCe1I/vhPAx9Ly76XmVa0VeIfeMViH7bLhOr8cdM0qLbRswtOWJJiYROnLgbEPPlgXlbfbmRr7R2jdQKNLnzfuAivzWGtLJiykcjpczY67wMApTUB0aFF8GGV17zxgfpyR262b+1PO8=,iv:Y+dTDdnsBeqLS8lu5zMuuZk0z1qDeVTPTO4XgDUq3Fo=,tag:R/eeK+8SmWS0NutLWMSpeQ==,type:str]
    pgp:
        - created_at: "2024-07-13T04:18:32Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DAQ//aeA9PAv4KLPfUOYYU1gTBQtY99axH07ScmIGikDXKH1G
            WcKTP5dBHViyFBPEPi6zqJzS8w4bFxnV1H0IxGlX0wAf0zgtAVA7os/853UhdR3H
            yu8Npis348W4AowYwvBZRGPEXgBaiUEy3SBjUpuvWJ9jiIEC65QHPErjZ7rF2Hpy
            mL/IKQamWby1S2yKmpSl0YedPLaLrrc/sAS8V3TXKtFdS/U8kwtIeNhJSDfZs5Ua
            5E0SPe59yanBZeRwQweGP2c57dMr2PAgcNwEgQ5wXK8yEPHqfMbfbGCEqe0rJZfP
            x14mzEZ9FkOWAAE/z7TV9693SuIxj3zmMoXd1EWRlkfcbdAc1tLz/czoR1RRNDvA
            y+5zfVw7P7JodxbprFuu2Tnsrg1d4sE/oXkz42mL7QadZVqDhey/kQC+NRSOup42
            rvoDzFVl1HCQYI2z5acD9DJcO/cLsi2dp9aJSVzXg6WwAwKRm+aGjE9Ti2DSpQIQ
            SpSQL0cfN231pqNnkO8HWUApSSIEaAaMCOGowRNmqgp2RZ4YQaRp1DrtNiUeSf+M
            aYpTVNBm6azGfBv9Qu/Lbvb9cVp5Shk3PJ5ert82m8X5E3wETZ22tiwahF4RNC0d
            UZJKglTC5BH766qZtMofUPn1YWF2myGfPrIAWVNlaGnbt11dvaq5J/96BA4UcrfU
            ZgEJAhAjdBLVkH5zmhg+h21axHwY+8ITjCos/KXC08QQJYWbAHsJd1tZjrNVeMsB
            VrygX7Y4FmVIGTzWciniGC0G2NRbp6UYIhb8OFyUbGJdSuMVHSXkmAKAWW41vdqc
            TaFaWLNjGg==
            =0UAP
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
