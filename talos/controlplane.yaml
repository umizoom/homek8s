# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:C3F58anxnYBXMqU5//VGPo37y6fhkbA=,iv:cyvgx+8bcvjSYzMc02qBBePb/nXhA1kpGt0IfdNoy7g=,tag:4yjpvVJavsFnxLzrV9eB/A==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:QYpRqK2W4XIsiLGUS5FHjnMAYq6o2HueIgfBHelZxY9lyfA0xh3xanc2WtA3bAUEjyCUYV9jiGEtb7+6RdUJCuMgy7E1NM4oa6bxZ8ffpH80yQNik3cfu3cgcCfpOIMi3h3eXC4fZXcAHkXpiddydmh0RDbmi2WaygjwWgc/7gbRGKwp9b4HyHjEB7xv9FURNetSARilHlX16bG5dJ6zntHxqmFxdUziSaX2yMBxaRP9nG4x4fUITo8ICQ+Q/Fwmy631o09KGnKiBakWrdsnYn8Pz7be1OYZOda7aWw7YK7TauCDMSR3DEeB0GYMA4bhphXLNd55IZE7xeuD7nbI2B0azhiUEGQql9+L5zDNINY7ZaxRFewHN3hgnFQpa9l8KvXjQiZzbsMU5eZdk1V/qTSDnSg8XsDhFSXoa2/M6F5rECPf9H251IIQWxsF77/6dpGlTp7HHg9o6PT+Mmi0RxRT7P/ZLfk2qD01NuHBElnHP8J89T+NvPfKS3OzLawSrPcf2a/W2yRgkMlJrVFomxeVic0IZzhcZ62m2/YGUhwAWewgUPebJpJ4FG9RS1YkBDZaY19hAcATAPyQPrSdlh4YrqeN9J+pxaNeSFfib4AQ9MV4Rl3hyh/Ts/yZX12W1ieI73il7p3wspmxjWtMlreU/d0jcwjheWBPEP4rEYHezeCfPEYCNw7cZ1c81Jsg7LRcaUXhY1rcJMLT6yJdASWaGDCfwUy/l2zGOpJD2vjvbXWnjKD9FSm2CVUM6wbPKc2qUlR62zn1n4dNjkfONp6iCz2bttaQ55HWfToF1iLcqM1vKbpfjBmLnu9iSRRH5mHjo/9CTSrL6qijDVs8ueQ1IEP/PLLrqFqM4mBxHKdk0BY8,iv:s8v8FZqnSsjSL/UueKbW5WS0IIFnMpfASC6mXrR2YTs=,tag:ce5xPjp8nM0uVre9q5QrNA==,type:str]
        key: ENC[AES256_GCM,data:LFpB6ayIAvWnKaXhrgPiQoWsNj7GAc+22GYR/M6UFp1t7wnobKvyqrvYhE2KWbR88rDgYEb3KmX722/5rUvMrPL0dINDT/bQ0XOxaG/cjvG/NIv/2L7JmShomokFbsybV553qR3Zh+GI8cIjOhrrIXidM3rCW9jUTfvzNLFrSV6NTXUpM75Lh0v8j1H6dCQ6vSpn3ZfWtBA5pdMem+b2KehwBpoet0Nazkp5UIvlYOY0gjWL,iv:KmdLOVX7IZsc4byqOITav5DzWN3BeuwTdidDr6pEyLU=,tag:UQMChv6ntgIHgGvCW7pfFw==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        hostname: talos-cbv-2u5
        nameservers:
            - 192.168.1.3
        interfaces:
            - deviceSelector:
                busPath: 0*
              addresses:
                - 192.168.2.2/24
              mtu: 1500
              routes:
                gateway: 192.168.2.1
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:QoZ3X7XhLXBaQ6v+1bIY+FMsxUEeojJv2j2WaNejmmuCBJyRoKqkBRrcpdM=,iv:HId3IHhM8QfxGI7isfNEbqfBwjcxHq/Q0ICWVuOIqCU=,tag:wdf2Oi68z+l0c2d5kyCpAQ==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:EvWoerJrNSjIFuVp8fYwGRrJtJkNuDo=,iv:7cxh+JSPUXQJdiIb+hvowyyZtBaVPn79XrWZUkCQJ1g=,tag:Oe33NFn7BCXq08kmW8d3NA==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:spnaJiUNN/dDfwH9NWe0qAhib2ewewFhxDFkRViv7TFgjlI+9pFAmJfFOPfYUvpEPUKFO4SQeIqlqqrh1Uic3ZBrDkQDAdB6M9BG/hYNlPJIbDP9UrAUwGXjMkr2F7nOVpVp/fcljiUU/1bM0AUog+Vi5vOVbJuc8oP19Ozo80xtnMyL+GyChOlSsQXfua8AbIe8cTbCdDAv5fZpljGHx8BdvOgpGtO4RnU8KLBA8Lu/xhA3/pQTNAhhPiJACizzfNcr6WaV0JXJvXlgmgXbwochCAmLaKAnLQeotd0uZRm+jIAjOQV4Psg+JUhpA/8Mh0eeyqif0niExqYDfCTgQ55Crmm7YKV8evk2A6t1ng++dPPLvA1w1khjM8vfSXBOsIDnB0pGGTMV4jIMb9Vewh9JWafO+iyjOV45OXBwllmj4F3s1eXZqlbjGDF1058DSYOL8OEcVDEBu8EC6fduGW9Z6Fd7vsS4y8CDz8BnZkicxVbMub/uCPHY4EBFvgdMmxSjQcW3LOle29+y10xpx0RUs/XcQ9c5zJuG3hMIZmr5qZ5JWsHbYmCS4XKYkiy0punBIKOwPXYJjj5Oa79j6cDo6Z5Bpm+T3na0ExoLRMQ2CLDYeNuGoOJpIcOBhNF0IuHrmiLWZt0en5ikG93j/1nz2h+iJIwDZGJnRJXk8DoIGoQ6UwsK5XUgyZ4mbS5XUV2q5p6gtypztcODGY42wB/gOXC16qHEdS+l62E/q/ZOPUwEPsAHzQxxgUpT0OGMAb4gYsEM25zH9rJc9O5hI8vqWXYMaXAOiXb1dEshFSYf6aeDkofe2OJ+iPoRl9jSAFrtOQ7hIxXkW4VI9CVBjTPLcChiHojQX8dt9dPgwdWtEZg8rTe1XCOqDyxKhxV2L8WKoNQKLX0LrotPf/hohZBX5NH237uxfF7MUUEEbA73Uhkmi7TylTHxEYcjATJYLBMMsPQU2QjlcrWyZmnqXzSTOmF+y//BbIzLLDJEFrGbXggnk1gDl4ZwTYdhAdPQl3p2QAK7YTS0cDcatnD2jDTNAF6BedeZcaEBbA==,iv:4Ofxj1Y0VPamJ4W+6djnDZKi4n+qJNmBcuGHWmT991Y=,tag:cJUzcDQG8jCBAVbCuBzZHQ==,type:str]
        key: ENC[AES256_GCM,data:i88bKsy0+CyK1KxAzROth/dHnhSRdeBPfy/SC9qqY2+pmJXxhU8qCxZ7w7+G0XySRv3V0dS/88okFW2qf+UYoGKKp0w4l/5jHIpsqgBLTEhJ5NcWaKumfowVN2auxSg/jCiMP6er0HBh48KqpNFBCtRAA3iGlY/XDxxnui+4uWub3wEtlemdPP4exQQlYKN2d+dWxfkRR8Yv0pLqD++4SXDo/FTRySICuevC/nRcgPXKVuQTbgqBOSavT57UJIRPpBA8Pk7Y+hIgHVxblfa/D+QZtg3axXPTPx4GDOGaHHJKr2OnZXefMRbFsYpDVPH1K8sPMjZE7vjR09sDOOMrv8PrnMRN4T4NMjBY9adJvrbAbJLIeAotB8ed6JeLZaZRFV8UlBMopue3kBFdlcK1QQ==,iv:tJSZsocHutNFyE5hhFu03A08gZmYaNzpp0u+otsU1r8=,tag:PrEheRb30dVlEevClOedKg==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:4m1nT79CBJrD+rtnqB30aJuxckzGnawJ4YucAg7wNTsypCDpKS8YLQNHUU5eLyrtMaTfOUcgBtej5Uj9iPsTeewctxbNjujGSnInt4N+y0Tzu1+M+6EdUukcsvGbfXw3OUlDThTVd8dC4kmzdGNED+TbdKGD+A4oJCKowYpBAg2vKIjzSX1p5614ACVsAb9EG6vB7uQUTEdhn9j7UTrPYswrNCnpGKFbwc/0xHSJf18HgK08kqy7zn94aP707hDHKEfX29dWdob4KN8ru/vt2MsDpICFYtt7kUUnOC3w4KiC5GA/mAcUoDDdZ0NJE5y7FxUslXjujuVP5SAUcdiyJqc3PsF7ZZrfTXV4xs5uGes/Vmum0Opaas3G4tcy6YiAwZKdjpu9/ERhYCU2XBO1Ig==,iv:0noSrXEtw1vW2vLmIPOXyQM8ukLfoc/Dzd3rWR2JLC4=,tag:kJJG7kda49yWH3yzaMpHGA==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data:tEWpCNX5M4xYdJ4kybrmStE8cfyOwvlwSVB6cB3XuL1URv6jhO4IoVrXyd3RUMglb79DhThF6tT2ZMRqTyJQ50aNT9DJfSJLf2fpMpRfe9vt5UYPhnxLvNQoaDD6Y8KoOIlqiqWMgikKHhP6DtLwbkJXqI3iQ76qDnFgi4AN2xUdBaRel+iaRjEkwffpAGTaAoSvTiMFVlntAwpeQQyEzvUzaQfYQKgrcoxG+rqxLxuVDuJwIeX87DfJr1eMgIokIhwDqtKivL/Vf1y+0eRapKfDHGIIjnO7xWiM337tQ+OmRegQpNnnbYtuoJa7dpOM8jXhzre2NTTfJ3kCAzAKRdVWpFnFnSEunwz0EKZCOwFMKRpTQ1DE+Cy2FL8mI0eR7FjB+PAzsaFfMRPZBtLn+GHyYunXYFOf6dGSWgsQc4rHQilAWSb+HibVHz2tghneD+6g1DGTYrOfdoIVUkHX6vEWHBcOcxfYxn9rM1rMCs5GuiD7F/dQ2qmGOHqbwKNuQl78nGqxiZuPwpBosdOPcD3ckoVUSWiemCbcyzV75JOI0xxLvyUgaj/CSA4rfEkSU6L4Tpss2cTkqKvQwa4yLvaVSdV+js4o5kZVTUE+G0CXdaOKa6mdhXUvkJeGS06HFqdOaxuxLa1jnirRUmxfpFY+0MqIuY833+YZaNgZ90iK5ioQ2vMCQOWjREj8gE2NQKfhz+PONhdNhKokcGWJY7wjtB6/w60527kuU/OpKbbBXfJQCc457Cxx9UomoLAIFVRDdgy+m1aAnFQ1/5Mbw+vocGQvMMQcPNo5lHmUt6FtcQvUWhrMQxzF8Bcy/IWaXQUlNtOj/lUukYL3cHMS+EZHaqD2IeWin0gUgBcbp3Uwp6sXBjBB29Owx1qYpZ4+qvpmwqjJW7qr6yq817cJ9waahD1jRMhzxLffAnLM0qJClRy8Owd+MbiOFPEKkw6m7vc11qP2iUbBpnG6/ua3lLw/eRXoTdRekFPlfnwZB700h2GscY/zwo2L2JwSXhTEBiLm9EdRlAzVukzNWgaRPLieNpp4arbb5UjnU7tskN2slowsnDTZ5tdNYKltJ+ruQKd9vznY51rXOCZyE3G08A7Lf2x0NKa9G2Bk/JgWU5cwWHPlpTaPZAn3RqSxFxVaGnmiS+TWVUyNnTL21ATiaQdLo8gGj5iHBiNqg/gSHVpqyt7fKi6jcaESMuq7F6PXx93/0DVhYoaPJtx0+dCMBrcmG3c7QyMixAavYzWCBfxgb9U3/cQIf7AqN/STD5rp0p5NoUAa1EgobIXEIh/mHA/7fLN6da0MxHmrYyns8bwGLkwzwfTo+HFJIfW+98LwCAQs4KO7bXzbRC+O5NN/xKQPsa5eMqAEFH/eUMDW1bvpf2gNmMREMTcrxG1owGBBHDJl/JzNmO/NiMpIoKkkS4upcwSJUtksIe/HUMGVtBZm1cr+gH0CLmEGH/9hyWskjGBX9X96Xzx53t7zprFJcWHC2dfvTu1/lJAHffY9DbJEMUNcvTFXqmnc7z3RN836cLOgX7DSPYmcowBjZfVZHVBeb7rYdebN0k+8rqhUTdQ71iQ9jPT4wzvRsMLcXQY6KmVzct9xOu/QjjWse04w/jxYPDvaflH6fDNdy51yhaG6a7FnqXrdFgK234eboj1/JE0qyVPSbdK7j1tUpjmCqUICD09SsIsQWcXD/WvIK15xRB4qnjSHSXhfgpTWn7iKBPePYUMdkTKeq6xOGX3TRYx0RcJE/u1lsq6zqLsSv3yh7PNeRKLQdXvxzi1YsLE/IFxjZ433wPNyQDNWPTrfEFraxVWgHJwGo5H85t6bN0qD7AJY+pGT5+lzlqR4nT4qf4hX/g9GYx3SMvpjTLh8r1f2CWV/qlRMaW28IMXyv4MmshxILnYpHC/whdwEh33aWb+xqND+c+3k5VbPZohi/klig/o8Qn398TJql88GObKSHD4NCfgRmcT1mr6P3fpEBa1/3rE8VQOk2WxTdKV/p5mkT3O3a399eeFK+UlVvUTlB0pj0e22kGjZwADww1g1Q7yVluHSPsYjzOQKqPMcTPSsHqjDkW7JUaBNQFqEVtHZQxj+d6Cga9u6SpFP5fawzzL4tOWOVwJ8cmQhOyAIDGNaKS9DOTwk1/lKxf6Z7xQE/MbuhBMessyycbjZ/6ll0giUQIbI4WfwQiN135XR1myb0ye+HVKIy2Lm83Cqh0c1s9U8Kqy6rvF9Qc9E33ESviqkxNa2ZPYZPebV6ARS/SGARbI57BceI0FwCwTUJotnnihHk7tQYD+jLeOanVW6u07b5WAY3raNrvId4A5fGg6mL0i4pVWTG86MSKEY7eAMPyssgefajnHEtmAObC1kJ9wWUm5B/dx39m8FsiQb8LfBwuFPzdFUYmDSl6TBRo2ZzvkQdBwaC6F80gG5txUQY1dmc9MP6TTXRl7d8gM4ewUwY5Y+Sc8pntp50Een5T9AUwep8nkecJmuuzvIrM9RMPj4JCinpPkn7uayS98o8LUV9lZj6B2flqS49kLxOCl32WQ7+DHhDqXvlBaKcqSEy9iQV8gjJx6V/O0S20YHBc4SYkdJG9tvHIerwK3O7zxXQOBlO5VwZx2prtqSon3BF16HjknEMmfyHU5edVMTczdbSUKQFiTl8ckOFcYwcSFzyxduDo5ManLTQF9G3uNPpGzYvetzxYM0GVSfC+Y+SOH2FAqJd3qwnxCOJlYTbYAkscj7KkjvZpVBtbvEF92JcCipanHJ7zSewF+yygGlFDr3n+6s7yLkE9Tqlbrbghqqiu7pBwkF4mIconw4xKgwApK9Bw1sEmyNKBGZYwy/NdgStAF/x+Q2FhZwZYiR5QBcaRCWH+9qa/q3Av99rZSMyCiN8WMKkaOIgAVfE6rFxwy3W5hdnbEWtGkej1mTQ1tcHUzenT1CafheV5kZvhWrbgs1qWZD6uDWe2yZnR8xp8c40cqJWQUk3QaIBgNINjwUAYTIjoAUtewDyyxa7xw15vvC773aG+SbPXMvNKkwMY5cfXVH5UN8nUWaJDK2TBscHlVe6BFWrRkwBNfAWqAgk0tEfXMGPcwbLdYbS8iW8DGUWclokQQqdyzQFdS8QP0yuUc7BttHbFWQzIuEHo8bU6NMKpChWSjLyeuKoq8yplM7r/yKj0dfA/jATED2KS7qRK1O/vu1BY6c5vT1woIPYJ4EJIWx1x6SwDnynm7eic5PNDtPqPqY+L9c7azxoXpiCshUmM9mfIPg0LGynE1CRRReqsE115nQi2cWMTFrAnf/RxOu16Qd2nxEyoqeIEJCmDZ8baZP5Z9J3iZosKkNBbskxyKQEjF9N+MZjnQ3SLGkM7jp562VYzy3pN4PwOSOKF93ztkCNbIBhNojnnTxTb4QZFQjXveVBa2AtOeLlu81OQycR3xotXmtwhQ1QGnf9lkdDJAxp/jzyeaBpOXhpTmU1v1cI4qN91AorlwlmFLNgy5HAFBZMCR+s5vTFAy9M3M5R9CfhERAcnp1TelUAa/6wez3XhxoknEUqkc2zh5PGm1ZAx6qXx3gSA9fWE6KNmvOOvEtDAnVL1xM5jjZ5p3P1p72tkq2T4hV7s5QGw9f22hz4KVB1WTp5XeDeGWiGnSr6cRtFm9/6QMRaJUo1s+NMTKOiGS+YHw2cE/b39t2KK5O7iIBDBbY1MIFWBw+xo99eQSeTUu5IKNt4KwNrqh0WgYzfmNNSQtSI7Ji2nj1ADbB/qylKGPlG+6dk7Mjye3FdMh/WE5hNSfX0Was62YOf4LMlnIqPkwc/aerB8nNxxOf6A/dcxPR4CSidcOJR62UixzOFGMZPdsFnnBrl+Fyf5pEk7Vy4dySyQq8espPMHqDWkNXZtjhjRxR0O9gb+clWvDRPs5gP3Y5FThA3Hu5QgOVQACbMpwalv/WUM3jvHg8juHrFZymSywck3yT900iiLYZXZTlNbSW6lnzT7lpNPuWY1Dpjw9onsbRYTES8JQijX53z+5XvANf2d9K17VY7O/NmMh0sjPbmi8kpSkyB6VXGQ6ifmJWnM/73Ijqom48bSwOEaHs/vhfVSupWOAqaa8par8N3CO8ZH2KSIPPc/ifhZ+DUqcZHLz9wxAN4TMjYdEagSNE/q6kvISmr4bAa6ccTE+AHfKbwhIZ2QchW7ReGdwso8aeo81XIKh6aszvkXa8smoaXf7G4CilSh34YEfWMTbvrB4aO7n2SqF74aec0Hb5GbUlt9G3xrHd1efOlgbOYirSSmQfwf+p8b2prufe1L1spXt8OBjPNeTv89/Nes6x2MZFYeU78lNJ1CSl15j5hTjhHX8auL9JMUatKPPZpCYF16StxoeFMULNRo4SZFTbhHhjhGrfmxp1r/lrqHpaMVHwj1b08zhc+/bMaOueH+4cNNfbVXoIJY/K2+CrApzo5lCXlR0JFDq4zSCP4LjCywFZ7k2UKydZeeMmZFvbFhtghy8FsxNTIzrISk9X1O8Zj4UiMWNzFgPqqwuVybArkwC51oIcqIM2SfJRfvCd6VA+MZSF+i3aF1DNwHkw8AGYpxCvQeD+qXCwijQho4nf6+JTM9Bz0Bw4R+n+CtOisCPX1pCc+yb6Pkwxkjumh3b7g00PtGlXxn3eFBE9oEy0iA6K8vS/CMdgb1zR99KXhIK12ofYZFJXPqRMTCBOQc4apaAc6FDPgh1FJSj6grdOU73SSi68UCXTPi5dIkSJeNwGyUipKTCuRMBnBwMJZajzO1L2pxMgHppo6dnc1yYzwVZWryzMtb0BPRaXm2VuqBJSNt2xMwDtrMhaICb1nsWYvnllpTN7Ien7BI58TsNXJO1iO0wAXk/opPdHcIzp6d9cwlOTGH1p7UFFFXqb/7hDGZr4YJ3G431tuAqnqYJhXh1UJup1Aoo4omKElsZxGlZj1s3C8FGPE03RRsXY15A9v66fbCJ33Lq1sLWjkv8Lj66zgf9cCU6Wm4wbIjdIHSyTjiYqtfVQwG1KybvzS5CIrL0yar1eYa2iBvGR1FnLQozcFx564BmC/y5rAvqrBNUO1dPSUYvGj0zXCQmgbdqLDxnca9x3ei1CaIIEYlI6RMMP+wd9rQGg2BMS8K6FSpp8QFS6jyZfTOq6uh2Nx1AMZPjQw5+1/SUbRFi4UBISXzqe3O2Tkg+kzxc+NLg9xFBZyjJvPl+/w0YkQuJ5zNbyjrkaT0gpdHIEJuSg/ElcO7TXcUYd35k+oMF3UU9BtZuuTCTtVBy8gwkOPxxlw+we5iMDXL42wMCqg5ugy1PZ8fXsoOgylT01vJ2LW4RpPn4jiBuM3Tm9g4N3ZsZyYf/P36VwSoK0RRJjJY8Jjxjw2LYYAXinV5u//aostDjdbgZdTgdBnrEG8zlorc5PATJgaVhNyr0udJJdL6kHpL6JUGceJ8DwEvCONu0vt1aaNSwY00Oxn2gF8ejmWmWppssW/Uw6bl/awEhJEHxqhXeHB+0elA6SvilMksgy3zJmRTN3tlTM9aK1iEZfkkIjt3ykvWhVox+V9pQMYpFLCr4DFFvNMCX1SkU0VacPRBEvzFdwCY+MHcygS3Q+QNPzrsYd5tcHMXbnF/vM/HFMLMbB1JKAOJqWjrwTFp+uPdKpk+9dziUoa4sTVm5b7HMb3M7AgICNKKIa2WXohP5fkfSdjLLCr4OkJh9Qhm9Ul+Vz3bqSy6v1ez7Kt2S/X4fk0IKV84bRx49EMyIfUVsLi2pWDhL2q7OtYdpE96+loauz1SlnFqF86KF60I9LSg==,iv:r++zox4N4DvZPw2YdrVkqHIlnNatWL+b+mQMOIP3XsI=,tag:OHeLrvEN02ezU7jfVHgtOw==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:3o/evkIyZy7cyqbLEFbBdEeyidsAsuJ3eap3xATnQh8rQ4fK8xp+6bvMhQc5euZCDxkPCw/9QvaOmsj3GBSklin4lmUJUNOZzbsMkPI7Vj2jqEUzNPXuSShg/ExM2mYPHYGqbD65OMN3T6BDqO/Rw56l8pgWkVneAlI5u8N66hLIfPgpd1vwBpGJKMRhGmnzMCX1xSefSbEJu3+8p39YU7zJlvCD3vDHp7PG64/PJOdyu1SURTFUnnK3YSz619Ke4fFsIxDKoC1BHZXo5ZurOnIfRbc5ORgZacWtlKuhsTYWLosJyfqDbq/goy+pYkgP8l0k2FBTBfRr7gOKAa3xxS0JKfR8aKXTrik9ASsvpsQ4RwgAQJbmj/mudgRzVIlj03za3AkAmdpeQOIEO73Rez3zrphXfbIzKXZ4rgBPRvqrqXV7fLWGmlrgoUXdSxQcbtoe9IHUnmweoQQXwpgUV74PwlGu9neddwUBQzl2eEiDlsM/m7P2YnaA9b2vXK1ZE3uVA8qqg47mxER7+TIseOlQripVuY1Yy1ogB/TlFqtiBOBV8uEsldJwgAlT/tIeFpK5u0a3IPrMvsKEhL3lVIu+72zzVWmq7dZe2uYhkVsQiU/KX0azZ/mwOtrFijnegDzIg/dBrVVEgx5r4b753TCP5tk15DicoFHAd2ONojFL+0+sBezbS4sdlEVKany6N094C+4MxmJ86jey4thHK8puEz4XD7Q3jUZAOB1gC8AXTk44XjNkmpa7EjbRKM8j0G0pvuggJKGaFEPWW3s2cPh1HmuQs4yW0frN0UA3SCcSY13W82VzPkAObyulhwaX68HSJ9h+VvF76kKzEQxHi4zjxmrKJ4oCeggKUn1WOYqi+i6oXNbppaAe5ipCu2c/MDVAed5R1YQI2tERoM8BLrXEb39dhR7IogzPCJKNu0MqCRIlKRKEpBLznT2Dljj/iEX7rQ4g8bwPjLRlnRJg1Tz67RTnI7espVgCpwMFYHn1GkeECEI/PTItkcgL1uNA9oq+mQ==,iv:rFvvphqw+kR3ZJHUhnjQvtY9aqrSK3ZKChFE1/CbJaY=,tag:cI3SIGhMfgYwypDqvpWZ8g==,type:str]
            key: ENC[AES256_GCM,data:LEFCz/OGdS2VzvjpthOaTUjLSjZ/BzcYOKC1rCh/gN0QvoYc4g/ppqLhJbPD+XrHtESb0bLmNusg1D9BWZXrmk0rJEzPuT8m5MMiDwyCXzt//jM+KrU1fOzpC8bBy5OxYhtJAFw9lDzwQncKtlxt7271d843RmyI8axd62K7K8qhUv1hOfgfFdXTNJRCKAob4C3mHhlnpmuERrqsNcMVAQ61YKOf5rWROfb4x2zWq028aRvp3GAmg6HDX72Fr/Da0Co0T/j+k3UCiBMChphzmpMQ8rVP+yb8uxxo2ihEsV3IcAOzruVpN75WdFQTWyBNgMp5LsjrCHJO25Zsen9m+7aiYPIiFIF55dYRDrEFd2HKmB/D954G7RAmTIY3e025KTeLMYRpvrD1ZEaJV7tsZA==,iv:hP+6UCfEhwrZxwERNCHHYMfkvS7BPhmN/j5J78Z6SYs=,tag:6YObE+7pANryUpdYMsW3Vw==,type:str]
            #ENC[AES256_GCM,data:brywKBBBffETF9crq4HgVHJA4/8xB4E6o1NE3c9njndT3h2OACGRoBflF+uL5WFNHq7o8zqjgA==,iv:NbQ9pHJaHghPbNQQOh5v28wCsg8a69pKj65Uhg/aTaI=,tag:bbiZSfKHKMXC8w18K1qVnQ==,type:comment]
            #ENC[AES256_GCM,data:bNJ+tS6JvSmNzNvNvWvF8v1tUJq2RyL/gah9Kcy7fm53XgobXr7LKaVpqhGXtiSyfY8=,iv:zoIWdBBx1LnJIC30gmo96DBwOV+hr09mGOJ2gBycnFg=,tag:FLCqhpBUa/1Y7Q6AncRVTw==,type:comment]
            #ENC[AES256_GCM,data:l837iNiXoHOqQqDzJeKMQb35IK4lHw48BpVmUZtiGRMMRNXRMJDxqy1NGBV3woHoIXEnGbXgIHA1tNgNb8pyQwspSS3b+T9OMRomGfWQ1RTyIIfpjy51EBs=,iv:n/u+QAL5R3Hu6UEJV4/3Q4vlDm6kJQUvta49Xda72eA=,tag:zx3nGIUoSoE+8VO5lQ5U5w==,type:comment]
            #ENC[AES256_GCM,data:+3quaxwXDD6FLoRZcCqRLR1CKA==,iv:rWD6Czbq8vV1GrvLaq6/EUSt1N5L5acqlL6sxeOAJUc=,tag:N3mshQWdbx5avFkuU7WYCg==,type:comment]
            #ENC[AES256_GCM,data:mjcfHDuk1eImTvX2MvesXVY=,iv:ss5fvIm3agCRf134FmNxNB8fj9/Y9CZA8XILfLituDo=,tag:BOAsIptvGmm0niW9XOKS7w==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-06-30T16:53:34Z"
    mac: ENC[AES256_GCM,data:vxd5+/qzIoOb+dhjqmS7nPCymK5kF8P+Idz4LuDtKQ7uqwXJHBEmawC+cbzlk8+798IKwHhdAbw920mJedDRnvKrTJGgXCiMnYtA93EM8tRae76ImGJlsE7xmoE1S2VRCQ7lMk1CufSYxNwrSUup9II6KYOPG3EvpgxTb25I6F4=,iv:sDDWloWVe1bloSJk6t6aIejTd9sIB+2EVoMvYlqBCI8=,tag:V46d9gDLJZZNWO0Tva7AfA==,type:str]
    pgp:
        - created_at: "2024-06-30T16:53:34Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DARAAlDpDd8LuWm3s6WaC4zkPY8yEizh0QQ3SLf/wg1f1vILM
            FjE3dmqk9/bzpsnqKLrqBDYedUMl+DulrFI6rbfh/jqUnMQyAQL5RGnRwpvWZSgd
            1dqXpvaqyYOgAGHM+1F/WWLkTENPUcxu71NV3brPAzWx3tktajD7cztgJLxATj02
            v2F75e/QsHNJ8AUTduUGZvlc+ceyK5To5i094/qg4gdIhM9YUU7/SRV7Q38vwpwZ
            Ul/pQzcAde672IZCQpAslZpwCyGzvfF1+LgG4xFPsMTGm4KwjfaAlg8KnIXoT+aX
            nMuiKADiVYM1y3de0ewKAIjh5I3m4giaoG1KPvVabfd1UTaD9nEVFdaOZ9jTZPbJ
            ZqFj/+cRTQBSzLMt9NxbMMVpvf0LnYnnahFjf5je1dqhOE6Vbf7E5sGgm/+2GwIn
            pZ2JchKgUOHI/NcVwd0UEIhiIwfVxaL6LpF1OckoI4w8n7tSVLD8HiYwH+fmnTmc
            YAGZG+CO+Rw3ubmefKC8SZi51019HIiswDdfwyguUBvqh/FcJYZh+LnwlBgjlbH5
            +8zgITZyVQyr3pY9j50lx0K3BvIpWc0z0S03ykX4x6JQcPsLETBZ6u1ckj9M7r0f
            ik6zAQP6QGxQfW6SpjhW25HwDQlpJncM5PPzyDUCbaQJ0ZWociO8qi+YdzhwdrTU
            ZgEJAhDWB0SGQpd3lxNZAJyO5/vsNJxYpegqbohXnEqTR2Rlzm8kEq703tVNF752
            GWch4rhp+vVjsrh3A+29ghUfJ6oY4CU95HCtO7jxE6r9VLS4dSFjIzaYKkWDDk9B
            W+f51d7+iA==
            =VuRg
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
