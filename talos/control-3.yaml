# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:D5KmAH4Z9Puzgtgp1R6A43iF6fCyRJg=,iv:LV6OykcQZX5bCiNlvGkQIgoLVOOgXkAomyIpxijpOYA=,tag:YG5sp/VOCxIZ5cz/sOYfGA==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:a9T4IQ4pmY9TqT+gg8LRT6sqTb/EP7Z2S4FKFcJOEpq94e1aXnV5N7oAy94HSl3Bm8tjtT7SiIAhoFei+drfADp7WkFr7PTf6KYzAuV6j/sqdHiHiAAuo6krIJY1vtj5FcMeeIPOqdgyjhGP2Ytw333ob0YfOrlHflNGFgde8Wq0ogCMXt15+E/rJDbR+U723FgG7IBxRc5zLFRwgg1vEoBWf8qbBbX8TZ2ISYZk6oiNunV8RDSDJdIWNM9PQwJcPht3HuqzTUMwbxhT4qHezqPuTXCIq/eIRCp6GpTOSf6wzb7VYHSoXG9sDUEeBzPwhjaBDA8wWd5K1Hf16DFE5ZXWehOcD7DzwblxSunMeKCqhGmaEgaA/TpYXevEMPnJqFcSbZ9pb6Yx2WfH3cf4IlAWT1onxR8sSRah7AxXFIaROuG3R/mp/H//k06n52z+6fzI732uM4RTpmHn++G99h0lTtMGH2lEsOuB66JjLah9+76KHyDRPQDthtEjav92FwJH3v+8T+1ZYKuHGdHUuzSB9Ix6BfehZc7Uf47E4RgzWIfNRLz6UFXKTV1TZWCHYZu/HuuGSxZuaSis7VDR/Q44Ba6fwRyJ8ggui1t/0/bEWImwqFxNpFg4gJeTPcAmut3ADYxk23f7iwmZgb1t8J35Py5PHGLJZAoxgnDxVOgp3k/f2SXEyJqN8PKqbwBhap/tymeTGPXdVCzAzjMbNJo/KdSTnFfOFuN7nN9fFK5HMfwfY7fmqcscZo07j37+uqhju9ZheGyRBJqjHy1branEBaH27Lo+wtDHa15shyZYzJJ17/YIyyy61oxmRbZgLsjjv6bAJlzQ+TkMZIm27JC6Zay1tLlLzYw437Qw748JDEFa,iv:4aS9Rad8b4L+BHzq6Zf4nWS7i6js7ZvJnOSM0Y6lerU=,tag:jYJNi3SC8hefRNnJPzHZBA==,type:str]
        key: ENC[AES256_GCM,data:Zm9RJhUF9jFvi++cal1FST6pv/4e6ZEDHfkfZcxz5+2IMqzHn/SR7xU1JU6D3Nphe0bB+Cx6j5jhI6Ski/1KolzLLEF6ugPa1S87rlLV2drT6vC8wPFWvrEtVMeTtn07Kvc23UzWCYt2RsPL1Id1CMCv2c8YLYY82s1DGmNAfTV/ADceO6E71zMnZFmYWl6EGsi+wQbzGXulSvZ7OmHJk9OJ0CeeOQqwi/T/1GDej7nwIKd+,iv:zYOlbsH6O5vjUDt8JGniiYhqoVmjMFA79BODSZbEqXM=,tag:lH+BACJlDFTVu9Bf2M1Gnw==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
            - destination: /var/openebs/local
              type: bind
              source: /var/openebs/local
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # 192.168.2.4/24
        hostname: control-3
        interfaces:
            - deviceSelector:
                busPath: 0*
              dhcp: true
              vip:
                ip: 192.168.2.9
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:0Yhg8e0j35im/t24TDjHUjEwXTpmwJLUGgRvHazcK0zWcFkKtpUVvIl09cY=,iv:3yjw4PinLhZNq4aoDU/fZLb4idJduVVvj7ESGbnTdJU=,tag:iZ2jGKXpGDwSBWMVpgEomw==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:nABihZ4RQdNHpIFFuWkA12U2PbW95ec=,iv:JITagNzJRLGM2zEjpbd5qpsgKnQcakdsQpOHz86ZYVI=,tag:JhdsETDHEA5BJrfGQBuT+g==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:ivuZh8bvZPCnohoB3NgFffXHDtiHxUeTTeh3Ahe3OIo8g1piAcqbc91tR+B02veFhcPiJR8v9dU+RPZSkU9Rfkc51kcTZeLBgh+DMRgwvQWXvb3w12+OJHFVdyELrWccRTVikEvLfXFAOt3OZbZORSQ+IT/fIrX+uL7nNRRqX3ItbrnolIcbXSCCnu6iQYx8SrJcHUWbkAO3ogHKxN0hqIez2kL2tPUaFmkViyzNXtaxRnyMRawrwIXAeYJ0eKlyfIUB9/Ma1G0npzIgSU5boZEP/CHQfwYBf9qR7IJYkzrMhGLPd5ui1KJxgTsQIztBnr3eKo1x3SQi2bshm/IprE0bcy/8DqL8aR4LUa8l5fD04lytPfmIqJA9joytBIg6FpxksZuTKbkvwbQ9YD7bwkSGvqtb3t1JZwNqZQfxTfjZrrW3/U28El+qLmpS5d6HxXcSWhoXFG7DgYcjeReyY3adD3/2fYSofa1StAbs8RXBpPZ8okhweLIZQUUsL+YPzhPV9cgjWjImkqO7D7sWmryKWl1n4sf236x250aj0bHka5oZaaPWgZhVZrpaHi3UQ2ouH+Ip7Rgr4UC9k4nc9xV+pLzYX2wpQGSLrrU4dre6Uyd456yQGus+bGlVzCdMmhEWA1eZIwe9/HpcGv7QI2OyngN+IWQLwzgC5qdoV3C71WVoHRz3DRYOaprD1U+vsh17ele8V5fW3UZV6z6vO6OJBlN0Do02nIxIJFW1UiAhJodOsjB08/D4mmGu0LZmI/+x2sY5OrJLaSnBdutAhkqgIKB5ahdxBMHeFuoPi+ppK34M1Ngn1xKX21PHsQUQ2uiXxLusvFtBoQnJkA9wyYUtQptRtdP38Dm+IRXYyWRc86IUWfjyvOz4RYf7XP3mTTvSt/JkeUEx2zwfDSFXrsblGfUICy1wLFwKjw4miXg7PD5rgmM2VijaFBbPNRAD3G8I9hvXP4n7i02sHEytFYYLTt6TvgILKo0QSS7F8eTeRwgl+M5mK5vwSAzJ09vUjFxmx3GqjZLYWh4vzlyUD3bM7AgL9bKzj7rnyA==,iv:wtoS5zKBboQDsyd6xmCQqziDLL/Jq2pBhnym60HbkA4=,tag:nyj5AOoYghR3S7N01Ert1g==,type:str]
        key: ENC[AES256_GCM,data:vJrrckDAk+gndkpqdi4LUDx+PGz+BExGYii/I4wWp/czbDeeMXTzFY3JWmUgK51g9ecTsx4bIKeepkx80lTRVrONdGrJelvDX37Dw6Et7Va9wpsWUyLGsj/mTVNGninnf0LWZc0pqZTgg21PlEesJCvsFb8eymUDn+GMy2P8DcadU/G9Y9ZPdkKRqODsOhpSJZP8G+sDebQVMHTA/iwHMCehqdISdwrRQpQ3CX1FzKu3oTMlOQcut79aRlMGU6ypcGZ7j+GHSJd55EnyLU428O9+ooi5iqyZ3BUqG45X6HOGHyg1ooc4U+KVjxH/7loR1xwJ/g7Xofl7lgTZoKB/vc16/v30xoCdt9Ju+ARfsR9eDbQPSiTqHiS1Vmem+0i+AtaHJOz046zq/50aVfmZTQ==,iv:R9vpSOfHxr7Kq23sLM9tnPd3VhGy9aOFf0DygzQq8Gs=,tag:6qMohJtz5OFEFn75NlU9GQ==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:5EaihOGs62LFQl8hnrYwrhEJDD6zkqUvKK6Uwa5ZehrQDp1Cg/r/dwWrIjeZx/KT7uG0srPZWOyHe6WILtTZZQqQ+l5fZ5TaTKnxK1UeEPKPr44CgQ0iv2rSscRyx8lAF8nyttn3BtU/4Cl04QDHlalAiz8zzmZwUeRXQUe9FLJ5bo/WYVz+8FlIX87r4KDPwbo8ANENuyCL3Swt7bMjWGEIg4K5r1nVpoGC9cgPepqOu4Fn2ZdQIKPbSwdsIK5CnpthnLB4qBRIBT/vVlZnD7z18hgN0Rxo6nEEOzv0Bij4VSr00FfGeeHbH3EPhcBLYZAC8C1mRjj1GTywbn1jRNpChx2F68BA2pwT2mdeo4zUqveEHhwfFJiQRr1XRYJf6tL+xF2NDKqp9CxT7YnB8g==,iv:76LBBYfAvjTwCvb0acC3l1mx5+f86VJENGk2ifC5BpY=,tag:isOyJbfZ295RUXLyVNJCrA==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:sbFLS3gVNQ1XGm1LsDgcObNE07H53dyFLnrCbr2pPJ8=,tag:GsX9tw2RbNs6kyfUuyPGNg==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:uQYFtMpsQZGqAs7+BkfGgoBNVaw1pWRpuHLy9zhaT+4oT4nsXBOhsq2oKeAEepkxfp4DUd3AZ8+n2bKp2GVISpW5NhrsaeZf/C1CJ3dXonrKN0s4FhnutXddJC8aV6jl4jjfbod2Ik+l0XgfxQ0IarjTKMDZ+tZRrXvrV2JYBAUHY7DwbRFCWsvpxlRkaNXXFkvHuZ8sCPv2wfbGzkxY1ATNoVmJurRB9yRbwcnuSi2b66k6rE02u//57g/s+KbI42ZvWg/ngGsqKajy95xqA8dmMVB/7eA5s4E+Lwo4ElUzmV5arhjY3fdB8KMkIuYUASrbz0T8av/frhsoFIo5nQujc6gNlPTrE1hiF2k+BbBa9OK43kaw+jmiIX+GSTEWXTwwKobplGnqRDD559hDc7fJy9PZTfsF9YV/0cxagMjvLcbIU+L/suUbfiHbG74mUcmMcjEyGytBsaU+aaqmGd2ihDhSvK5HZj40V3DxikEOqUWBCCfKNhClbdL9Iq4Bz4qpH2cZxF0d6EbfEe8VUz0w1/PUfsd6gLDT6+APt99SrioNoukpqOx+awA09j9A09H89k0TYnBBDjnZv43j6PTZwhi1FoGK9eT0fH7m6Wg6ZzchXivBOAM6nqojWRS7khqqAAk+I+oH8KhnVPkKXLklI0MFilXBAuNg2DZ+r/aPsTMCJ8yI5ATvHhnopXKM0PGDia9YsCd9AGcuBzkbHNAycSTXAIdUvjUdRrRJUtKvPKB1Vn0auGP/STzi+2VKusdaA85rZf6kC5sJP7XuACDzBAKSMckdfh7Gl0E/LPWs6yfi+F1/ebgHN9TL8jdGo3bfPkJTxSOHeNhIne1e16C3WAH8+yQpAdCh12TcfxGAq7xPL0HBTavOoByJ5i81jhtqPTCtEED4AEB1lX1jJ6h/IQUF4d1SEHKt2aNEKEBQYks/AJfjGHJZzmdeGWUEqQnVeCDViXCopIME5Nc+HzCYfm8AiLf77DCF62tMvLcKmVr8CCPK9sKc8+Qq1HGyDNo9Tg==,iv:ULVNIZ2AMCattmpq9Olgvxt1lVBO5AY3Mm1+jszyy6A=,tag:cZZvqZ7RWtRzBmTiy+bpBQ==,type:str]
            key: ENC[AES256_GCM,data:8AEhFkbhp06ENxYZw8P0B5O1zMEIEics6cJwzarZRmRqMI+1f4UmSLzff/sDHRkaAa2f9qk8bJd3+ksAPc5yBR8ElU0wYCA982rdOE2grby8WtLMdXSgKk8I3l6CIn1CATcCQkNGuuYJYbVbTvjC5S6mr2VvmcgfatxzI5e7FkBMUjZyFwE4ppdwbUtMcBmYYw+7iIo1g0km9vxke3RZGs0rcdXpUPggVXI9BOXV0/I2mKDoXz3e3rkYP4fDhvLOdSrWQ2jhZ7E7eQof+W4sySFRJo/86vJcUD9F4I+PC4o/39f/cltYIoYncXQRVA5EyZr30RU+RAtUdhwJqe8+fgM0dkoy67Zkt8D5qZBZo7KZh3hyMWJt0J96qMGgzdlYeAdo9LektWmKyS/3PYo5fA==,iv:ntGkS9Ah+W186xnIaCUQ4QHf9vmivmCHPoPbfIlcYUk=,tag:EWXdDxoGdNE9q5L9GiTMug==,type:str]
            #ENC[AES256_GCM,data:PPf4a2MNbUnjvVyXxv/tuQ4MMwp0YO5FVJq13SMvOC0+/U7gKLQWUVB2/+A9+S5pUGafB8QaXQ==,iv:aNm0g/Wy06gBdID6yjrWR5dK2c7LiHJ8zvAkJgUQx7A=,tag:1etdEyQhM5xC45LTiVKjpg==,type:comment]
            #ENC[AES256_GCM,data:r87VF8Rl72XDQNHGuiEItvlrkJR8UaeGGSb3b3k1s3/zYwqtablGz3UD0fbt/4aaJnA=,iv:Y4QDCvpdDxHlLmHwmT5vCX/4nIokCe1fpdTkzE9/uYI=,tag:pi/sLyfBhTnRHDVu4Qy7Cg==,type:comment]
            #ENC[AES256_GCM,data:NtwpUY7eHNxe/jDtTim63zygKgcLc7VI9frCvIfkctZD83Bar11casI7/w0HnqB8RrJUphUnQ3bn865p/snZ6uFs6Z07c0PqQvvWIssK/8h2RVD3B+Wbwv8=,iv:O3t7MBrEky1EPmyPjxJINelrJ25+B8pXm8J3tnoXCXA=,tag:7UJGpRzt7BRAhdMSd8P/wQ==,type:comment]
            #ENC[AES256_GCM,data:joxWygkQd4C7SaOUibx3ZzJazw==,iv:IXyMw5BbOHin2C0CPGwa/oLwajLfqoGTbDQTaPNbsXE=,tag:twdTUQH2RH81JWnMudG3zg==,type:comment]
            #ENC[AES256_GCM,data:+/gB/rtWapWsQoRp+nfqsQo=,iv:iHFiKD7UlXqgzu5JKN55RMlRvgsz6HJOyKnCcnAwnOQ=,tag:vaPxVhho/9gNUUuKOFSP1g==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-07-14T19:02:44Z"
    mac: ENC[AES256_GCM,data:atKWk06RltR5oEpgm1G8yBGeL00/K8Sht2xnevB9sfM7Z4QV+RoKgA1SNGJsa9kXPHyzyDWQS+oCeG+C+oDWbTF7m7/k4Mbl2iolKB+Qyv1h9kDtiXHDymiFlb/KVMghFnjspQN9Wuwhigwp4LT3GpV+PDVyTalC55sxrDgAo9Y=,iv:KyrzFEurd1i0eoRpRhhBa9OZPZXxN0e6kALm0U+1fAw=,tag:ETmVjMN8Tg03ZxiZrpn1fA==,type:str]
    pgp:
        - created_at: "2024-07-14T19:02:44Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DAQ/9FeUH977xgSZ3q0HDCxIsNWXG+XfZ0IZn45AlQEvIO5cb
            EzlKyvzuKP4/lAYRAKZei5bRaVscmB6LE/P7aI4fEV7S4saiwjNP4Umr6JpLwZkN
            YbZSBEdRuifS7607ORns+w8ZTXtx4V25HFNIcV/pVSH+BrqZjkoZrqNRv1qfWGog
            lmh1jiL23hfic+voOkuq5eAt+2OltIf91SVqropJ1Q4Ig/y7uB1XkwXP0WVNuqtJ
            IhIE84HvINBAB1piak+glFkv+R1tfCYPRaYjzq+BUjWFrwRciyqhUDPMdhNeQSit
            PkQWpUP/2iubEMhLDz3GkIIaCyG1rpGV2NdboTypsjY+ntbm7whQQfrQPSx9hdCf
            OPKf0q3lzSs1XLvVlm1fx8sDwwyjGC5fWiLdF/FR4b9ciKrkyIJqHATmCnNtYUi0
            5Y9zmc305VaiepBVkeBXnPVHr2GQLTMMNBaxjCEKTg2sgt1xSpmZeHdDo3V3r40p
            OAuP3JNjVCIkea0jxqPXd2JWPhRa6RS2AjjXsHiK42pr1i9kq4RabEI6jhzu/exK
            tmQLSixPD1x8RUUP6sEvG7jkLkXbe4jc1BYdwJEkJCXImuk8zaw6gvoZ7KcY4Ttg
            IdRb5Ux3IyV3FKAJv7IFm8UGskVaS0ZzvKeynkOJBFmNjIzDF23EM8dWpFeZQP3U
            aAEJAhAN1W9iouWghI5KRyzetPxCChaAvcZMgqbaKaMkY2JF+Qm3mFEbJiJAuT8W
            ZAFIjVodMFgTLNVHzFCJEPsGhvGyP1npl9TLjdUIWfqQGPGsKEpo8IZcx23N0xJ9
            E/7C7k3IlV1Q
            =kaH5
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
