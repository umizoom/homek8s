# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:/r16T5RX17DZYlmsgBnuYOuYufy/IVM=,iv:mvTU/Yju56JmxRHjHi4sahUZjwG/gKUh3bicK2QvzAk=,tag:ZxKBJv35m4n2sxMrTrVHFw==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:UHDiDvbNXCy59y0MwvtF4VUp4u57i610ASAWNV0N26SAPSarj5OoOzE0sH0mBbGX6Jzs9u9/ZnMFrVnabxy405OzvVFZ/X+7cb7Vm9+wP1JiIJXOWsY7kj92neFYQCMa1IjwG5w860Esjhps+fk4odeDaIhcxL+1RdcQBQbqPkomkDba4oYOD5jTluJ9Cscypa96G1Vg1wYn0DDjcD4gt8SyjX/A6w1IUUFOwfHJ5AUbZ+jeK4s0flUDlV9mdcfRARtIgMIrPWNcHIr0Wl8CKn64FredCymaRd/g/dlQ7PFvrPhrKNvh4JcWTZ+oaJ3NFTbhDvqd3YlV2P6+S/6mhVzm8gAMRnLn7q4a4THE2jL4bWQy7UQ/2oKkGj6+D2y5H7TCvW7Hg8APc9dxF2lxowJHdyG1SZk1Co0qsYRWLqZysLUKAojxt95uNYzeARgqCX1qoQ/yYir6rjpt30mlO9D/SPIAjBJh0lqGuJ1fXQb1NTgaJ1C6C7ynwDGNWKq0K2ltHfe3m6nz7NKhZipbVJXOQcIzmONLHApTzCM+6gy0+jvmP3ZICkriW3ZHNq35AsasTyR7GRcvH4TwYgCsJIcJQSMbb6KaIUMhpr+fXYOaZrWZU3oNScBbOT82cvnA/sAM2sxp43AZwNB+uvy1CylPn5b4mz8FzkDWgotb+4zj99deCYu4jY/LWNGEAOzZKCgCEUb2a1zPVK46YWr1rC/phFTxzTx3OSwhJM8eIK5c51qK0SJLjeHBRxdv1Opwa8TaUI1sPY2COoOjqDvBPrBk4FAivGSIXgG2FoXpFRv4VmOpDDxnviIWeJs38f9Cl6+ybZvr958NPnZQXcnmRWy8sZGhckdi3Vnx9G6lkY+w99Bq,iv:HcOIP/B4hlafovIB+hOv81BXkrmHQdFhbM3fjo5VP6M=,tag:VrHRupPFEcK/zS6U/zYprQ==,type:str]
        key: ENC[AES256_GCM,data:1BbvSsmM8gUJviJmyi6MBxGS2ilrSnfM27B3N69uB7n4UCxuliRBopROrqg8o2S8D7lMmBINNbEwP6SjZDjPj4c0G9qKrxdXjf469s/hgbVX1nUnwtzLDLR3A+URGTKtmUssXAgYnHkMOUw57t7aLDmWNMEiZ+kVLXk7Yt2rZ2ZivnO9AusYzNc0YfNYBrSQCYE8t/9/aqWvZ7WcH7geFoYvZsPJTBgcA9zq/nUPgz9bVUKe,iv:n7cHh+++LN1VCo5fV5nYr8BR7y22aQiWykT50WCGO4I=,tag:Qki2TZkQ2IHZaDuJe3ZLJQ==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # 192.168.2.4/24
        hostname: control-3
        interfaces:
            - deviceSelector:
                busPath: 0*
              dhcp: true
              vip:
                ip: 192.168.2.9
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:2vSNUyvCLo52oUlVRxQS/GQdnTQkpTc57ZoDL1QvnuCSRdE8PKJ76eNyYaI=,iv:Q1HVwYU5Le8em2cvLZ0xnJvSC9H4qQRu+5R4qRcyfcY=,tag:ewliAE3/xSlB2ULpSfXfAA==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:ybKMQvZ7NdGea6mGCg3nbuNFdqEn3dA=,iv:3N26N6ho7SxtX1RNNokuCDcOM7eOZYLk5aCUSF28xy8=,tag:mcW6nReEW+6N9Fm4UfIoVA==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:hg6zsfMRcX6oD9HKCf0UO+Ef+cnRYXrFMk63IxS4DiDfcwxUiSJDdOMEHDohl83E1V0cvEGQCtAJMOdZOcnEDHwNHo99CpVv/cXZjw4/C0Xlq47kfBykyV16oXt3n+GBh2vhQlX+Fu5DzbVFZSXPHLIPzOhyeYAfdTPHPKLV4Y0AT/TNrKavaXjquPpF6nwd9YmUjrcBOmLaEsXBHHNfqrMBsqa8VCRB3KMAlCMAKeSVRXtTBNaSbwZBfvc3cwyb3BY7sk/R5rgGXQFEyEJHBMQgEB0i6zpyaBT0j+nZ2ppRJ7yxYEi407Fs3wzCKA3dHx45EK5bNwmbUjqmPUuY31PAASCdRO9MBYWgmzOKq/pXBa/W4JOOLtCItcr/Sppx5x0HErSQoG6vqLsvYDxRjY0haT6+9j1Wa5YaidLi/64ZyoleYo9W3HgY/WMNtwvU2HeT97tKEnVq65FOijoVx3QqeMhidk+2gdfw5/3vGWVNG5zlxqOwLitRwEuYLYpjZEvxGVb4X09K+jnovjmUGEYa2S6Svcv61dWUPldTuoBfwi0qr3FDjAVyWj0P1H/dKVuVFhup8uKet0izl0mHqSL2OWrspLl9jYed9PpTKlMdeM5Yg9QzIsbixcIw/b1migLJWZXf6rCdx/qgHnWlwlhU8qMIJqu9/dmEIXXkmPJk2a24qiNkL/3T3yyk9B2lOshArtdPaL8TUGHRseXlInqkW6DC/RqKY6nVh4t8Oh9geF7WzougG2tICOa52YZvTISYhM7+1qQup2FnyjmLKD+4E+EbUswRVQDLM2pgs/GMC0fFeeu1+R/xRoqQN+9cLH/6yjhMBclhCXEM+13CTBPrBxcCSkpHX2/zensr6e+MB3DmJxFyZtLqJdkBObbEMZX/wzer9TUUeZY8W3NdDKIpN2TCI/z33TxzpAzhAXivu7+V0h4xpGQz026iZ152x6STf/sMKhq9n12/92uvclSNBNUPy99W0dz1OyOJWTGNy9Asi3EnSJ0b2xml3ZvdHZlIoAfiK8Ls9gLj7mxta9uNabixHTAZHajFPQ==,iv:J8C9t96/CTEjHMoC4gqwVrxbNM/4zj7dTn+U1k2ZfYE=,tag:j0ALakzllciacM8RSKyF9g==,type:str]
        key: ENC[AES256_GCM,data:v0muX7utdn3A3LkPv+kO5XE50wgXzC0EqpNJC/BNeVrK4QWKuP9lpqFkILrZL+fx0IRpMapzOitxIQdmpiA0Ojuhy7zpu7To/pBUcS8o8lh8bm/O+wh+3xa2H1js6Gh+eva+twkWpHLj8EVlMt9nZuIkWh8/jv9Je55kyUEmOgU4BXY5+a4uIWB2KD4JaWoiwN+/BqrTnWANUj5pae0oNng46Jcqu2m/OOiaCVtql7TTIHiRHSPL6X/AKsNdhW4DfpDqe4FWZn/JYccbQuB7X1rEJeLhLPrzbiv8RldJEwfeAiTASpcfwq8tvPZkjERvTqNqOjlM+MhKKVKd0ImT0oN8OaR0vOD8b9IGSG1NKVLhv6Y80QRnM7JKcfpLQw5re1Dk4AZ80P2irwgkjD5GgA==,iv:mEyrDNF5s1T2wiexPA0+T21FQgcqqFi6NPu3k12S/38=,tag:b4asaFm7s3G3tkeJqJ1ENA==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:X9QHHhKoLvxgi7bIbWIfLstnjJzWme2oQjbU3DS2MiOI+/ZqHerM11QjCgmKmz/w1P21qu+b4vjU3MufR82LH15HYz15uds7NLnw6xiIhjWjLgKPz9IgQm1U3/UUv77zCdQAI8gIQOMz4skPoE3RMzMlwBUU+xL06I5Y6lOdabTU/pe6TssNUZY7GKjdGpzMeji4jQ6nQxgSUMEzAbcwhesUfw1nI1P78MQ4Hd/PO3E4iEyaL4kqbHoOUPK4EwZWUBBYoLhILZ3ygUgQNpbogAHWwomglvqaPp2p/N4zX+qV26TqwQ/VPBzAy5pkOYCXv07rbZWWllHtVFel+XhI3Mr3RFL9VGjIYzhSKsC/sghsZu0sRyKFIuwsalPCrSLT6poZtD+mEhuBOlcmmENxTA==,iv:SgudWJGrWMrG2TqjHDKx8rtMBcmlkSv4asUSSpL9E7U=,tag:azQFjr6VN4gn0gBge9WFGg==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:lLiE+BAm0SSHFQmj74uJpZceS+eXXLFEtpQZWoi7f4Y=,tag:3sQxkKc+ATeR5FcJOKI2sQ==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:u9gVaXOZRlJ8lGrUbgBYMN2wI8t7cQYIQJh/bJ3cCa16kBigOr7KxcGdky1Tiz9wndIg5eOsF7nn1TYgGsk6IiK4ioZEt2qHp3EEPLJgwzIXgasQglmdYuJ6iZGkBpuFzaTb7UAdacxSC6DqufgMhm/rQjVZbHErcHbG1c6Ca++D0Ocb05Zp9ISAN2gnXyMgsAAjhk+pv7G8JAkQl0/3X+Oj5cWN+M/VZaXBx+t3AlveIX8uLwA9s1qMjUxbYtID7O29My8IxzqzyUlkXZd9ODeog0BoTCHa22b0AwLNoz1Bmrn0LY+RrmjFwcAYTeRHc2M6rBKLanzYiOmY/YE7r4zVNEyHa2VOEwbpycZxpIqTn8ekKsyFTZWuBrATgEb3AU3GpcoQwulxLJk8yT0EzPqn4gyd4IRSTCY+fiADWl2E7KM5t5i1/eOTpiN1tFa8hYGduvWAyQ5ZpN/ii/4V3MGIuh1f6Li9N4ijmCuMNQicNLwgldKL13EVN8kV3RBlTkKdEeH93t3wTfywJm/JZVX49RhQMxn80KvyAmHk1v3nOzAymQyHHDlM1/AAuJV2Ew7NkB/yqy5VtNqjy8hmnQ/4ayc7yyAJstDEL7vvLAYlJIa6Cyboen11C9tXnEN1oZQa3iJIWo1SudqRIPMjP9gWJJAKUDcT8I/NxfM08rYr7xQdSWGk0gj8YNsPK5CJlkcsXDu5ff3eAyuIgem8YcLOLCj4uzI10ayaSt5TMCwIRpVsnRPUHf+db1z1y5Wi3PW8uSRaCs2t9Nbhxd3O9Oj7/GT0RcunXk0csVA1AgOlaIP6YZgNWyi7G6fw1kFx0gp9WpzG2UJNYBknoesS/QlSTN7H/3nSAJjL/uVdg5txDf82pCwPr8c2DOmjBc8Hi4tjWcvUI3HvsP1JDudoDdAMSjCxjsIbXiBtNrD7XpwqO4GDNiqkDpHiToibLlMehrVE8ubQp6ucSwYL8thQdkEa/Ld0p9xYdG/s+k0++tqwGvAfOLC6QiE70YzBczSg6A0nxw==,iv:UcdaBnhAQUqclNyTDHp+GnXShYKgQRBzUb98SOKgC38=,tag:bcjVCYjOh+1mJA/ox4D3HQ==,type:str]
            key: ENC[AES256_GCM,data:7oGZLY8766aJ+H/qUuEWhLSvEs3luRbF/RkpClQi15u0hZcL2Wz4h/YV8Pgrs7zUTTIwtTxRJ08HOAtUbyOEF0/k5tmAQsIZNXqgpcV02a9ubPaiGoOlgzwwDpTCm/RXsAm3ek8j8paFM/6CoDglW2R747G6Q7Wi8PYQ3JKviBfFtNdk6D8eDUdPs0CUWZa8Cj2m7ZbvwCNmydmYy9f2tKhrIdzVMRiPgUcyN+JXMcE8lzPGUtnjM7vutrjjllnh9CzJUmc68NpSQfC6EJDE6inPLZH6AIoFRQ273iTQlRawzrwyAy2NtSNy453nr1y/WEPkoABLJFaPpU7Qn/UBOtQyMDq21b11fK0GaV0ok46ekHW5oxofdsAiXYxUBuwl8QkGMeLXvH93yEB8jz29bA==,iv:KduZQ98SQJwoGRSJ5CaN/2DOiAW28BYSdUGpo9ZEwT0=,tag:WeZmGeqCgmuPBWGXzc4UbQ==,type:str]
            #ENC[AES256_GCM,data:1gj0OegoQLzyLy4Fbq2RPmVRnBP+TWjzJ8W55c9t6fCLU0XvwAhdNJG/Zcow6FO84qodQpGskQ==,iv:xc312KtF/xQhFzK3TworPVQCzCYShuau8nUgNJ3OOh8=,tag:cX1WJ6yodgJr1oE1wr/Ojw==,type:comment]
            #ENC[AES256_GCM,data:0Y4vNRgB235ch2E90TMayCiCrpiBnywBc3rL0JzQe20Pyg8rblVeryEBUwiahUvLe8o=,iv:PIzOMzHFekWSCx0n+pl9urZDnx2K/heSVdiJffX0DJ8=,tag:iLCd/365lc/VjHwdrnMZGQ==,type:comment]
            #ENC[AES256_GCM,data:J5jGDG1b7Ub4jW2yhL2WNIOCxQxKQDxNjkDnhdxcTx5xguvBUwB5RPSMaP4bA65kMPrM+u/NH1B8Lj8F6FjDWp0C8hGjyitlKsvKU3vmGPabuIFW+kJx8kc=,iv:NPQ0xciaXEYEptGqegfJ8/lFY/LYmSQcqcOgzO1qdMs=,tag:fiuf27Iihy4T4xZLvS604Q==,type:comment]
            #ENC[AES256_GCM,data:qHwHH8j8g198Vc1sB8LlCwKwnA==,iv:FSPma/Lbk/uwkKWBWsxrwK5yJC3X9R1SGJdguEhpBPw=,tag:lIkIlrsHF+AkXtPTy3FPUQ==,type:comment]
            #ENC[AES256_GCM,data:Y5uUmml8oS6V/A3/D/saw7c=,iv:LLcKnW3NbOUkMhHHUj/g9xceyAuRrrTnr2gHjQlkdUs=,tag:m6AowAjyeGMmTk/UHalKAA==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-07-13T04:18:24Z"
    mac: ENC[AES256_GCM,data:MtHL6VwZMYSEvQ8cgp2mYWSlF/qjKWwjUgPLuyZdCeT+ktI7rJLPwVBdrBNn5Vm02QX6Iw17rjEr93aUTowCCfBS8e12NUydGWPLD1Ekmvk+dbxOmBetcbH9WPCf7NqvFqMPcKyT8mZ/P4vs5zqCE2BQTStwkSSyT7/y/9DWUao=,iv:dodENw05z1l2lKCE5uJP5O9MBgXCUh8J0p3Zy2tCN14=,tag:48DAb5jMofavmsAsjovFlg==,type:str]
    pgp:
        - created_at: "2024-07-13T04:18:24Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DARAAgecVpjvOxRiDx9NmOcQtIv6WOnb8bE37vRzC12130xBw
            tCcGyZ4kzU/uRsLtjZYKVxzdEHWkF+p3mqivZ1+fkM6QlVL2yvpBSGz/dnq+mb+y
            NnXUxTNwuNAq0e6FbtMpzgDFMBemnYkJTjTGFxKtSkv2f2plS0SQbQ4Vq1OhdOm9
            6jB1tYQLvcRS3IkdUmCS0+jHlbdFeNSZ+q715EJfEJpEQDJ8g7PCNTqECRjKNkvu
            YeIinv43btdlBcqz5wqo3F1KRofrIxnzv/iRKHZQPQRmQfoES1JV4vOfuqE/PvtQ
            v6KFGZ5rwcWPDhtJJAfk/Gk8wYKUsR7j1oQatkRFbscdPjeFjLzA1ifY7dMQoJo6
            kryVTxJI1rJA8CtNE/Np9WtSe2oFe1c7c3fd58GL1WX8DWqlVIyufk2AxINTfhg0
            5mJ/AlSZi8D/WT27fAiL3yS/qPOUG8PDIAxvTyUk2DzmlG5Rq7uIPR6QFOEUCwsl
            bkP+n0MWFGRxVMKmFHrf9Q1/xH2tkAOOxazMF6LVroG5NuXjQLDjX1shW0JUML1V
            YddAWURy5685jO/eYYJ7QU3ysdVHlHDx74JE3DIejV3XUSQ1scMSTAqpmcuxlCo/
            0sFdwbS9jEaStnfm0TDpQPPE26prT5GwsKRoJ18CvFkZCz6SHhwbwZYdFrrGmrPU
            aAEJAhCEjdyg2kKfcAZGbO29L1t0KugqJpIuuIGZZ7qAn+flnnfadIh56IpOP231
            EvQZ4IVtreLwPS46nU7JAj2NtMUYoty8HembT7cpTFtJagSf9XOcUoqmhVORvTMb
            NUP1gKwbuYWd
            =uDZ8
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
