# Indicates the schema used to decode the contents.
version: v1alpha1
# Enable verbose logging to the console.
debug: false
persist: true
# Provides machine specific configuration options.
machine:
    # Defines the role of the machine within the cluster.
    type: controlplane
    # The `token` is used by a machine to join the PKI of the cluster.
    token: ENC[AES256_GCM,data:yByOlX0opaYHSsyVBhY+/ju//Yloipg=,iv:aoL70uuy1RPBOGKg+kTr7SEcg8U3qhvLwUNU+PMyblw=,tag:FKBSzg7lwNM+GCBrOsRd4g==,type:str]
    # The root certificate authority of the PKI.
    ca:
        crt: ENC[AES256_GCM,data:k1zVSlX95vWXrQlj0MItnkLhyVRvbOly+Am52AG6Pr+ySg3SVJJCTQxSsGPTVQqn+7XFJf0gCNZoxVjxNh4KWrTQ3P3NuFiggLpDVP/Kko6DDIKDLsUPpSvRe6gMKExOr1X5pEckNG0F8YpggrLa5Vo9S2FH2XEggC76NAOq+1pYIp6va4ymbhWj7X7eqLujrVR3ZSID5VCavG/lsWd05b49uD7GJgF868+MWd5QLElJxhFUfDwB8rzGbv49Ig/8r7mWv9N12K6yv98suyGxC658REzi5bxGtnOfzzxPmd+DKn8v20dri2sl92LPW0a4Jy7YEzYNFBljUr2CaEZ/4B88OE+NIOtA5Up5JdW158eLMa5mDaJ9OhTSz7IENlNTfsRA1KOM9Od04+EUGURC9jJPeK2i5Nm0VQg3/ceCdyK0wORl0Q62z/nnY6ybpzTpNOJY1U3tYf6pCuPflCMEO5WcuWst0ocmzsnDwya/QdQnGil5HCt3KFg1gK1Ntc6xft1rZjdv8+jsY3prMI0NzvCnxKu7CJUp+4WT9YZRauF8hix/8nG1C3lWcGPrbJKqilptVO+ePDR6kvsTuW3ijAswG77UnpyrLXAeY0z/v5chuPTXzgMPg/PgObJq8hq2UeAr9p0cveUk+Gw0ZKuYVF2CtbiSTV1XnCK0kxExHbZPdkd0m52blMoWV2L4Lhne+iDao19cGE+oi/eNbBTvfWGVXvaF3wzoMutczRgqJWVBOSm1NlMYPXgH0AlKKQPgd4ZhAw7wKwnzYzy0L4gRv18rHjJSWugP6RzEFp4WaDz9DigrK9/2UBjICgsBbcwXLF/ntnW4JIIKP+FzL/hpdpqLZKeDhhDH9aHcBD7JZrD3ZMuN,iv:1qmCxNWMMgb9x9XZtp2whEJNtRxvzGP+vpuqAsXVcig=,tag:OjOLCKIRFD+sn4LXX2zVnw==,type:str]
        key: ENC[AES256_GCM,data:krUFzLyxJO+e6sTLcs/hOrLy4e76V+ezaBBtqf7mVidhX6i0TGIZpdXIA9LC4Y2rvW4EBzPjfQxMbfFEcNrL8hzmTxytZJDWYm7byv8iFzoKUDvxHtTjysTI6spnGmSiy8NDlXWGE2rlQdGQAizn5UBXW/3vvwMgeWl9CI8zsGyJcEBi7hgOfrbpOY+AP7SrR3cilQQXS4+Q2TNqAVsQk/t9RewaF1vW/1Ib7GLImECLBdlk,iv:MLGFubgfHEqpSK0YvxkjwBiQg8A6/M1EWSt1sgCtWF8=,tag:p5Ns9LeHzhXUbD8aVe+QLg==,type:str]
    # Extra certificate subject alternative names for the machine's certificate.
    certSANs: []
    #   # Uncomment this to enable SANs.
    #   - 10.0.0.10
    #   - 172.16.0.10
    #   - 192.168.0.10
    # Used to provide additional options to the kubelet.
    kubelet:
        # The `image` field is an optional reference to an alternative kubelet image.
        image: ghcr.io/siderolabs/kubelet:v1.30.2
        # Enable container runtime default Seccomp profile.
        defaultRuntimeSeccompProfileEnabled: true
        # The `disableManifestsDirectory` field configures the kubelet to get static pod manifests from the /etc/kubernetes/manifests directory.
        disableManifestsDirectory: true
        # # The `ClusterDNS` field is an optional reference to an alternative kubelet clusterDNS ip list.
        # clusterDNS:
        #     - 10.96.0.10
        #     - 169.254.2.53
        # # The `extraArgs` field is used to provide additional flags to the kubelet.
        extraArgs:
            rotate-server-certificates: true
        # # The `extraMounts` field is used to add additional mounts to the kubelet container.
        extraMounts:
            # Destination is the absolute path where the mount will be placed in the container.
            - destination: /var/mnt
              # Type specifies the mount kind.
              type: bind
              # Source specifies the source path of the mount.
              source: /var/mnt
              # Options are fstab style mount options.
              options:
                - bind
                - rshared
                - rw
            - destination: /var/local/openebs
              type: bind
              source: /var/local/openebs
              options:
                - bind
                - rshared
                - rw
                # # The `extraConfig` field is used to provide kubelet configuration overrides.
                # extraConfig:
                #     serverTLSBootstrap: true
                # # The `KubeletCredentialProviderConfig` field is used to provide kubelet credential configuration.
                # credentialProviderConfig:
                #     apiVersion: kubelet.config.k8s.io/v1
                #     kind: CredentialProviderConfig
                #     providers:
                #         - apiVersion: credentialprovider.kubelet.k8s.io/v1
                #           defaultCacheDuration: 12h
                #           matchImages:
                #             - '*.dkr.ecr.*.amazonaws.com'
                #             - '*.dkr.ecr.*.amazonaws.com.cn'
                #             - '*.dkr.ecr-fips.*.amazonaws.com'
                #             - '*.dkr.ecr.us-iso-east-1.c2s.ic.gov'
                #             - '*.dkr.ecr.us-isob-east-1.sc2s.sgov.gov'
                #           name: ecr-credential-provider
                # # The `nodeIP` field is used to configure `--node-ip` flag for the kubelet.
                # nodeIP:
                #     # The `validSubnets` field configures the networks to pick kubelet node IP from.
                #     validSubnets:
                #         - 10.0.0.0/8
                #         - '!10.0.0.3/32'
                #         - fdc7::/16
    # Provides machine specific network configuration options.
    network:
        # 192.168.2.4/24
        hostname: control-3
        interfaces:
            - deviceSelector:
                busPath: 0*
              dhcp: true
              vip:
                ip: 192.168.2.9
    time:
        servers:
            - time.cloudflare.com
    # # `interfaces` is used to define the network interface configuration.
    # interfaces:
    #     - interface: enp0s1 # The interface name.
    #       # Assigns static IP addresses to the interface.
    #       addresses:
    #         - 192.168.2.2/24
    #       # A list of routes associated with the interface.
    #       routes:
    #         - network: 0.0.0.0/0 # The route's network (destination).
    #           gateway: 192.168.2.1 # The route's gateway (if empty, creates link scope route).
    #           metric: 1024 # The optional metric for the route.
    #       mtu: 1500 # The interface's MTU.
    #       
    #       # # Picks a network device using the selector.
    #       # # select a device with bus prefix 00:*.
    #       # deviceSelector:
    #       #     busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       # # select a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #     driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # select a device with bus prefix 00:*, a device with mac address matching `*:f0:ab` and `virtio` kernel driver.
    #       # deviceSelector:
    #       #     - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #     - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #       driver: virtio # Kernel driver, supports matching by wildcard.
    #       # # Bond specific options.
    #       # bond:
    #       #     # The interfaces that make up the bond.
    #       #     interfaces:
    #       #         - enp2s0
    #       #         - enp2s1
    #       #     # Picks a network device using the selector.
    #       #     deviceSelectors:
    #       #         - busPath: 00:* # PCI, USB bus prefix, supports matching by wildcard.
    #       #         - hardwareAddr: '*:f0:ab' # Device hardware address, supports matching by wildcard.
    #       #           driver: virtio # Kernel driver, supports matching by wildcard.
    #       #     mode: 802.3ad # A bond option.
    #       #     lacpRate: fast # A bond option.
    #       # # Bridge specific options.
    #       # bridge:
    #       #     # The interfaces that make up the bridge.
    #       #     interfaces:
    #       #         - enxda4042ca9a51
    #       #         - enxae2a6774c259
    #       #     # A bridge option.
    #       #     stp:
    #       #         enabled: true # Whether Spanning Tree Protocol (STP) is enabled.
    #       # # Indicates if DHCP should be used to configure the interface.
    #       # dhcp: true
    #       # # DHCP specific options.
    #       # dhcpOptions:
    #       #     routeMetric: 1024 # The priority of all routes received via DHCP.
    #       # # Wireguard specific configuration.
    #       # # wireguard server example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     listenPort: 51111 # Specifies a device's listening port.
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.3 # Specifies the endpoint of this peer entry.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # wireguard peer example
    #       # wireguard:
    #       #     privateKey: ABCDEF... # Specifies a private key configuration (base64 encoded).
    #       #     # Specifies a list of peer configurations to apply to a device.
    #       #     peers:
    #       #         - publicKey: ABCDEF... # Specifies the public key of this peer.
    #       #           endpoint: 192.168.1.2:51822 # Specifies the endpoint of this peer entry.
    #       #           persistentKeepaliveInterval: 10s # Specifies the persistent keepalive interval for this peer.
    #       #           # AllowedIPs specifies a list of allowed IP addresses in CIDR notation for this peer.
    #       #           allowedIPs:
    #       #             - 192.168.1.0/24
    #       # # Virtual (shared) IP address configuration.
    #       # # layer2 vip example
    #       # vip:
    #       #     ip: 172.16.199.55 # Specifies the IP address to be used.
    # # Used to statically set the nameservers for the machine.
    # nameservers:
    #     - 192.168.1.3
    # # Allows for extra entries to be added to the `/etc/hosts` file
    # extraHostEntries:
    #     - ip: 192.168.1.100 # The IP of the host.
    #       # The host alias.
    #       aliases:
    #         - example
    #         - example.domain.tld
    # # Configures KubeSpan feature.
    # kubespan:
    #     enabled: true # Enable the KubeSpan feature.
    # Used to provide instructions for installations.
    install:
        # The disk used for installations.
        disk: /dev/nvme0n1
        # Allows for supplying the image used to perform the installation.
        image: ghcr.io/siderolabs/installer:v1.7.4
        # Indicates if the installation disk should be wiped at installation time.
        wipe: false
        # # Look up disk using disk attributes like model, size, serial and others.
        # diskSelector:
        #     size: 4GB # Disk size.
        #     model: WDC* # Disk model `/sys/block/<dev>/device/model`.
        #     busPath: /pci0000:00/0000:00:17.0/ata1/host0/target0:0:0/0:0:0:0 # Disk bus path.
        # # Allows for supplying extra kernel args via the bootloader.
        # extraKernelArgs:
        #     - talos.platform=metal
        #     - reboot=k
        # # Allows for supplying additional system extension images to install on top of base Talos image.
        # extensions:
        #     - image: ghcr.io/siderolabs/gvisor:20220117.0-v1.0.0 # System extension image.
    # Used to configure the machine's container image registry mirrors.
    registries: {}
    # # Specifies mirror configuration for each registry host namespace.
    # mirrors:
    #     ghcr.io:
    #         # List of endpoints (URLs) for registry mirrors to use.
    #         endpoints:
    #             - https://registry.insecure
    #             - https://ghcr.io/v2/
    # # Specifies TLS & auth configuration for HTTPS image registries.
    # config:
    #     registry.insecure:
    #         # The TLS configuration for the registry.
    #         tls:
    #             insecureSkipVerify: true # Skip TLS server certificate verification (not recommended).
    #             
    #             # # Enable mutual TLS authentication with the registry.
    #             # clientIdentity:
    #             #     crt: LS0tIEVYQU1QTEUgQ0VSVElGSUNBVEUgLS0t
    #             #     key: LS0tIEVYQU1QTEUgS0VZIC0tLQ==
    #         
    #         # # The auth configuration for this registry.
    #         # auth:
    #         #     username: username # Optional registry authentication.
    #         #     password: password # Optional registry authentication.
    # Features describe individual Talos features that can be switched on or off.
    features:
        # Enable role-based access control (RBAC).
        rbac: true
        # Enable stable default hostname.
        stableHostname: true
        # Enable checks for extended key usage of client certificates in apid.
        apidCheckExtKeyUsage: true
        # Enable XFS project quota support for EPHEMERAL partition and user disks.
        diskQuotaSupport: true
        # KubePrism - local proxy/load balancer on defined port that will distribute
        kubePrism:
            # Enable KubePrism support - will start local load balancing proxy.
            enabled: true
            # KubePrism port.
            port: 7445
        # Configures host DNS caching resolver.
        hostDNS:
            # Enable host DNS caching resolver.
            enabled: true
            # # Configure Talos API access from Kubernetes pods.
            # kubernetesTalosAPIAccess:
            #     enabled: true # Enable Talos API access from Kubernetes pods.
            #     # The list of Talos API roles which can be granted for access from Kubernetes pods.
            #     allowedRoles:
            #         - os:reader
            #     # The list of Kubernetes namespaces Talos API access is available from.
            #     allowedKubernetesNamespaces:
            #         - kube-system
    # # Provides machine specific control plane configuration options.
    # # ControlPlane definition example.
    # controlPlane:
    #     # Controller manager machine specific configuration options.
    #     controllerManager:
    #         disabled: false # Disable kube-controller-manager on the node.
    #     # Scheduler machine specific configuration options.
    #     scheduler:
    #         disabled: true # Disable kube-scheduler on the node.
    # # Used to provide static pod definitions to be run by the kubelet directly bypassing the kube-apiserver.
    # # nginx static pod.
    # pods:
    #     - apiVersion: v1
    #       kind: pod
    #       metadata:
    #         name: nginx
    #       spec:
    #         containers:
    #             - image: nginx
    #               name: nginx
    # # Used to partition, format and mount additional disks.
    # # MachineDisks list example.
    # disks:
    #     - device: /dev/sdb # The name of the disk to use.
    #       # A list of partitions to create on the disk.
    #       partitions:
    #         - mountpoint: /var/mnt/extra # Where to mount the partition.
    #           
    #           # # The size of partition: either bytes or human readable representation. If `size:` is omitted, the partition is sized to occupy the full disk.
    #           # # Human readable representation.
    #           # size: 100 MB
    #           # # Precise value in bytes.
    #           # size: 1073741824
    # # Allows the addition of user specified files.
    # # MachineFiles usage example.
    # files:
    #     - content: '...' # The contents of the file.
    #       permissions: 0o666 # The file's permissions in octal.
    #       path: /tmp/file.txt # The path of the file.
    #       op: append # The operation to use
    # # The `env` field allows for the addition of environment variables.
    # # Environment variables definition examples.
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: info
    #     GRPC_GO_LOG_VERBOSITY_LEVEL: "99"
    #     https_proxy: http://SERVER:PORT/
    # env:
    #     GRPC_GO_LOG_SEVERITY_LEVEL: error
    #     https_proxy: https://USERNAME:PASSWORD@SERVER:PORT/
    # env:
    #     https_proxy: http://DOMAIN\USERNAME:PASSWORD@SERVER:PORT/
    # # Used to configure the machine's time settings.
    # # Example configuration for cloudflare ntp server.
    # time:
    #     disabled: false # Indicates if the time service is disabled for the machine.
    #     # description: |
    #     servers:
    #         - time.cloudflare.com
    #     bootTimeout: 2m0s # Specifies the timeout when the node time is considered to be in sync unlocking the boot sequence.
    # # Used to configure the machine's sysctls.
    # # MachineSysctls usage example.
    # sysctls:
    #     kernel.domainname: talos.dev
    #     net.ipv4.ip_forward: "0"
    #     net/ipv6/conf/eth0.100/disable_ipv6: "1"
    # # Used to configure the machine's sysfs.
    # # MachineSysfs usage example.
    # sysfs:
    #     devices.system.cpu.cpu0.cpufreq.scaling_governor: performance
    # # Machine system disk encryption configuration.
    # systemDiskEncryption:
    #     # Ephemeral partition encryption.
    #     ephemeral:
    #         provider: luks2 # Encryption provider to use for the encryption.
    #         # Defines the encryption keys generation and storage method.
    #         keys:
    #             - # Deterministically generated key from the node UUID and PartitionLabel.
    #               nodeID: {}
    #               slot: 0 # Key slot number for LUKS2 encryption.
    #               
    #               # # KMS managed encryption key.
    #               # kms:
    #               #     endpoint: https://192.168.88.21:4443 # KMS endpoint to Seal/Unseal the key.
    #         
    #         # # Cipher kind to use for the encryption. Depends on the encryption provider.
    #         # cipher: aes-xts-plain64
    #         # # Defines the encryption sector size.
    #         # blockSize: 4096
    #         # # Additional --perf parameters for the LUKS2 encryption.
    #         # options:
    #         #     - no_read_workqueue
    #         #     - no_write_workqueue
    # # Configures the udev system.
    # udev:
    #     # List of udev rules to apply to the udev system
    #     rules:
    #         - SUBSYSTEM=="drm", KERNEL=="renderD*", GROUP="44", MODE="0660"
    # # Configures the logging system.
    # logging:
    #     # Logging destination.
    #     destinations:
    #         - endpoint: tcp://1.2.3.4:12345 # Where to send logs. Supported protocols are "tcp" and "udp".
    #           format: json_lines # Logs format.
    # # Configures the kernel.
    # kernel:
    #     # Kernel modules to load.
    #     modules:
    #         - name: brtfs # Module name.
    # # Configures the seccomp profiles for the machine.
    # seccompProfiles:
    #     - name: audit.json # The `name` field is used to provide the file name of the seccomp profile.
    #       # The `value` field is used to provide the seccomp profile.
    #       value:
    #         defaultAction: SCMP_ACT_LOG
    # # Configures the node labels for the machine.
    # # node labels example.
    # nodeLabels:
    #     exampleLabel: exampleLabelValue
    # # Configures the node taints for the machine. Effect is optional.
    # # node taints example.
    # nodeTaints:
    #     exampleTaint: exampleTaintValue:NoSchedule
# Provides cluster specific configuration options.
cluster:
    # Globally unique identifier for this cluster (base64 encoded random 32 bytes).
    id: UKQ1WV9D5R6TGbtdmIi155HZY1O6QU6kZeySMJntgy0=
    # Shared secret of cluster (base64 encoded random 32 bytes).
    secret: ENC[AES256_GCM,data:6SyuTbIcqIaI2eLSQuR4lppnvnBhqVV7Z8y+zUWD1Z3djRmc6OGefgdvyxY=,iv:wz7ZFrYqp/qXJL46iuUmKSdjwrbvyMuoT7NeM9ErNR0=,tag:HZ89bEUrlRST4mIgp9JWuA==,type:str]
    # Provides control plane specific configuration options.
    controlPlane:
        # Endpoint is the canonical controlplane endpoint, which can be an IP address or a DNS hostname.
        endpoint: https://192.168.2.2:6443
    # Configures the cluster's name.
    clusterName: homecluster
    # Provides cluster specific network configuration options.
    network:
        # The domain used by Kubernetes DNS.
        dnsDomain: cluster.local
        # The pod subnet CIDR.
        podSubnets:
            - 10.244.0.0/16
        # The service subnet CIDR.
        serviceSubnets:
            - 10.96.0.0/12
            # # The CNI used.
            # cni:
            #     name: custom # Name of CNI to use.
            #     # URLs containing manifests to apply for the CNI.
            #     urls:
            #         - https://docs.projectcalico.org/archive/v3.20/manifests/canal.yaml
    # The [bootstrap token](https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/) used to join the cluster.
    token: ENC[AES256_GCM,data:eq7xtHfvPc3zK0ROgb6RupGi68ou3Wg=,iv:kYFsdk80Rcx5qGGH2oRm3XZtMO1aTZV+SQUrvB/zdb4=,tag:+eBWqBZQcB6RlF4tBWoyPg==,type:str]
    # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    secretboxEncryptionSecret: dpNEdMf665r3GQ+7ROUQerFTzWbyfjEKaWypf27573g=
    # The base64 encoded root certificate authority used by Kubernetes.
    ca:
        crt: ENC[AES256_GCM,data:6j6LykrFOwuaxRWqmBoym7XLt+0KYekYwBjHZmCOX+Pq8ZK/CrQz97FsY85Mk52nGFqEOr5mCt/i/2cBtRCNCc/VtVXkW0OEP7vFxi1jOL2TDdrYdrnNDwZVGUAEVRqxR4uTIBxzz2jIyzsIoQk527f2B2BqDNivdEBt1i+TUNF/nV1rhbXtRLgTl3zOnomqsO/shJ40kMfCLt8wx5zF8lb0PnntBnMvI8W5LZmbGd6ujCum0zPW/1yO91fq+4bmMyMyxN4ykuS1wxGJoCHW7MdGOndrB9rxvoQliZG7edcoDlmUKFBGT8ce+VTyldJvBsORO9tFJt1wUXi6Ip6hqNDQ0D/U64aSX2MhKxlwmD2/IesY4utLicwzX4i1DrFM6qgtJQoZZNVcoreQWSIr1FcpQJPhm1G5Z3EvrsUxfQKxam7wJZZOdmeN3EzLaEePVGA3YCYDHH/5rC9e2TAQ1oPxgSKHLLmAgoP9Ye+cS/Zitwx9EV4MrBR4okwbH04a1oFjhvr7HwmfVywT6L2Z390TxFiJH+CBj/jGL9xlu3Ny8T2KKSGHpXbY3VEngMuK0F2kHMytCHdVq8xTIHg0ojjo74bziSLlUAJj98VuVni4MOIPsaIddBr/2qnAlw+tvk8txtlHXmcBgMcPpf4GUMAEkycuAUmkN7HB96fXJk5tRv5FL5PJSSj57HZXxml068WrFCWlwyMlpznPF+JYR59TmueCmcA4nlpw5Ke4Noi7+Jj5hQmWyJ6UZfEjoRsJOUxvh1v6NMZaZ1F6+SShRKy5jQUNx50kuK4DmXu6KszaaiJ8Cg9L++SafkI+jBjHmwYaSSW4GObvJ5j1nhp+PQGb0R8qLd0lwGLtPjyVqQphDoc1NeXAqVKr168FUQYXLQlJRoG8T9qZjVVy+CBdWHhP7aNg6wqgIjXL5vim3UELEuHZsClDBfmIxAEOphAOyunrlMNXUioLVbffIo44pkWFhQnm44wiur8yobLf4PliLujrwWmQ3sGTROTD0hLf6lHOV5b+pYDrJKG8BFZUjgFzhYsZnZWfXbDyGw==,iv:YgXs4v2+PlnZhTKd3QOAdcXTUks1AaEaN39+5f0mMGY=,tag:il17VUatomOb3SmAaFdUgw==,type:str]
        key: ENC[AES256_GCM,data:LShg+4zEE0hIDr3sx1V0bDIxsKcPUWPjZkEuhdaypy8D2p+GfTvChWAxIW3T+nCPGuggp//oxgA0wfxbPxf5DRRn+FvZHWUZXIYEtmMZ9rdDBGetqK6y6gTqoVr5IP9h4sQKN4fBiqYziRh8bHzascXLg4Q4JVQA7+WF2rUaJH2HFV3E5FcbnrInTcRRBZiRMGr6vKb7Mv8Nss7Wq8GdxXXzTyKxzdQwJ1s18tG+Q86Mlue7/1S2lF6UVBBbnU49VLJ2mXjTMUcQ/8bO3fyHw07XE9+t2anr8ZSehVv3L5LDCKZPreFJopcP+60ahwKPnNMBGBm24xWLYL0YWHCVawCC/jKG3ZlbiuBSdQj5jZZnL4AhhJSCYLKsTDhmyP7clrVo7ejGSZRzRLD7W6SWYQ==,iv:JrjoEzTY2PNVRl8yei7DMxaPVIjzXVzNcJSPKcWCY1o=,tag:Ftu/IPcbvyQ48dSM37gnZg==,type:str]
    # The base64 encoded aggregator certificate authority used by Kubernetes for front-proxy certificate generation.
    aggregatorCA:
        crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJYakNDQVFXZ0F3SUJBZ0lRYW1FRkhNUzdqZk1sR2ptbzZsL21mekFLQmdncWhrak9QUVFEQWpBQU1CNFgKRFRJME1EWXhNVEF6TXpJMU5sb1hEVE0wTURZd09UQXpNekkxTmxvd0FEQlpNQk1HQnlxR1NNNDlBZ0VHQ0NxRwpTTTQ5QXdFSEEwSUFCTkRlKzFsNHNaQ1grd0pLajJYbEJEdW84MitEZzJxWkpjMVBlbVJ3czlVUzFMVlBkTlEwCjFTSHhsSnlEaFNyTmpxLzV6emsxRWpyTlZQQ3A5NWVrVzNxallUQmZNQTRHQTFVZER3RUIvd1FFQXdJQ2hEQWQKQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZApCZ05WSFE0RUZnUVV1UTBEZFlQeW9Kak9vcmRUKzM5SkloYmUzMzB3Q2dZSUtvWkl6ajBFQXdJRFJ3QXdSQUlnCkh4ZTJlaURwVHk3VXV0NnYyZXNrOUxkUU5RbUI2aGcxUlNRZ2pNeUhmck1DSUZEQmpQWjlPZXJvdnROTGJGaXYKcWc2cytGK1dvTHduK2wveVZLVkxjMEVNCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
        key: ENC[AES256_GCM,data:99h9mChvpRbAnU6VqQIcEmI2r3wFGolGED1QNWDwmcDyu++Bl+PzxxXMq3VDbtbX4edSbj+ChLPJDIDFC0gU+RECkoDkOl3tvaSJuvPnaCLQQE1G76gYsFbE/In2mU1TgfMLTifh5gcjvbyAJcruw2HihgIJ4wS12w6umBCHVKi3hT9QC6/J2bSiOPsRPO5vB07GpJ4srOcN9gtIUDPlf/RzAj9cWhI0E7OmZWYSUWK87wohoEIjoR8YYwuwQIJuEiljlhOGDv57Zt5V+tUmaEBMqX53pLAJCjKR9XV8Fg4Jc58cq53XhUnN6/LymZ9IZpeOHsLy/k+Qtw31d6oGi9CoN9DkHAXQkMCBB3jFXGSapViq1pEqC7zSaC69lGE8wROWgFEShOiWb5iitlb7KQ==,iv:psUghAvyFZ7UQ48xEFZhtpmWZ2hENBv3ohZGgzmkPiA=,tag:MwvLSVfdstQuCx5znzoggg==,type:str]
    # The base64 encoded private key for service account token generation.
    serviceAccount:
        key: ENC[AES256_GCM,data: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,iv:dRmJat2U9h2+/KUEN+W+qHnY0/wtN7liklUFBBP3MCI=,tag:E7fo6+wURWo8uGb2R5hXjQ==,type:str]
    # API server specific configuration options.
    apiServer:
        # The container image used in the API server manifest.
        image: registry.k8s.io/kube-apiserver:v1.30.2
        # Extra certificate subject alternative names for the API server's certificate.
        certSANs:
            - 192.168.2.2
        # Disable PodSecurityPolicy in the API server and default manifests.
        disablePodSecurityPolicy: true
        # Configure the API server admission plugins.
        admissionControl:
            # Name is the name of the admission controller.
            - name: PodSecurity
              # Configuration is an embedded configuration object to be used as the plugin's
              configuration:
                apiVersion: pod-security.admission.config.k8s.io/v1alpha1
                defaults:
                    audit: restricted
                    audit-version: latest
                    enforce: baseline
                    enforce-version: latest
                    warn: restricted
                    warn-version: latest
                exemptions:
                    namespaces:
                        - kube-system
                    runtimeClasses: []
                    usernames: []
                kind: PodSecurityConfiguration
        # Configure the API server audit policy.
        auditPolicy:
            apiVersion: audit.k8s.io/v1
            kind: Policy
            rules:
                - level: Metadata
    # Controller manager server specific configuration options.
    controllerManager:
        # The container image used in the controller manager manifest.
        image: registry.k8s.io/kube-controller-manager:v1.30.2
    # Kube-proxy server-specific configuration options
    proxy:
        # The container image used in the kube-proxy manifest.
        image: registry.k8s.io/kube-proxy:v1.30.2
        # # Disable kube-proxy deployment on cluster bootstrap.
        # disabled: false
    # Scheduler server specific configuration options.
    scheduler:
        # The container image used in the scheduler manifest.
        image: registry.k8s.io/kube-scheduler:v1.30.2
    # Configures cluster member discovery.
    discovery:
        # Enable the cluster membership discovery feature.
        enabled: true
        # Configure registries used for cluster member discovery.
        registries:
            # Kubernetes registry uses Kubernetes API server to discover cluster members and stores additional information
            kubernetes:
                # Disable Kubernetes discovery registry.
                disabled: true
            # Service registry is using an external service to push and pull information about cluster members.
            service: {}
            # # External service endpoint.
            # endpoint: https://discovery.talos.dev/
    # Etcd specific configuration options.
    etcd:
        # The `ca` is the root certificate authority of the PKI.
        ca:
            crt: ENC[AES256_GCM,data:/4c/aoLEzWCM5v7CMsnoLklHQyZwWdeEJRFbbgkLTRee8vmv57mBBvtZsUSuaAt2HBcKcwvMl2SHQjpyjgKodk5PFee6EQWQHt7DJkJQWPH/dn3aplPoSx2BOSHigZxZ+m16H3O0XAu/XKsE3GKA6Ew6yylu2LFkcISzF3pM3FXLdi45YfGZqwuq6LKXAOlFXkiyxTMvaHPrRD/3Z+gbqmNSje6LSlBTixdv0qujZzgAA3ttxjhCJaN0+ylmkOupc0QToRfhz6SI7dlzH2cKajsYLNj8JZNZCiZ+v/OJwPYJekUnTzXVs0bnKYIyoDkytXvSJB85w08eaqQGdDfs7QLJJgz5ke9lbZIayRszYa5O4E9J7v6K8li9iGrJXhcEZlLwhzZ4E33UUQZC3w510PFzN1FcQ2557E4X7Rt39wSonaJMHOMlYTd7ovLwtKIu/va6V5kgEKebimBilYiZq5QHGtYS3d+FndZr+1bNfYjDuO4LfwRseL82XDADucdM9NGKwurIHvmoVTOLna8DobztZ08EWDrhae8Cn4Pjs9oKqlWRITkq3Rqj/sF/bMmSCefsR8iRc9RhUBHLroSjbb+d7avKSM75viEm8euNtQiUXSUMqWvgJIbqazsREEx5Ki8MteF65Zz3XdbgHhLuhWGWXA0qWYHLVJFTVHDw58AbCKDnNUtqo/oRNhF6mKCl17fjh7OXN/uYse82DPw7G03xZlW0o0oz62eTffajtGp5vIS7jZkssQz5V9NyHvJM3Dwd0i+Nj8wqJ+Azq5qyEojOfux0p9YAZ0AvUkPb/d0Xd9u0yvsfeXb44IGklvvIJz108ZmpLdIHyXEJPPk9UoXFyojZWI9EOTFI5f0CCnE7tx7FMPJV7mbgtMpLztE7Bm0GW1f/ZMY2PSIGHDLmtB3W1uv2dH2gEqLj3/8Cq1GttpVqtF65agm7IWAGy0c2u8vgo+zo1SXb6Mp65PYT8dC8/2xkDtWbhWu2sRmVPuYI6t0rw3gl++IFaHsO6P/mziUMZg==,iv:UHqKDpvxkF6wt1GD/2BC/j2nBdJtr3ckHhj3Goc7hDc=,tag:ZtjSufsCRGVFCxnmpQ+lMQ==,type:str]
            key: ENC[AES256_GCM,data:j97CZullXJfNlSMGVAyPVg+avn/YAzGb69bc1hYnVk/tB3Xomx71D5qxKupcl9OSDxPErnliZg9DmNzyTo1lcUhXPKQ+S97oJC4RBFyh0aczhUgVNzIWj3mLr/S2kjRdKvb8ua6xqXG7cld56PZKsNTVSGDqQ8Fawp3c0ePEAZQ2v4YPge8KEtCPmxr1KFPCwoxcyHakD0xtt+Sjl/cxBQMB4yQz1YW8KDZMSX3+3gnUlaKkpU0J9wkuMSSPW1UVDuKnEK0y8YkCisyrT0/S2jwOtgDch4OWz34it0Hu2SEKphp+K02ArC9cjcGCWpIKHELJ6tVw5uQHmlIurl3dnWOiPR+oR0VxnYNEB6GY5gcqfiTXaNTicHarVGeUaHow0y/bSn/TJToXK4LrfIGoFQ==,iv:UFeTAioNDIhzSoTpjo+AM+Oah1a0jpshduyVJDLRK/Y=,tag:/ltVTaQKci6ujL3mI6V5Jg==,type:str]
            #ENC[AES256_GCM,data:G1KlWt+Pt4sBS5GQVXJ2zU3VFmSgA3VlvmZ8GudT3TSNDedXu64nzcuCV0ZqUK0LefLIuJAh0g==,iv:Yx2BiHHateMcgYLXUGVBdPdJIx+xJAazrdWvzpeGc3w=,tag:fipUPcYEWMSOzuqsVGpSnw==,type:comment]
            #ENC[AES256_GCM,data:8Ux391c2Z+dwh5/CprLEZbzqvz+S8y+IQ7NKMeasf1n/fnM2KmrNF6LuAVZy8zFDT8Y=,iv:EiMyU9MeSpzo1/P9+PSPPhvE8Y0/5vtXDAQdwDxVMN4=,tag:aaGATnDOaRZ6iO3fI5REGg==,type:comment]
            #ENC[AES256_GCM,data:GOwH4FBhqMgLv39gDe1UbhsYacjyx7cKTC901/VL0L2qZlo2Fxyqx1VcwfehN5DFx92f6RNaTs+Vy2XAqz0mMLlCdCCKzsTTRqzNCBVYTHxDPV7HDJRoV7c=,iv:GiQ1/OclYijO2ie5HWoaog8iql8WVfOTztHFzZheszI=,tag:Cs2RWlj1YO1vpnd87fSJfA==,type:comment]
            #ENC[AES256_GCM,data:qJLUThdbzwIr1YH0FeBljxZuZA==,iv:h+Nrikai/4+FbWeMw1SRGjRckQaRL0maDSGur9+DB+g=,tag:iideiXxi6b7tk6uFezSb1A==,type:comment]
            #ENC[AES256_GCM,data:InNhqeL6Azj1XpTSMxEmLgg=,iv:zlMy08YCjeGLETCwHuht4vmhR26G/Sps+VSikZacUEQ=,tag:5B88uag0vQkL8TLBeRmz8A==,type:comment]
    # A list of urls that point to additional manifests.
    extraManifests: []
    #   - https://www.example.com/manifest1.yaml
    #   - https://www.example.com/manifest2.yaml
    # A list of inline Kubernetes manifests.
    inlineManifests: []
    #   - name: namespace-ci # Name of the manifest.
    #     contents: |- # Manifest contents as a string.
    #       apiVersion: v1
    #       kind: Namespace
    #       metadata:
    #       	name: ci
    # # A key used for the [encryption of secret data at rest](https://kubernetes.io/docs/tasks/administer-cluster/encrypt-data/).
    # # Decryption secret example (do not use in production!).
    # aescbcEncryptionSecret: z01mye6j16bspJYtTB/5SFX8j7Ph4JXxM2Xuu4vsBPM=
    # # Core DNS specific configuration options.
    # coreDNS:
    #     image: registry.k8s.io/coredns/coredns:v1.11.1 # The `image` field is an override to the default coredns image.
    # # External cloud provider configuration.
    # externalCloudProvider:
    #     enabled: true # Enable external cloud provider.
    #     # A list of urls that point to additional manifests for an external cloud provider.
    #     manifests:
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/rbac.yaml
    #         - https://raw.githubusercontent.com/kubernetes/cloud-provider-aws/v1.20.0-alpha.0/manifests/aws-cloud-controller-manager-daemonset.yaml
    # # A map of key value pairs that will be added while fetching the extraManifests.
    # extraManifestHeaders:
    #     Token: "1234567"
    #     X-ExtraInfo: info
    # # Settings for admin kubeconfig generation.
    # adminKubeconfig:
    #     certLifetime: 1h0m0s # Admin kubeconfig certificate lifetime (default is 1 year).
    # # Allows running workload on control-plane nodes.
    allowSchedulingOnControlPlanes: true
sops:
    kms: []
    gcp_kms: []
    azure_kv: []
    hc_vault: []
    age: []
    lastmodified: "2024-07-14T00:16:12Z"
    mac: ENC[AES256_GCM,data:z2E52PwSB/nUkKiuymbIYVF8Hx0Cjx3uIKJYf0Gu4v1C62w13J7rIOQWUQZ/Rr7/+AvEfFJmcV4yK0X6pTUSSssJDLOW5MitjLmtkKMA36reorY/hCUDPFHyTRvJNh4R6yobLDPsJsLhdDynp8f0jpFcDz1c2lA2MpPDggdBMts=,iv:C3djuwiSpxSr6Uv2jWztSHNG3skoH978Usdao40bu1E=,tag:E76ZXMNrakWkXnW30syYhw==,type:str]
    pgp:
        - created_at: "2024-07-14T00:16:12Z"
          enc: |-
            -----BEGIN PGP MESSAGE-----

            hQIMAwVxt8ZNZv4DAQ//ST/JGVltaY7jOd3I1bNRkMG7Qr4h5py42Zi8DYGSCm8e
            fp7NLSv5sHEBIqO44EkCtLC/+Y4yM62DkMbCps1eInuF7w4825yooJdrMItdUoYW
            0YNsIP0QTOlv9bFjA3DNvdXkR7KzVQuScGvqOlUiXbSlP8CTSOuUSmnGZUF0l19v
            OfbHL1Y69hxVPAU+yKGznausI/htenj9vNaPnoaW9yg93yM9iMDHbMW8LeI4HGcL
            KKxhbKjb86ArSJMn5h+FyF+zyQa14L1g9wl5r0LY+C/ZuVwh3+DxNYu1PZH46ZLj
            LeaT8qa5lqLQsBXD2Jh0OiSfQDDT80fCRxsJQZfQq6//Gvzjv5gwGjDxEhOVJDLu
            nJXVDyONv0nW4+I5OL5qwuDFqZ4YAuBH7FVwx3Mise64SjQ5t09mOwM+B9lct1Ca
            M7aXJthXENqqOXNX+BEkskhCQN6ryKR3pVqP8W2j3WzptmlX/XgubK+a3mUOviVP
            7URQ/AfLEoXaFSSbfGb3ZEfzm2QSiUldSWn0fZi8fgxC1cvucTInuY6/PGOsGIgx
            /Eb5W8Vexk+St/y75C7s5cItxifxoPUdGWN9IY0JkxjkaZkhI91hj3oc1SHw6zjM
            vVEO+Xg4/fK9c9KSJPgDK8ZQn/N6z0r3wQ5DidFpwtp6XL/rbJ1rMz/6GJoC16rU
            aAEJAhBfJW/uGBQUrZYpQCu2lksCPqaFeW71LcwDLrol+uNRH+ldqMGifKsG0M6o
            7E1CHA8ccywALNI2S2VXt+yUvzifNREijFV6YSZ/w/lpxeWAHXji2LBSoT4DXO37
            20PPKpNKltTj
            =avMs
            -----END PGP MESSAGE-----
          fp: BAFBAF486E2E489700A8639C2B75A847B165ECC2
    encrypted_regex: (ca|cert|key|secret|token)$
    version: 3.8.1
