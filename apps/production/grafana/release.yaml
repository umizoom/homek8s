---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: grafana
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: grafana
      version: 8.10.4
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: default
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    deploymentStrategy:
      type: Recreate
    # admin:
    #   existingSecret: grafana-admin-secret
    env:
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_EXPLORE_ENABLED: true
      GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS: natel-discrete-panel,pr0ps-trackmap-panel,panodata-map-panel
      GF_SECURITY_ANGULAR_SUPPORT_ENABLED: true
      GF_SERVER_ROOT_URL: https://metrics.basingse.ca
    grafana.ini:
      dashboards:
        default_home_dashboard_path: /var/lib/grafana/dashboards/default/unraid-docker.json
      analytics:
        check_for_updates: false
        check_for_plugin_updates: false
        reporting_enabled: false
      # auth.anonymous:
      #   enabled: true
      #   org_id: 1
      #   org_name: Main Org.
      #   org_role: Viewer
      news:
        news_feed_enabled: false
    datasources:
      datasources.yaml:
        apiVersion: 1
        # deleteDatasources:
        #   - { name: Loki }
        datasources:
          - name: Loki
            type: loki
            uid: loki
            access: proxy
            url: http://openebs-loki.openebs:3100
            jsonData:
              timeInterval: 1m
            # isDefault: true
          - name: Prometheus
            type: prometheus
            uid: prometheus
            access: proxy
            url: http://prometheus-server
            jsonData:
              timeInterval: 1m
            # isDefault: true
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ""
            type: file
            disableDeletion: false
            editable: false
            options:
              path: /var/lib/grafana/dashboards/default
    dashboards:
      default:
        unraid-docker:
          url: https://raw.githubusercontent.com/umizoom/homek8s/main/apps/production/grafana/dashboards/unraid-docker-dashboard.json
          datasource: Prometheus
        unraid:
          url: https://raw.githubusercontent.com/umizoom/homek8s/main/apps/production/grafana/dashboards/unraid-dashboard.json
          datasource: Prometheus
        opnsense:
          url: https://raw.githubusercontent.com/umizoom/homek8s/main/apps/production/grafana/dashboards/opnsense-dashboard.json
          datasource: Prometheus
        disk-pools:
          url: https://raw.githubusercontent.com/openebs/monitoring/refs/heads/develop/deploy/charts/dashboards/mayastor/mayastor-diskpool.json
          datasource: Prometheus
        volumes:
          url: https://raw.githubusercontent.com/openebs/monitoring/refs/heads/develop/deploy/charts/dashboards/mayastor/mayastor-volume.json
          datasource: Prometheus
        volume-replica:
          url: https://raw.githubusercontent.com/openebs/monitoring/refs/heads/develop/deploy/charts/dashboards/mayastor/mayastor-volume-replica.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2-monitoring-example/main/monitoring/configs/dashboards/control-plane.json
          datasource: Prometheus
        k8up-backups:
          url: https://raw.githubusercontent.com/umizoom/homek8s/main/apps/production/grafana/dashboards/k8up-backup.json
          datasource: Prometheus
        kubernetes-api-server:
          # renovate: depName="Kubernetes / System / API Server"
          gnetId: 15761
          revision: 17
          datasource: Prometheus
        kubernetes-coredns:
          # renovate: depName="Kubernetes / System / CoreDNS"
          gnetId: 15762
          revision: 18
          datasource: Prometheus
        kubernetes-global:
          url: https://raw.githubusercontent.com/umizoom/homek8s/main/apps/production/grafana/dashboards/k8-global-dashboard.json
          datasource: Prometheus
        kubernetes-namespaces:
          url: https://raw.githubusercontent.com/umizoom/homek8s/main/apps/production/grafana/dashboards/k8-namespaces-dashboard.json
          datasource: Prometheus
        kubernetes-nodes:
          url: https://raw.githubusercontent.com/umizoom/homek8s/main/apps/production/grafana/dashboards/k8-nodes-dashboard.json
          datasource: Prometheus
        kubernetes-pods:
          # renovate: depName="Kubernetes / Views / Pods"
          gnetId: 15760
          revision: 28
          datasource: Prometheus
        kubernetes-volumes:
          # renovate: depName="K8s / Storage / Volumes / Cluster"
          gnetId: 11454
          revision: 14
          datasource: Prometheus      
        # nginx:
        #   url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
        #   datasource: Prometheus
        # nginx-request-handling-performance:
        #   url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/request-handling-performance.json
        #   datasource: Prometheus
        # node-exporter-full:
        #   # renovate: depName="Node Exporter Full"
        #   gnetId: 1860
        #   revision: 37
        #   datasource: Prometheus
        # node-feature-discovery:
        #   url: https://raw.githubusercontent.com/kubernetes-sigs/node-feature-discovery/master/examples/grafana-dashboard.json
        #   datasource: Prometheus
        # prometheus:
        #   # renovate: depName="Prometheus"
        #   gnetId: 19105
        #   revision: 3
        #   datasource: Prometheus
        unpackerr:
          # renovate: depName="Unpackerr"
          gnetId: 18817
          revision: 1
          datasource:
            - { name: DS_PROMETHEUS, value: Prometheus }
        # volsync:
        #   # removate: depNmae="VolSync Dashboard"
        #   gnetId: 21356
        #   revision: 1
        #   datasource:
        #     - { name: DS_PROMETHEUS, value: Prometheus }
        #     - { name: VAR_REPLICATIONDESTNAME, value: .*-dst }
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        label: grafana_dashboard
        folderAnnotation: grafana_folder
        provider:
          disableDelete: true
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
        labelValue: ""
    plugins:
      - grafana-clock-panel
      - grafana-piechart-panel
      - grafana-worldmap-panel
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - vonage-status-panel
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: nginx 
        cert-manager.io/cluster-issuer: letsencrypt
      ingressClassName: nginx
      hosts: ["metrics.basingse.ca"]
      tls:
      - hosts:
        - metrics.basingse.ca
        secretName: metrics-tls-secret
    persistence:
      enabled: false
    testFramework:
      enabled: false
